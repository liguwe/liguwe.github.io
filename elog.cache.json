{
  "docs": [
    {
      "id": 176716796,
      "doc_id": "yaz2vh30ea8p7x43",
      "updated": 1720178162000,
      "properties": {
        "title": "链表的双指针技巧合集",
        "urlname": "yaz2vh30ea8p7x43",
        "date": "2024-07-05 19:15:01",
        "updated": "2024-07-05 19:16:02",
        "author": "liguwe",
        "description": "createAt: 2023-12-23 15:17:13updateAt: 2023-12-23category: 算法private: truedone: falsetags:#算法/链表第 1 题：合并两个有序单链表https://leetcode.cn/problems/merge-t..."
      },
      "catalog": [],
      "realName": "yaz2vh30ea8p7x43",
      "relativePath": "/yaz2vh30ea8p7x43.md",
      "docPath": "post"
    },
    {
      "id": 176716682,
      "doc_id": "sth8xr4l6zogso84",
      "updated": 1720177968000,
      "properties": {
        "title": "二维数组的遍历技巧汇总",
        "urlname": "sth8xr4l6zogso84",
        "date": "2024-07-05 19:12:33",
        "updated": "2024-07-05 19:12:48",
        "author": "liguwe",
        "description": "updateAt: 2023.05.27category: 算法#算法 为什么需要单独聊聊这个话题动态规划 经常需要 遍历二维 dp 数组二维遍历，既考验编程能力，也考验一些技巧性思路如何初始化一个二维数组/**  * @description 初始化一个 3* 5 的二维数组，每个元素都是'..."
      },
      "catalog": [],
      "realName": "sth8xr4l6zogso84",
      "relativePath": "/sth8xr4l6zogso84.md",
      "docPath": "post"
    },
    {
      "id": 176716761,
      "doc_id": "gi3twisq3b1337qz",
      "updated": 1720178103000,
      "properties": {
        "title": "回溯算法",
        "urlname": "gi3twisq3b1337qz",
        "date": "2024-07-05 19:14:22",
        "updated": "2024-07-05 19:15:03",
        "author": "liguwe",
        "description": "updateAt: 2023.05.18done: falsecategory: 算法#算法/回溯  #算法/DFS回溯算法 与 DFS 算法的区别？其实回溯算法和我们常说的 DFS 算法非常类似，本质上就是一种暴力穷举算法。回溯算法 和 DFS 算法的细微差别是：回溯算法是在遍历「树枝」DF..."
      },
      "catalog": [],
      "realName": "gi3twisq3b1337qz",
      "relativePath": "/gi3twisq3b1337qz.md",
      "docPath": "post"
    },
    {
      "id": 176716646,
      "doc_id": "zbl1db669xvp4hiw",
      "updated": 1720177942000,
      "properties": {
        "title": "动态规划解题思路",
        "urlname": "zbl1db669xvp4hiw",
        "date": "2024-07-05 19:11:48",
        "updated": "2024-07-05 19:12:22",
        "author": "liguwe",
        "description": "createAt: 2024-01-14 11:15:24updateAt: 2024-01-14category: 算法private: truedone: falsetags:  - 算法  - 算法/动态规划动态规划问题的特点动态规划问题的一般形式就是求最值求解动态规划的核心问题是穷举 ..."
      },
      "catalog": [],
      "realName": "zbl1db669xvp4hiw",
      "relativePath": "/zbl1db669xvp4hiw.md",
      "docPath": "post"
    },
    {
      "id": 176716613,
      "doc_id": "tq2kmctm5phirwhr",
      "updated": 1720177906000,
      "properties": {
        "title": "常见的微前端方案及微前端的原理解析",
        "urlname": "tq2kmctm5phirwhr",
        "date": "2024-07-05 19:11:25",
        "updated": "2024-07-05 19:11:46",
        "author": "liguwe",
        "description": "updateAt: 2023.04.22category: 前端done: false#前端 #微前端有一个基座应用（主应用），来管理各个子应用的加载和卸载微前端的核心三大原则就是：独立运行、独立部署、独立开发从single-spa  到 qiankun基于 WebComponent   的 ..."
      },
      "catalog": [],
      "realName": "tq2kmctm5phirwhr",
      "relativePath": "/tq2kmctm5phirwhr.md",
      "docPath": "post"
    },
    {
      "id": 176716591,
      "doc_id": "tz3mi5gqs5l59ncv",
      "updated": 1720177867000,
      "properties": {
        "title": "不同的子序列个数",
        "urlname": "tz3mi5gqs5l59ncv",
        "date": "2024-07-05 19:10:53",
        "updated": "2024-07-05 19:11:07",
        "author": "liguwe",
        "description": "updateAt: 2023.04.11category: 算法#算法/动态规划 先回顾下动态规划的解题要点明确 dp 函数或数组的定义，从已知的「状态」中推导出未知的「状态」就算 dp 函数/数组的定义相同，如果你使用不同的「视角」进行穷举，效率也不见得是相同的，如下  [[#两种穷举的思路..."
      },
      "catalog": [],
      "realName": "tz3mi5gqs5l59ncv",
      "relativePath": "/tz3mi5gqs5l59ncv.md",
      "docPath": "post"
    },
    {
      "id": 176716458,
      "doc_id": "zqgi2fpd7ac3dqn4",
      "updated": 1720177735000,
      "properties": {
        "title": "Vue中的编译器原理",
        "urlname": "zqgi2fpd7ac3dqn4",
        "date": "2024-07-05 19:08:35",
        "updated": "2024-07-05 19:08:55",
        "author": "liguwe",
        "description": "#vue #2023/06/24 Vue.js 的模板和 JSX  都属于 领域特定语言(DSL)  编译器其实只是一段程序，它用来将“一种语言 A”  翻译成  “另外一 种语言 B”。完整的编译流程如下：教科书式的编译模型如上，但 Vue 模板有所不同，如下：[[#Vue.js 模板编译为..."
      },
      "catalog": [],
      "realName": "zqgi2fpd7ac3dqn4",
      "relativePath": "/zqgi2fpd7ac3dqn4.md",
      "docPath": "post"
    },
    {
      "id": 176716492,
      "doc_id": "dqb04ndy5of50yht",
      "updated": 1720177773000,
      "properties": {
        "title": "Vue3 的异步组件与函数式组件的实现原理",
        "urlname": "dqb04ndy5of50yht",
        "date": "2024-07-05 19:09:03",
        "updated": "2024-07-05 19:09:33",
        "author": "liguwe",
        "description": "#vue #2023/06/20 异步组件的概念即，以异步的方式加载并渲染一个组件。 这在页面性能 、 代码分割、服务端下发组件等场景中尤为重要异步组件的简易实现同步渲染，如下面的代码就是同步渲染的最简单的异步组件加载渲染实现：使用 import() 只异步渲染页面的某一部分关于 is，是vu..."
      },
      "catalog": [],
      "realName": "dqb04ndy5of50yht",
      "relativePath": "/dqb04ndy5of50yht.md",
      "docPath": "post"
    },
    {
      "id": 173003513,
      "doc_id": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "updated": 1720175803000,
      "properties": {
        "title": "翻转二叉树的两种解题思路",
        "urlname": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
        "date": "2024-06-09 14:24:50",
        "updated": "2024-07-05 18:36:43",
        "author": "liguwe",
        "description": "翻转二叉树的两种解题思路#算法/二叉树 #2023/06/13 二叉树的解题总纲 - 两种思路二叉树解题的思维模式分两类：1、是否可以通过遍历一遍二叉树得到答案？如果可以，用一个 traverse 函数配合外部变量来实现，这叫 「遍历」的思维模式。2、是否可以定义一个递归函数，通过子问题（子树..."
      },
      "catalog": [],
      "realName": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "relativePath": "/63bc4318-ebbc-5441-ab77-37d4705e0af2.md",
      "docPath": "post"
    },
    {
      "id": 173003512,
      "doc_id": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "updated": 1720175739000,
      "properties": {
        "title": "二叉树算法概述",
        "urlname": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
        "date": "2024-06-09 14:24:50",
        "updated": "2024-07-05 18:35:39",
        "author": "liguwe",
        "description": "二叉树算法概述#算法/二叉树  #2023/04/22总结二叉树的重要性：只要涉及到递归，就是二叉树问题理解二叉树的前后中序遍历，另外可参考 [[二叉树的前后中序遍历详解]] 二叉树的两种解法，另外可以参考  [[二叉树的两种解题思路]] 示例：二叉树的最大深度示例：求解二叉树的直径 层次遍历..."
      },
      "catalog": [],
      "realName": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "relativePath": "/7d001d04-2978-58c3-8b2d-2aedd27a1300.md",
      "docPath": "post"
    },
    {
      "id": 173001604,
      "doc_id": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "updated": 1717911692000,
      "properties": {
        "title": "算法/链表/反转单链表：反转全部、反转前 N 个节点、反转一部分",
        "urlname": "32a25aa6-b958-59f7-964b-33cc262560f0",
        "date": "2024-06-09 13:41:32",
        "updated": "2024-06-09 13:41:32",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "relativePath": "/32a25aa6-b958-59f7-964b-33cc262560f0.md",
      "docPath": "post"
    },
    {
      "id": 173001603,
      "doc_id": "6f964124-4281-5896-9c85-bef7889c1853",
      "updated": 1717911692000,
      "properties": {
        "title": "算法/二叉树/二叉树算法概述",
        "urlname": "6f964124-4281-5896-9c85-bef7889c1853",
        "date": "2024-06-09 13:41:31",
        "updated": "2024-06-09 13:41:32",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "6f964124-4281-5896-9c85-bef7889c1853",
      "relativePath": "/6f964124-4281-5896-9c85-bef7889c1853.md",
      "docPath": "post"
    },
    {
      "id": 172804453,
      "doc_id": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "updated": 1720177346000,
      "properties": {
        "title": "算法/基础/算法的复杂度评估",
        "urlname": "913adb85-34cd-560c-bd9f-f0190c86de81",
        "date": "2024-06-07 12:54:48",
        "updated": "2024-07-05 19:02:26",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "relativePath": "/913adb85-34cd-560c-bd9f-f0190c86de81.md",
      "docPath": "post"
    },
    {
      "id": 172664764,
      "doc_id": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "updated": 1720175753000,
      "properties": {
        "title": "算法：二叉树的前后中序遍历详解",
        "urlname": "b65bee99-7800-5167-88a2-c2cac2f47061",
        "date": "2024-06-06 13:50:13",
        "updated": "2024-07-05 18:35:53",
        "author": "liguwe",
        "description": "二叉树的前后中序遍历详解#算法/二叉树  #2023/06/06[!tip] 递归函数 可以理解为一个 指针递归顺序是不会变的前后中序是三个不同的时间点 或 时机[!tip] 移步至： #语雀  https://www.yuque.com/liguwe/agorithms/gzg70n2dxb..."
      },
      "catalog": [],
      "realName": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "relativePath": "/b65bee99-7800-5167-88a2-c2cac2f47061.md",
      "docPath": "post"
    },
    {
      "id": 172778725,
      "doc_id": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "updated": 1717725675000,
      "properties": {
        "title": "算法/基础/基本的数据结构",
        "urlname": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
        "date": "2024-06-07 10:01:15",
        "updated": "2024-06-07 10:01:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "relativePath": "/0457a71b-6e9d-5a9b-a007-f6fc64c2a523.md",
      "docPath": "post"
    },
    {
      "id": 172664762,
      "doc_id": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "updated": 1720175763000,
      "properties": {
        "title": "算法：二叉树的两种解题思路",
        "urlname": "ca21f673-03b2-586c-b334-2ab48bec490e",
        "date": "2024-06-06 13:50:12",
        "updated": "2024-07-05 18:36:03",
        "author": "liguwe",
        "description": "二叉树的两种解题思路#树/二叉树 #2023/06/06[!tip]移步至： #语雀   https://www.yuque.com/liguwe/agorithms/nu6uaih4ff4cgdz9#cyYuw阅读原文https://liguwe.github.io/post/ca21f67..."
      },
      "catalog": [],
      "realName": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "relativePath": "/ca21f673-03b2-586c-b334-2ab48bec490e.md",
      "docPath": "post"
    },
    {
      "id": 172664759,
      "doc_id": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "updated": 1717914287000,
      "properties": {
        "title": "算法/动态规划/最长递增子序列",
        "urlname": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
        "date": "2024-06-06 13:50:11",
        "updated": "2024-06-09 14:24:47",
        "author": "liguwe",
        "description": "最长递增子序列#2023/03/24  #算法/动态规划[!tip] 移步至： #语雀   https://www.yuque.com/liguwe/agorithms/lapm7trwgfnfvys0另外可参考  [[最长递增子序列 + 俄罗斯套娃信封问题]]  ，内容有重复阅读原文http..."
      },
      "catalog": [],
      "realName": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "relativePath": "/14fe0ff1-8842-5283-a9f7-fc11ffe78ea1.md",
      "docPath": "post"
    },
    {
      "id": 172626939,
      "doc_id": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "updated": 1720176619000,
      "properties": {
        "title": "算法/动态规划/最长递增子序列 + 俄罗斯套娃信封问题",
        "urlname": "bd4652d6-8954-5bf3-804d-0118ed1007be",
        "date": "2024-06-06 09:42:00",
        "updated": "2024-07-05 18:50:19",
        "author": "liguwe",
        "description": "最长递增子序列 + 俄罗斯套娃信封问题#算法/动态规划 #2023/03/24最长递增子序列https://leetcode.cn/problems/longest-increasing-subsequence/「子序列」和「子串」的区别：  子串一定是连续的，而子序列不一定是连续的数学归纳法..."
      },
      "catalog": [],
      "realName": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "relativePath": "/bd4652d6-8954-5bf3-804d-0118ed1007be.md",
      "docPath": "post"
    },
    {
      "id": 172455737,
      "doc_id": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "updated": 1720176595000,
      "properties": {
        "title": "算法/树/树的一些基本概念",
        "urlname": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
        "date": "2024-06-05 06:54:15",
        "updated": "2024-07-05 18:49:55",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "relativePath": "/de7d537f-1a3d-572c-baaa-a98b3e5ff9d5.md",
      "docPath": "post"
    },
    {
      "id": 172664753,
      "doc_id": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "updated": 1717914286000,
      "properties": {
        "title": "算法/动态规划/俄罗斯套娃：二维最长递增子序列",
        "urlname": "0b8dc850-a493-515c-a1c0-c829410c6da2",
        "date": "2024-06-06 13:50:11",
        "updated": "2024-06-09 14:24:46",
        "author": "liguwe",
        "description": "俄罗斯套娃：二维最长递增子序列#算法/动态规划  #2023/03/24[!tip] 移步至： #语雀   https://www.yuque.com/liguwe/agorithms/xh82rz1hu7r84xl4另外参考 [[最长递增子序列 + 俄罗斯套娃信封问题]] ，内容有重复阅读原..."
      },
      "catalog": [],
      "realName": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "relativePath": "/0b8dc850-a493-515c-a1c0-c829410c6da2.md",
      "docPath": "post"
    },
    {
      "id": 172455735,
      "doc_id": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "updated": 1720176585000,
      "properties": {
        "title": "算法/栈/翻转二叉树的两种解题思路",
        "urlname": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
        "date": "2024-06-05 06:54:14",
        "updated": "2024-07-05 18:49:45",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "relativePath": "/5dad5968-f583-5c57-94ae-8aa692c69c9f.md",
      "docPath": "post"
    },
    {
      "id": 172455736,
      "doc_id": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "updated": 1717541655000,
      "properties": {
        "title": "算法/树/二叉堆与优先级队列的关系",
        "urlname": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
        "date": "2024-06-05 06:54:15",
        "updated": "2024-06-05 06:54:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "relativePath": "/5dd68a73-7991-5e3e-8bd6-3665771b24e5.md",
      "docPath": "post"
    },
    {
      "id": 172455734,
      "doc_id": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "updated": 1720176574000,
      "properties": {
        "title": "算法/框架/计算机算法的框架思维",
        "urlname": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
        "date": "2024-06-05 06:54:13",
        "updated": "2024-07-05 18:49:34",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "relativePath": "/8fbc80cc-ba66-5782-9643-31f176a3fa0a.md",
      "docPath": "post"
    },
    {
      "id": 172416659,
      "doc_id": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "updated": 1720176582000,
      "properties": {
        "title": "翻译/什么才是真正做事？",
        "urlname": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
        "date": "2024-06-04 20:50:53",
        "updated": "2024-07-05 18:49:42",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "relativePath": "/bceddf09-da9a-5795-9c4c-bb640f2bc363.md",
      "docPath": "post"
    },
    {
      "id": 172416658,
      "doc_id": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "updated": 1717505452000,
      "properties": {
        "title": "工具/Raycast 使用技巧总结",
        "urlname": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
        "date": "2024-06-04 20:50:52",
        "updated": "2024-06-04 20:50:52",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "relativePath": "/cd4960fb-1dd9-596f-b65a-96387bf6fe0a.md",
      "docPath": "post"
    },
    {
      "id": 172416656,
      "doc_id": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "updated": 1717505451000,
      "properties": {
        "title": "工具/Obsidian 快捷键",
        "urlname": "151a786a-a63e-5388-ada4-27be5aef5c4e",
        "date": "2024-06-04 20:50:51",
        "updated": "2024-06-04 20:50:51",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "relativePath": "/151a786a-a63e-5388-ada4-27be5aef5c4e.md",
      "docPath": "post"
    },
    {
      "id": 172416655,
      "doc_id": "4424154a-634d-5616-9c99-cbda52018d09",
      "updated": 1720177349000,
      "properties": {
        "title": "工具/Manico 快捷键",
        "urlname": "4424154a-634d-5616-9c99-cbda52018d09",
        "date": "2024-06-04 20:50:51",
        "updated": "2024-07-05 19:02:29",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "4424154a-634d-5616-9c99-cbda52018d09",
      "relativePath": "/4424154a-634d-5616-9c99-cbda52018d09.md",
      "docPath": "post"
    },
    {
      "id": 172416652,
      "doc_id": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "updated": 1717505450000,
      "properties": {
        "title": "工具/Github Copilot 使用技巧总结",
        "urlname": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
        "date": "2024-06-04 20:50:50",
        "updated": "2024-06-04 20:50:50",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "relativePath": "/3fd1b909-88c4-53e8-835c-1adbccf5cffc.md",
      "docPath": "post"
    },
    {
      "id": 172416651,
      "doc_id": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "updated": 1717552481000,
      "properties": {
        "title": "工具/Arc 浏览器使用技巧总结",
        "urlname": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
        "date": "2024-06-04 20:50:49",
        "updated": "2024-06-05 09:54:41",
        "author": "liguwe",
        "description": "Arc 浏览器使用技巧总结#常用工具 #工具 #工具技巧 #浏览器  #2023/11/25网站搜索 可以配置，直接配置百度，京东搜索，但一般用不着，直接谷歌就好了 命令行 可以完成任何操作Command-T → Tab，然后输入具体命令 空间 点击侧边栏底部的空间图标，进行添加可以通过 Co..."
      },
      "catalog": [],
      "realName": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "relativePath": "/a02c5897-1801-55ac-b0e0-6b4194b067fb.md",
      "docPath": "post"
    },
    {
      "id": 172416650,
      "doc_id": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "updated": 1717505449000,
      "properties": {
        "title": "播客/AI 时代的频率跃迁背景下个人的选择：高频的卷或低频的定",
        "urlname": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
        "date": "2024-06-04 20:50:49",
        "updated": "2024-06-04 20:50:49",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "relativePath": "/2888c80f-b109-5a54-bdbe-7c97a407ab59.md",
      "docPath": "post"
    },
    {
      "id": 171575084,
      "doc_id": "d89613a5-d295-55d4-8d69-2307afad7a8c",
      "updated": 1720178348000,
      "properties": {
        "title": "2023/0085.提示词工程师",
        "urlname": "d89613a5-d295-55d4-8d69-2307afad7a8c",
        "date": "2024-05-29 16:15:31",
        "updated": "2024-07-05 19:19:08",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "d89613a5-d295-55d4-8d69-2307afad7a8c",
      "relativePath": "/d89613a5-d295-55d4-8d69-2307afad7a8c.md",
      "docPath": "post"
    },
    {
      "id": 171575073,
      "doc_id": "f916d21d-9d57-52a7-baa0-99b6b24a5b58",
      "updated": 1720178463000,
      "properties": {
        "title": "2023/0077.Vue3 中 Transition 组件的实现原理",
        "urlname": "f916d21d-9d57-52a7-baa0-99b6b24a5b58",
        "date": "2024-05-29 16:15:28",
        "updated": "2024-07-05 19:21:03",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "f916d21d-9d57-52a7-baa0-99b6b24a5b58",
      "relativePath": "/f916d21d-9d57-52a7-baa0-99b6b24a5b58.md",
      "docPath": "post"
    },
    {
      "id": 171575071,
      "doc_id": "c752eefc-e877-529f-b4e8-78b03122840b",
      "updated": 1720178418000,
      "properties": {
        "title": "2023/0076.Vue3中 Teleport 组件的实现原理",
        "urlname": "c752eefc-e877-529f-b4e8-78b03122840b",
        "date": "2024-05-29 16:15:28",
        "updated": "2024-07-05 19:20:18",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "c752eefc-e877-529f-b4e8-78b03122840b",
      "relativePath": "/c752eefc-e877-529f-b4e8-78b03122840b.md",
      "docPath": "post"
    },
    {
      "id": 171575068,
      "doc_id": "cad548a6-9b49-5a8b-abad-3f4b0f3f70e0",
      "updated": 1720178480000,
      "properties": {
        "title": "2023/0074.Vue3 中 keepAlive组件的实现原理",
        "urlname": "cad548a6-9b49-5a8b-abad-3f4b0f3f70e0",
        "date": "2024-05-29 16:15:26",
        "updated": "2024-07-05 19:21:20",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "cad548a6-9b49-5a8b-abad-3f4b0f3f70e0",
      "relativePath": "/cad548a6-9b49-5a8b-abad-3f4b0f3f70e0.md",
      "docPath": "post"
    },
    {
      "id": 171575050,
      "doc_id": "17d00493-ed04-56d9-81b7-c6ed480aef12",
      "updated": 1720178325000,
      "properties": {
        "title": "2023/0067.贪心算法",
        "urlname": "17d00493-ed04-56d9-81b7-c6ed480aef12",
        "date": "2024-05-29 16:15:22",
        "updated": "2024-07-05 19:18:45",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "17d00493-ed04-56d9-81b7-c6ed480aef12",
      "relativePath": "/17d00493-ed04-56d9-81b7-c6ed480aef12.md",
      "docPath": "post"
    },
    {
      "id": 171575035,
      "doc_id": "09e22930-7d28-5390-8666-84f5e66295a1",
      "updated": 1720178445000,
      "properties": {
        "title": "2023/0035.Vue3 组件的实现原理",
        "urlname": "09e22930-7d28-5390-8666-84f5e66295a1",
        "date": "2024-05-29 16:15:18",
        "updated": "2024-07-05 19:20:45",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "09e22930-7d28-5390-8666-84f5e66295a1",
      "relativePath": "/09e22930-7d28-5390-8666-84f5e66295a1.md",
      "docPath": "post"
    },
    {
      "id": 171575009,
      "doc_id": "25ef9f60-aa9b-57cc-95c0-6ae8d7ff4923",
      "updated": 1720186823000,
      "properties": {
        "title": "2023/0028.BFS 算法",
        "urlname": "25ef9f60-aa9b-57cc-95c0-6ae8d7ff4923",
        "date": "2024-05-29 16:15:13",
        "updated": "2024-07-05 21:40:23",
        "author": "liguwe",
        "description": "0028.BFS 算法#算法/BFS算法 DFS 与 BFS 的区别其实 DFS 算法就是 回溯算法BFS 的核心思想，就是把一些问题抽象成图，从一个点开始，向四周开始扩散。一般来说，我们写 BFS 算法都是用「队列」这种数据结构，每次将一个节点周围的所有节点加入队列。BFS 找到的路径一定是..."
      },
      "catalog": [],
      "realName": "25ef9f60-aa9b-57cc-95c0-6ae8d7ff4923",
      "relativePath": "/25ef9f60-aa9b-57cc-95c0-6ae8d7ff4923.md",
      "docPath": "post"
    },
    {
      "id": 171575026,
      "doc_id": "4655c4c8-d29d-514b-a335-0e93c6c12e50",
      "updated": 1720178529000,
      "properties": {
        "title": "2023/0033.Vue3 的 Diff 算法",
        "urlname": "4655c4c8-d29d-514b-a335-0e93c6c12e50",
        "date": "2024-05-29 16:15:17",
        "updated": "2024-07-05 19:22:09",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "4655c4c8-d29d-514b-a335-0e93c6c12e50",
      "relativePath": "/4655c4c8-d29d-514b-a335-0e93c6c12e50.md",
      "docPath": "post"
    },
    {
      "id": 171575022,
      "doc_id": "483f2e40-8c18-5541-95ea-968c54cedc41",
      "updated": 1720178496000,
      "properties": {
        "title": "2023/0032.vue3 的渲染器原理",
        "urlname": "483f2e40-8c18-5541-95ea-968c54cedc41",
        "date": "2024-05-29 16:15:16",
        "updated": "2024-07-05 19:21:36",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "483f2e40-8c18-5541-95ea-968c54cedc41",
      "relativePath": "/483f2e40-8c18-5541-95ea-968c54cedc41.md",
      "docPath": "post"
    },
    {
      "id": 171574998,
      "doc_id": "6ab4f912-ece9-5cf0-88d8-4332c2412dfc",
      "updated": 1720178306000,
      "properties": {
        "title": "2023/0021.深入理解归并排序",
        "urlname": "6ab4f912-ece9-5cf0-88d8-4332c2412dfc",
        "date": "2024-05-29 16:15:09",
        "updated": "2024-07-05 19:18:26",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "6ab4f912-ece9-5cf0-88d8-4332c2412dfc",
      "relativePath": "/6ab4f912-ece9-5cf0-88d8-4332c2412dfc.md",
      "docPath": "post"
    },
    {
      "id": 171575001,
      "doc_id": "8e54dc8d-2b77-5366-95c5-4b68e45e40a4",
      "updated": 1720178562000,
      "properties": {
        "title": "2023/0023.Markdown格式编辑器研究",
        "urlname": "8e54dc8d-2b77-5366-95c5-4b68e45e40a4",
        "date": "2024-05-29 16:15:10",
        "updated": "2024-07-05 19:22:42",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "8e54dc8d-2b77-5366-95c5-4b68e45e40a4",
      "relativePath": "/8e54dc8d-2b77-5366-95c5-4b68e45e40a4.md",
      "docPath": "post"
    },
    {
      "id": 171574996,
      "doc_id": "76a8c0da-c4b2-5964-ac1c-4e11591d34e3",
      "updated": 1720178306000,
      "properties": {
        "title": "2023/0020.深入理解快速排序",
        "urlname": "76a8c0da-c4b2-5964-ac1c-4e11591d34e3",
        "date": "2024-05-29 16:15:08",
        "updated": "2024-07-05 19:18:26",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "76a8c0da-c4b2-5964-ac1c-4e11591d34e3",
      "relativePath": "/76a8c0da-c4b2-5964-ac1c-4e11591d34e3.md",
      "docPath": "post"
    },
    {
      "id": 171574977,
      "doc_id": "a51e78f1-ebc3-5f81-afe9-65570c3d2ebb",
      "updated": 1720178368000,
      "properties": {
        "title": "2023/0015.下降路径的最小和",
        "urlname": "a51e78f1-ebc3-5f81-afe9-65570c3d2ebb",
        "date": "2024-05-29 16:15:03",
        "updated": "2024-07-05 19:19:28",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "a51e78f1-ebc3-5f81-afe9-65570c3d2ebb",
      "relativePath": "/a51e78f1-ebc3-5f81-afe9-65570c3d2ebb.md",
      "docPath": "post"
    },
    {
      "id": 171574985,
      "doc_id": "1a2c10e4-97bc-59e1-8558-4e23670617c8",
      "updated": 1720178512000,
      "properties": {
        "title": "2023/0017.Vue3 的非原始值响应式方案",
        "urlname": "1a2c10e4-97bc-59e1-8558-4e23670617c8",
        "date": "2024-05-29 16:15:05",
        "updated": "2024-07-05 19:21:52",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "1a2c10e4-97bc-59e1-8558-4e23670617c8",
      "relativePath": "/1a2c10e4-97bc-59e1-8558-4e23670617c8.md",
      "docPath": "post"
    },
    {
      "id": 171574970,
      "doc_id": "aa2716eb-8a4f-5bf4-85ed-7152a9a5aa2c",
      "updated": 1720178394000,
      "properties": {
        "title": "2023/0014.最小编辑距离",
        "urlname": "aa2716eb-8a4f-5bf4-85ed-7152a9a5aa2c",
        "date": "2024-05-29 16:15:03",
        "updated": "2024-07-05 19:19:54",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "aa2716eb-8a4f-5bf4-85ed-7152a9a5aa2c",
      "relativePath": "/aa2716eb-8a4f-5bf4-85ed-7152a9a5aa2c.md",
      "docPath": "post"
    },
    {
      "id": 171574966,
      "doc_id": "3315d11d-10cf-5f53-89c4-fc98ce1c9dcc",
      "updated": 1720179072000,
      "properties": {
        "title": "2023/0013.最优子结构原理 和 DP 数组遍历方向",
        "urlname": "3315d11d-10cf-5f53-89c4-fc98ce1c9dcc",
        "date": "2024-05-29 16:15:02",
        "updated": "2024-07-05 19:31:12",
        "author": "liguwe",
        "description": "0013.最优子结构原理 和 DP 数组遍历方向#算法/动态规划 一、如何判断是否复合 最优子结构找全校最高分， ==>  那么每个班的最高分，这是复合最优子结构的找全校最大分差，并不能 通过找每个班最大分差来实现，这不符合最优子结构最优子结构失效情况 => 改造问题 ，即找出全校最高分 和 ..."
      },
      "catalog": [],
      "realName": "3315d11d-10cf-5f53-89c4-fc98ce1c9dcc",
      "relativePath": "/3315d11d-10cf-5f53-89c4-fc98ce1c9dcc.md",
      "docPath": "post"
    },
    {
      "id": 171574960,
      "doc_id": "abb0fb9e-2a86-5309-a34e-7b4fce3a2cc2",
      "updated": 1720178546000,
      "properties": {
        "title": "2023/0012.Vue 的响应式的系统设计原理",
        "urlname": "abb0fb9e-2a86-5309-a34e-7b4fce3a2cc2",
        "date": "2024-05-29 16:15:01",
        "updated": "2024-07-05 19:22:26",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "abb0fb9e-2a86-5309-a34e-7b4fce3a2cc2",
      "relativePath": "/abb0fb9e-2a86-5309-a34e-7b4fce3a2cc2.md",
      "docPath": "post"
    },
    {
      "id": 171574867,
      "doc_id": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "updated": 1720175725000,
      "properties": {
        "title": "张云帆的芒格之道",
        "urlname": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
        "date": "2024-05-29 16:14:28",
        "updated": "2024-07-05 18:35:25",
        "author": "liguwe",
        "description": "张云帆的芒格之道#播客 #2023/12/23一、知行合一人生的终极哲学是芒格所说「知行合一」  ：不仅能把事情做成，人生也是自恰的对知识诚实，知道就是知道，不知道就是不知道。知之为知之，不知为不知读书不会带来改变，思考不会带来改变，只有读书后的思考而带来的行动才会对生活有改变（即知行合一）对..."
      },
      "catalog": [],
      "realName": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "relativePath": "/3a29791d-db02-5ceb-acd0-6bf884b409ac.md",
      "docPath": "post"
    },
    {
      "id": 171574866,
      "doc_id": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "updated": 1716970468000,
      "properties": {
        "title": "播客/人生危机不是崩溃而是瓦解",
        "urlname": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
        "date": "2024-05-29 16:14:28",
        "updated": "2024-05-29 16:14:28",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "relativePath": "/040db9fb-a8f0-5bb4-b006-3efdf2bec160.md",
      "docPath": "post"
    },
    {
      "id": 171574865,
      "doc_id": "4214e1f9-529d-5201-b575-248082694fd6",
      "updated": 1720175441000,
      "properties": {
        "title": "前端/性能/长列表或大数据渲染优化的一些思路",
        "urlname": "4214e1f9-529d-5201-b575-248082694fd6",
        "date": "2024-05-29 16:14:27",
        "updated": "2024-07-05 18:30:41",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "4214e1f9-529d-5201-b575-248082694fd6",
      "relativePath": "/4214e1f9-529d-5201-b575-248082694fd6.md",
      "docPath": "post"
    },
    {
      "id": 168095560,
      "doc_id": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "updated": 1714865898000,
      "properties": {
        "title": "英语/语法/英语兔语法",
        "urlname": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
        "date": "2024-05-02 18:44:34",
        "updated": "2024-05-05 07:38:18",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "relativePath": "/15964b35-23bc-56d4-97db-1c4eacb8ea9e.md",
      "docPath": "post"
    },
    {
      "id": 168216264,
      "doc_id": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "updated": 1714780857000,
      "properties": {
        "title": "前端/Vue/Pinia状态管理库文档笔记",
        "urlname": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
        "date": "2024-05-04 08:00:56",
        "updated": "2024-05-04 08:00:57",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "relativePath": "/b3055a75-f4cc-52a0-93da-90e2eb1c913f.md",
      "docPath": "post"
    },
    {
      "id": 168095559,
      "doc_id": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "updated": 1714865907000,
      "properties": {
        "title": "算法/动态规划/斐波那契数列",
        "urlname": "e424cba0-1726-5c35-bbb3-89cca880de82",
        "date": "2024-05-02 18:44:33",
        "updated": "2024-05-05 07:38:27",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "relativePath": "/e424cba0-1726-5c35-bbb3-89cca880de82.md",
      "docPath": "post"
    },
    {
      "id": 168095558,
      "doc_id": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "updated": 1714865902000,
      "properties": {
        "title": "算法/动态规划/最小硬币数&凑零钱问题",
        "urlname": "164a9949-66e8-5cb8-99a0-148862c9c79a",
        "date": "2024-05-02 18:44:33",
        "updated": "2024-05-05 07:38:22",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "relativePath": "/164a9949-66e8-5cb8-99a0-148862c9c79a.md",
      "docPath": "post"
    },
    {
      "id": 168095557,
      "doc_id": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "updated": 1714865911000,
      "properties": {
        "title": "工具/Obsidina快捷键",
        "urlname": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
        "date": "2024-05-02 18:44:32",
        "updated": "2024-05-05 07:38:31",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "relativePath": "/e6506cdb-35eb-5497-ae29-ed5a2abf969f.md",
      "docPath": "post"
    },
    {
      "id": 168095556,
      "doc_id": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "updated": 1717911691000,
      "properties": {
        "title": "前端/架构/前端框架设计里的\"权衡\" 与\"选择\"",
        "urlname": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
        "date": "2024-05-02 18:44:31",
        "updated": "2024-06-09 13:41:31",
        "author": "liguwe",
        "description": "前端框架设计里的\"权衡\" 与\"选择\"#vue #前端架构  #2023/03/171、命令式框架与声明式框架Jquery 就是典型的 命令式框架，关注过程Vue 暴露给用户使用的是 声明式 ，但底层内部实现肯定也是 命令式 ，如下示例：面向用户的是声明式的<template>   <div @..."
      },
      "catalog": [],
      "realName": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "relativePath": "/da84854d-ebb9-5579-8c43-48155fe3f2f7.md",
      "docPath": "post"
    },
    {
      "id": 168095553,
      "doc_id": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "updated": 1714869391000,
      "properties": {
        "title": "前端/Vue/Vue3 框架设计的核心要素",
        "urlname": "a78f947d-5133-509b-a4a5-39e89591a91c",
        "date": "2024-05-02 18:44:31",
        "updated": "2024-05-05 08:36:31",
        "author": "liguwe",
        "description": "Vue3 框架设计的核心要素#前端 #前端框架  #vue  #2023/03/19以Vue3 为例，对于开发一个前端框架来说，有哪些核心要素呢？ 如下：1、开发体验报错警告提示，是否能够让开发者立马定位到问题比如 如何提示 App.mount('#app') 中 #app 节点 不存在开发调..."
      },
      "catalog": [],
      "realName": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "relativePath": "/a78f947d-5133-509b-a4a5-39e89591a91c.md",
      "docPath": "post"
    },
    {
      "id": 168095552,
      "doc_id": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "updated": 1720153995000,
      "properties": {
        "title": "前端/Vue/Vue 的整体设计思路",
        "urlname": "29a73693-d417-57af-bb3a-6efd95b22d93",
        "date": "2024-05-02 18:44:30",
        "updated": "2024-07-05 12:33:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "relativePath": "/29a73693-d417-57af-bb3a-6efd95b22d93.md",
      "docPath": "post"
    },
    {
      "id": 168095550,
      "doc_id": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "updated": 1720175691000,
      "properties": {
        "title": "实现批量请求并控制最大并发数",
        "urlname": "d7481637-7459-5c98-ba1f-5180cd1e0948",
        "date": "2024-05-02 18:44:28",
        "updated": "2024-07-05 18:34:51",
        "author": "liguwe",
        "description": "实现批量请求并控制最大并发数#前端 #2023/04/26 为了实现批量请求并控制最大并发数，我们可以使用Promise.all()和Promise.race()结合循环来实现先使用 setimeout 模拟请求/**  * 模拟异步请求  * @param {*} id 标识符  * @pa..."
      },
      "catalog": [],
      "realName": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "relativePath": "/d7481637-7459-5c98-ba1f-5180cd1e0948.md",
      "docPath": "post"
    },
    {
      "id": 168095549,
      "doc_id": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "updated": 1714646668000,
      "properties": {
        "title": "前端/JavaScript/如何检测页面是否在前台运行（检测页面的可见性）",
        "urlname": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
        "date": "2024-05-02 18:44:28",
        "updated": "2024-05-02 18:44:28",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "relativePath": "/9b12ad6f-17a2-58f2-bb9d-872e12428196.md",
      "docPath": "post"
    },
    {
      "id": 168095551,
      "doc_id": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "updated": 1714646670000,
      "properties": {
        "title": "前端/Typescript/重新学习 Typescript",
        "urlname": "a891fa95-1d24-524f-b241-c0cb7737d75e",
        "date": "2024-05-02 18:44:29",
        "updated": "2024-05-02 18:44:30",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "relativePath": "/a891fa95-1d24-524f-b241-c0cb7737d75e.md",
      "docPath": "post"
    },
    {
      "id": 168095548,
      "doc_id": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "updated": 1720175808000,
      "properties": {
        "title": "前端/JavaScript/为什么要用 setTimeout 模拟 setInterval ？",
        "urlname": "e5a02817-e232-5d13-a043-455e0e4140e6",
        "date": "2024-05-02 18:44:27",
        "updated": "2024-07-05 18:36:48",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "relativePath": "/e5a02817-e232-5d13-a043-455e0e4140e6.md",
      "docPath": "post"
    },
    {
      "id": 168095547,
      "doc_id": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "updated": 1720176569000,
      "properties": {
        "title": "前端/CSS/回流和重绘",
        "urlname": "465a49b1-860d-5c7e-a763-b8a32555fa08",
        "date": "2024-05-02 18:44:26",
        "updated": "2024-07-05 18:49:29",
        "author": "liguwe",
        "description": "回流和重绘#2023/03/17  #前端 #css 先看定义回流（或重排）：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置重绘：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制重绘不一定导致重排，但重排一定会导致重绘  ，如下图：导致回流的场景页面首次渲染浏览器..."
      },
      "catalog": [],
      "realName": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "relativePath": "/465a49b1-860d-5c7e-a763-b8a32555fa08.md",
      "docPath": "post"
    }
  ],
  "catalog": [
    {
      "uuid": "rN2b-pB-JxcncecO",
      "type": "DOC",
      "title": "2023/0013.最优子结构原理 和 DP 数组遍历方向",
      "url": "3315d11d-10cf-5f53-89c4-fc98ce1c9dcc",
      "slug": "3315d11d-10cf-5f53-89c4-fc98ce1c9dcc",
      "id": 171574966,
      "doc_id": 171574966,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "",
      "sibling_uuid": "Ki_bPqIC0bHbL_-M",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "Ki_bPqIC0bHbL_-M",
      "type": "DOC",
      "title": "2023/0028.BFS 算法",
      "url": "25ef9f60-aa9b-57cc-95c0-6ae8d7ff4923",
      "slug": "25ef9f60-aa9b-57cc-95c0-6ae8d7ff4923",
      "id": 171575009,
      "doc_id": 171575009,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "rN2b-pB-JxcncecO",
      "sibling_uuid": "rYyiTsZ0b3oIpN4P",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "rYyiTsZ0b3oIpN4P",
      "type": "DOC",
      "title": "2023/0023.Markdown格式编辑器研究",
      "url": "8e54dc8d-2b77-5366-95c5-4b68e45e40a4",
      "slug": "8e54dc8d-2b77-5366-95c5-4b68e45e40a4",
      "id": 171575001,
      "doc_id": 171575001,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "Ki_bPqIC0bHbL_-M",
      "sibling_uuid": "k0qmImpgvJEXAj6z",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "k0qmImpgvJEXAj6z",
      "type": "DOC",
      "title": "2023/0012.Vue 的响应式的系统设计原理",
      "url": "abb0fb9e-2a86-5309-a34e-7b4fce3a2cc2",
      "slug": "abb0fb9e-2a86-5309-a34e-7b4fce3a2cc2",
      "id": 171574960,
      "doc_id": 171574960,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "rYyiTsZ0b3oIpN4P",
      "sibling_uuid": "WmwCdPSXGfAj8ny5",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "WmwCdPSXGfAj8ny5",
      "type": "DOC",
      "title": "2023/0033.Vue3 的 Diff 算法",
      "url": "4655c4c8-d29d-514b-a335-0e93c6c12e50",
      "slug": "4655c4c8-d29d-514b-a335-0e93c6c12e50",
      "id": 171575026,
      "doc_id": 171575026,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "k0qmImpgvJEXAj6z",
      "sibling_uuid": "bceW7hkzul9Yu2_t",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "bceW7hkzul9Yu2_t",
      "type": "DOC",
      "title": "2023/0017.Vue3 的非原始值响应式方案",
      "url": "1a2c10e4-97bc-59e1-8558-4e23670617c8",
      "slug": "1a2c10e4-97bc-59e1-8558-4e23670617c8",
      "id": 171574985,
      "doc_id": 171574985,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "WmwCdPSXGfAj8ny5",
      "sibling_uuid": "gUsJvduhQd5_qX3W",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "gUsJvduhQd5_qX3W",
      "type": "DOC",
      "title": "2023/0032.vue3 的渲染器原理",
      "url": "483f2e40-8c18-5541-95ea-968c54cedc41",
      "slug": "483f2e40-8c18-5541-95ea-968c54cedc41",
      "id": 171575022,
      "doc_id": 171575022,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "bceW7hkzul9Yu2_t",
      "sibling_uuid": "Q6f9Eu8zleLnPsDf",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "Q6f9Eu8zleLnPsDf",
      "type": "DOC",
      "title": "2023/0074.Vue3 中 keepAlive组件的实现原理",
      "url": "cad548a6-9b49-5a8b-abad-3f4b0f3f70e0",
      "slug": "cad548a6-9b49-5a8b-abad-3f4b0f3f70e0",
      "id": 171575068,
      "doc_id": 171575068,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "gUsJvduhQd5_qX3W",
      "sibling_uuid": "OA9j7Qubnr4o8Nbo",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "OA9j7Qubnr4o8Nbo",
      "type": "DOC",
      "title": "2023/0077.Vue3 中 Transition 组件的实现原理",
      "url": "f916d21d-9d57-52a7-baa0-99b6b24a5b58",
      "slug": "f916d21d-9d57-52a7-baa0-99b6b24a5b58",
      "id": 171575073,
      "doc_id": 171575073,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "Q6f9Eu8zleLnPsDf",
      "sibling_uuid": "dFNnKiBR5bMcyujM",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "dFNnKiBR5bMcyujM",
      "type": "DOC",
      "title": "2023/0035.Vue3 组件的实现原理",
      "url": "09e22930-7d28-5390-8666-84f5e66295a1",
      "slug": "09e22930-7d28-5390-8666-84f5e66295a1",
      "id": 171575035,
      "doc_id": 171575035,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "OA9j7Qubnr4o8Nbo",
      "sibling_uuid": "W3lV8_KOVDEse8cF",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "W3lV8_KOVDEse8cF",
      "type": "DOC",
      "title": "2023/0076.Vue3中 Teleport 组件的实现原理",
      "url": "c752eefc-e877-529f-b4e8-78b03122840b",
      "slug": "c752eefc-e877-529f-b4e8-78b03122840b",
      "id": 171575071,
      "doc_id": 171575071,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "dFNnKiBR5bMcyujM",
      "sibling_uuid": "ADGdYa68jRSK19ih",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "ADGdYa68jRSK19ih",
      "type": "DOC",
      "title": "2023/0014.最小编辑距离",
      "url": "aa2716eb-8a4f-5bf4-85ed-7152a9a5aa2c",
      "slug": "aa2716eb-8a4f-5bf4-85ed-7152a9a5aa2c",
      "id": 171574970,
      "doc_id": 171574970,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "W3lV8_KOVDEse8cF",
      "sibling_uuid": "qrh16Gr5hIloBp-V",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "qrh16Gr5hIloBp-V",
      "type": "DOC",
      "title": "2023/0015.下降路径的最小和",
      "url": "a51e78f1-ebc3-5f81-afe9-65570c3d2ebb",
      "slug": "a51e78f1-ebc3-5f81-afe9-65570c3d2ebb",
      "id": 171574977,
      "doc_id": 171574977,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "ADGdYa68jRSK19ih",
      "sibling_uuid": "s6QsQHF9S-RhOV5V",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "s6QsQHF9S-RhOV5V",
      "type": "DOC",
      "title": "2023/0085.提示词工程师",
      "url": "d89613a5-d295-55d4-8d69-2307afad7a8c",
      "slug": "d89613a5-d295-55d4-8d69-2307afad7a8c",
      "id": 171575084,
      "doc_id": 171575084,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "qrh16Gr5hIloBp-V",
      "sibling_uuid": "bc9i6I2ywGbAkNGu",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "bc9i6I2ywGbAkNGu",
      "type": "DOC",
      "title": "2023/0067.贪心算法",
      "url": "17d00493-ed04-56d9-81b7-c6ed480aef12",
      "slug": "17d00493-ed04-56d9-81b7-c6ed480aef12",
      "id": 171575050,
      "doc_id": 171575050,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "s6QsQHF9S-RhOV5V",
      "sibling_uuid": "n25DKsligXmAG3U5",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "n25DKsligXmAG3U5",
      "type": "DOC",
      "title": "2023/0020.深入理解快速排序",
      "url": "76a8c0da-c4b2-5964-ac1c-4e11591d34e3",
      "slug": "76a8c0da-c4b2-5964-ac1c-4e11591d34e3",
      "id": 171574996,
      "doc_id": 171574996,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "bc9i6I2ywGbAkNGu",
      "sibling_uuid": "d05slRMW392kP4h9",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "d05slRMW392kP4h9",
      "type": "DOC",
      "title": "2023/0021.深入理解归并排序",
      "url": "6ab4f912-ece9-5cf0-88d8-4332c2412dfc",
      "slug": "6ab4f912-ece9-5cf0-88d8-4332c2412dfc",
      "id": 171574998,
      "doc_id": 171574998,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "n25DKsligXmAG3U5",
      "sibling_uuid": "bwVfrKjDCdEcuPzu",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "bwVfrKjDCdEcuPzu",
      "type": "DOC",
      "title": "链表的双指针技巧合集",
      "url": "yaz2vh30ea8p7x43",
      "slug": "yaz2vh30ea8p7x43",
      "id": 176716796,
      "doc_id": 176716796,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "d05slRMW392kP4h9",
      "sibling_uuid": "UXfd19LBTh4-zo3t",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "UXfd19LBTh4-zo3t",
      "type": "DOC",
      "title": "回溯算法",
      "url": "gi3twisq3b1337qz",
      "slug": "gi3twisq3b1337qz",
      "id": 176716761,
      "doc_id": 176716761,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "bwVfrKjDCdEcuPzu",
      "sibling_uuid": "FwTWRM6mXXtHGaTY",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "FwTWRM6mXXtHGaTY",
      "type": "DOC",
      "title": "二维数组的遍历技巧汇总",
      "url": "sth8xr4l6zogso84",
      "slug": "sth8xr4l6zogso84",
      "id": 176716682,
      "doc_id": 176716682,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "UXfd19LBTh4-zo3t",
      "sibling_uuid": "2H6SV5eF3Gn_0Xri",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "2H6SV5eF3Gn_0Xri",
      "type": "DOC",
      "title": "动态规划解题思路",
      "url": "zbl1db669xvp4hiw",
      "slug": "zbl1db669xvp4hiw",
      "id": 176716646,
      "doc_id": 176716646,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "FwTWRM6mXXtHGaTY",
      "sibling_uuid": "yY55UJuz3gHfie3W",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "yY55UJuz3gHfie3W",
      "type": "DOC",
      "title": "常见的微前端方案及微前端的原理解析",
      "url": "tq2kmctm5phirwhr",
      "slug": "tq2kmctm5phirwhr",
      "id": 176716613,
      "doc_id": 176716613,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "2H6SV5eF3Gn_0Xri",
      "sibling_uuid": "0JqErifbZuKvvowQ",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "0JqErifbZuKvvowQ",
      "type": "DOC",
      "title": "不同的子序列个数",
      "url": "tz3mi5gqs5l59ncv",
      "slug": "tz3mi5gqs5l59ncv",
      "id": 176716591,
      "doc_id": 176716591,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "yY55UJuz3gHfie3W",
      "sibling_uuid": "OYiOvnEHf2bNyLff",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "OYiOvnEHf2bNyLff",
      "type": "DOC",
      "title": "Vue3 的异步组件与函数式组件的实现原理",
      "url": "dqb04ndy5of50yht",
      "slug": "dqb04ndy5of50yht",
      "id": 176716492,
      "doc_id": 176716492,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "0JqErifbZuKvvowQ",
      "sibling_uuid": "8LFzJ0xUC77ghhEX",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "8LFzJ0xUC77ghhEX",
      "type": "DOC",
      "title": "Vue中的编译器原理",
      "url": "zqgi2fpd7ac3dqn4",
      "slug": "zqgi2fpd7ac3dqn4",
      "id": 176716458,
      "doc_id": 176716458,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "OYiOvnEHf2bNyLff",
      "sibling_uuid": "JxxCK5aUtrl5bp5D",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "JxxCK5aUtrl5bp5D",
      "type": "DOC",
      "title": "翻转二叉树的两种解题思路",
      "url": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "slug": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "id": 173003513,
      "doc_id": 173003513,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "8LFzJ0xUC77ghhEX",
      "sibling_uuid": "0Eu8E_zN12z1DP3C",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "0Eu8E_zN12z1DP3C",
      "type": "DOC",
      "title": "二叉树算法概述",
      "url": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "slug": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "id": 173003512,
      "doc_id": 173003512,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "JxxCK5aUtrl5bp5D",
      "sibling_uuid": "8-rjdmC7TsH2MYAB",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "8-rjdmC7TsH2MYAB",
      "type": "DOC",
      "title": "算法：二叉树的前后中序遍历详解",
      "url": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "slug": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "id": 172664764,
      "doc_id": 172664764,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "0Eu8E_zN12z1DP3C",
      "sibling_uuid": "BHHpp24J7Udh9nIt",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "BHHpp24J7Udh9nIt",
      "type": "DOC",
      "title": "算法：二叉树的两种解题思路",
      "url": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "slug": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "id": 172664762,
      "doc_id": 172664762,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "8-rjdmC7TsH2MYAB",
      "sibling_uuid": "_7a2bAas7OW8RsUQ",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_7a2bAas7OW8RsUQ",
      "type": "DOC",
      "title": "算法/动态规划/最长递增子序列",
      "url": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "slug": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "id": 172664759,
      "doc_id": 172664759,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "BHHpp24J7Udh9nIt",
      "sibling_uuid": "XHPw5qdK9htGiMQm",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "XHPw5qdK9htGiMQm",
      "type": "DOC",
      "title": "算法/动态规划/俄罗斯套娃：二维最长递增子序列",
      "url": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "slug": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "id": 172664753,
      "doc_id": 172664753,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_7a2bAas7OW8RsUQ",
      "sibling_uuid": "y_Oqj3k9s4r7_B0E",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "y_Oqj3k9s4r7_B0E",
      "type": "DOC",
      "title": "算法/链表/反转单链表：反转全部、反转前 N 个节点、反转一部分",
      "url": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "slug": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "id": 173001604,
      "doc_id": 173001604,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "XHPw5qdK9htGiMQm",
      "sibling_uuid": "wYLG_9HWIxrCbBwk",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "wYLG_9HWIxrCbBwk",
      "type": "DOC",
      "title": "算法/二叉树/二叉树算法概述",
      "url": "6f964124-4281-5896-9c85-bef7889c1853",
      "slug": "6f964124-4281-5896-9c85-bef7889c1853",
      "id": 173001603,
      "doc_id": 173001603,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "y_Oqj3k9s4r7_B0E",
      "sibling_uuid": "khan_nXPJpb0VKSh",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "khan_nXPJpb0VKSh",
      "type": "DOC",
      "title": "算法/基础/算法的复杂度评估",
      "url": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "slug": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "id": 172804453,
      "doc_id": 172804453,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "wYLG_9HWIxrCbBwk",
      "sibling_uuid": "RNTAVngVrCEw1W4d",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "RNTAVngVrCEw1W4d",
      "type": "DOC",
      "title": "算法/基础/基本的数据结构",
      "url": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "slug": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "id": 172778725,
      "doc_id": 172778725,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "khan_nXPJpb0VKSh",
      "sibling_uuid": "_ozNsSk-G44HrOyq",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_ozNsSk-G44HrOyq",
      "type": "DOC",
      "title": "算法/动态规划/最长递增子序列 + 俄罗斯套娃信封问题",
      "url": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "slug": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "id": 172626939,
      "doc_id": 172626939,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "RNTAVngVrCEw1W4d",
      "sibling_uuid": "jITwin6DQNTM7kS0",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "jITwin6DQNTM7kS0",
      "type": "DOC",
      "title": "算法/树/树的一些基本概念",
      "url": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "slug": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "id": 172455737,
      "doc_id": 172455737,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_ozNsSk-G44HrOyq",
      "sibling_uuid": "il4IZ6nI9yFNTraG",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "il4IZ6nI9yFNTraG",
      "type": "DOC",
      "title": "算法/树/二叉堆与优先级队列的关系",
      "url": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "slug": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "id": 172455736,
      "doc_id": 172455736,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "jITwin6DQNTM7kS0",
      "sibling_uuid": "6NQNxZeyRM5pcWMy",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "6NQNxZeyRM5pcWMy",
      "type": "DOC",
      "title": "算法/栈/翻转二叉树的两种解题思路",
      "url": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "slug": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "id": 172455735,
      "doc_id": 172455735,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "il4IZ6nI9yFNTraG",
      "sibling_uuid": "wnl52FZeerAvL7z8",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "wnl52FZeerAvL7z8",
      "type": "DOC",
      "title": "算法/框架/计算机算法的框架思维",
      "url": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "slug": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "id": 172455734,
      "doc_id": 172455734,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "6NQNxZeyRM5pcWMy",
      "sibling_uuid": "szASYd4d5Y2C9Zsf",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "szASYd4d5Y2C9Zsf",
      "type": "DOC",
      "title": "翻译/什么才是真正做事？",
      "url": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "slug": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "id": 172416659,
      "doc_id": 172416659,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "wnl52FZeerAvL7z8",
      "sibling_uuid": "Muyg_khqJmEGHFxb",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "Muyg_khqJmEGHFxb",
      "type": "DOC",
      "title": "张云帆的芒格之道",
      "url": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "slug": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "id": 171574867,
      "doc_id": 171574867,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "szASYd4d5Y2C9Zsf",
      "sibling_uuid": "O9kszp8svLA_VCZP",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "O9kszp8svLA_VCZP",
      "type": "DOC",
      "title": "工具/Raycast 使用技巧总结",
      "url": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "slug": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "id": 172416658,
      "doc_id": 172416658,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "Muyg_khqJmEGHFxb",
      "sibling_uuid": "hh1Yimd1CWkTEp4i",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "hh1Yimd1CWkTEp4i",
      "type": "DOC",
      "title": "工具/Obsidian 快捷键",
      "url": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "slug": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "id": 172416656,
      "doc_id": 172416656,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "O9kszp8svLA_VCZP",
      "sibling_uuid": "CTYqza3IerLP3sAj",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "CTYqza3IerLP3sAj",
      "type": "DOC",
      "title": "工具/Manico 快捷键",
      "url": "4424154a-634d-5616-9c99-cbda52018d09",
      "slug": "4424154a-634d-5616-9c99-cbda52018d09",
      "id": 172416655,
      "doc_id": 172416655,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "hh1Yimd1CWkTEp4i",
      "sibling_uuid": "EAsJ24CVyYLvfWTI",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "EAsJ24CVyYLvfWTI",
      "type": "DOC",
      "title": "工具/Github Copilot 使用技巧总结",
      "url": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "slug": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "id": 172416652,
      "doc_id": 172416652,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "CTYqza3IerLP3sAj",
      "sibling_uuid": "lO-Lr8b_MDcMhG1H",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "lO-Lr8b_MDcMhG1H",
      "type": "DOC",
      "title": "工具/Arc 浏览器使用技巧总结",
      "url": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "slug": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "id": 172416651,
      "doc_id": 172416651,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "EAsJ24CVyYLvfWTI",
      "sibling_uuid": "_wtdn1hNO1xtQvZd",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_wtdn1hNO1xtQvZd",
      "type": "DOC",
      "title": "播客/AI 时代的频率跃迁背景下个人的选择：高频的卷或低频的定",
      "url": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "slug": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "id": 172416650,
      "doc_id": 172416650,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "lO-Lr8b_MDcMhG1H",
      "sibling_uuid": "OtviJTdDqdY91pqj",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "OtviJTdDqdY91pqj",
      "type": "DOC",
      "title": "播客/人生危机不是崩溃而是瓦解",
      "url": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "slug": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "id": 171574866,
      "doc_id": 171574866,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_wtdn1hNO1xtQvZd",
      "sibling_uuid": "9Wu8-viWsSS_a-1Q",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "9Wu8-viWsSS_a-1Q",
      "type": "DOC",
      "title": "前端/性能/长列表或大数据渲染优化的一些思路",
      "url": "4214e1f9-529d-5201-b575-248082694fd6",
      "slug": "4214e1f9-529d-5201-b575-248082694fd6",
      "id": 171574865,
      "doc_id": 171574865,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "OtviJTdDqdY91pqj",
      "sibling_uuid": "L-on40WX9SFdz4nI",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "L-on40WX9SFdz4nI",
      "type": "DOC",
      "title": "思维模型/机会成本与沉没成本",
      "url": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
      "slug": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
      "id": 168216266,
      "doc_id": 168216266,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "9Wu8-viWsSS_a-1Q",
      "sibling_uuid": "gTYtjNhhncenPOt5",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "gTYtjNhhncenPOt5",
      "type": "DOC",
      "title": "播客/Same as Ever 得到听书笔记",
      "url": "27b086f5-4074-5ef2-908e-f697b587b80b",
      "slug": "27b086f5-4074-5ef2-908e-f697b587b80b",
      "id": 168216265,
      "doc_id": 168216265,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "L-on40WX9SFdz4nI",
      "sibling_uuid": "s76yUGXO3AY1MWwh",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "s76yUGXO3AY1MWwh",
      "type": "DOC",
      "title": "前端/Vue/Pinia状态管理库文档笔记",
      "url": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "slug": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "id": 168216264,
      "doc_id": 168216264,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "gTYtjNhhncenPOt5",
      "sibling_uuid": "ojEhe8ynI0TFLHPr",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "ojEhe8ynI0TFLHPr",
      "type": "DOC",
      "title": "英语/语法/英语兔语法",
      "url": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "slug": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "id": 168095560,
      "doc_id": 168095560,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "s76yUGXO3AY1MWwh",
      "sibling_uuid": "zPw6IlPTYBC_b9KN",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "zPw6IlPTYBC_b9KN",
      "type": "DOC",
      "title": "算法/动态规划/最小硬币数&凑零钱问题",
      "url": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "slug": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "id": 168095558,
      "doc_id": 168095558,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "ojEhe8ynI0TFLHPr",
      "sibling_uuid": "Ho8Aqv4b_BK3DAqI",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "Ho8Aqv4b_BK3DAqI",
      "type": "DOC",
      "title": "算法/动态规划/斐波那契数列",
      "url": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "slug": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "id": 168095559,
      "doc_id": 168095559,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "zPw6IlPTYBC_b9KN",
      "sibling_uuid": "AV1HPINO8t_jsXln",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "AV1HPINO8t_jsXln",
      "type": "DOC",
      "title": "工具/Obsidina快捷键",
      "url": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "slug": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "id": 168095557,
      "doc_id": 168095557,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "Ho8Aqv4b_BK3DAqI",
      "sibling_uuid": "3AEB7OJIl306Cmpd",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "3AEB7OJIl306Cmpd",
      "type": "DOC",
      "title": "前端/架构/前端框架设计里的\"权衡\" 与\"选择\"",
      "url": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "slug": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "id": 168095556,
      "doc_id": 168095556,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "AV1HPINO8t_jsXln",
      "sibling_uuid": "BLn0QY4wioNSAcEc",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "BLn0QY4wioNSAcEc",
      "type": "DOC",
      "title": "前端/Vue/Vue3 框架设计的核心要素",
      "url": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "slug": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "id": 168095553,
      "doc_id": 168095553,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "3AEB7OJIl306Cmpd",
      "sibling_uuid": "l26BNeX_7EAqeV9G",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "l26BNeX_7EAqeV9G",
      "type": "DOC",
      "title": "前端/Vue/Vue 的整体设计思路",
      "url": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "slug": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "id": 168095552,
      "doc_id": 168095552,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "BLn0QY4wioNSAcEc",
      "sibling_uuid": "_mGQoxBwbcJKyw4i",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_mGQoxBwbcJKyw4i",
      "type": "DOC",
      "title": "前端/Typescript/重新学习 Typescript",
      "url": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "slug": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "id": 168095551,
      "doc_id": 168095551,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "l26BNeX_7EAqeV9G",
      "sibling_uuid": "IAeHIWarwSN0dxTG",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "IAeHIWarwSN0dxTG",
      "type": "DOC",
      "title": "实现批量请求并控制最大并发数",
      "url": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "slug": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "id": 168095550,
      "doc_id": 168095550,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_mGQoxBwbcJKyw4i",
      "sibling_uuid": "ZsluFTpqLKblYqAY",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "ZsluFTpqLKblYqAY",
      "type": "DOC",
      "title": "前端/JavaScript/如何检测页面是否在前台运行（检测页面的可见性）",
      "url": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "slug": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "id": 168095549,
      "doc_id": 168095549,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "IAeHIWarwSN0dxTG",
      "sibling_uuid": "zPHaZyW3qoMOezNc",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "zPHaZyW3qoMOezNc",
      "type": "DOC",
      "title": "前端/JavaScript/为什么要用 setTimeout 模拟 setInterval ？",
      "url": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "slug": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "id": 168095548,
      "doc_id": 168095548,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "ZsluFTpqLKblYqAY",
      "sibling_uuid": "cqOAU_wFXIrKZbhb",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "cqOAU_wFXIrKZbhb",
      "type": "DOC",
      "title": "前端/CSS/回流和重绘",
      "url": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "slug": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "id": 168095547,
      "doc_id": 168095547,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "zPHaZyW3qoMOezNc",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    }
  ]
}