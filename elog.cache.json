{
  "docs": [
    {
      "id": 173003513,
      "doc_id": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "updated": 1717914291000,
      "properties": {
        "title": "算法/树/翻转二叉树的两种解题思路",
        "urlname": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
        "date": "2024-06-09 14:24:50",
        "updated": "2024-06-09 14:24:51",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "relativePath": "/63bc4318-ebbc-5441-ab77-37d4705e0af2.md",
      "docPath": "post"
    },
    {
      "id": 173001604,
      "doc_id": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "updated": 1717911692000,
      "properties": {
        "title": "算法/链表/反转单链表：反转全部、反转前 N 个节点、反转一部分",
        "urlname": "32a25aa6-b958-59f7-964b-33cc262560f0",
        "date": "2024-06-09 13:41:32",
        "updated": "2024-06-09 13:41:32",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "relativePath": "/32a25aa6-b958-59f7-964b-33cc262560f0.md",
      "docPath": "post"
    },
    {
      "id": 173003512,
      "doc_id": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "updated": 1717914290000,
      "properties": {
        "title": "算法/树/二叉树算法概述",
        "urlname": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
        "date": "2024-06-09 14:24:50",
        "updated": "2024-06-09 14:24:50",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "relativePath": "/7d001d04-2978-58c3-8b2d-2aedd27a1300.md",
      "docPath": "post"
    },
    {
      "id": 173001603,
      "doc_id": "6f964124-4281-5896-9c85-bef7889c1853",
      "updated": 1717911692000,
      "properties": {
        "title": "算法/二叉树/二叉树算法概述",
        "urlname": "6f964124-4281-5896-9c85-bef7889c1853",
        "date": "2024-06-09 13:41:31",
        "updated": "2024-06-09 13:41:32",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "6f964124-4281-5896-9c85-bef7889c1853",
      "relativePath": "/6f964124-4281-5896-9c85-bef7889c1853.md",
      "docPath": "post"
    },
    {
      "id": 172804453,
      "doc_id": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "updated": 1717736088000,
      "properties": {
        "title": "算法/基础/算法的复杂度评估",
        "urlname": "913adb85-34cd-560c-bd9f-f0190c86de81",
        "date": "2024-06-07 12:54:48",
        "updated": "2024-06-07 12:54:48",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "relativePath": "/913adb85-34cd-560c-bd9f-f0190c86de81.md",
      "docPath": "post"
    },
    {
      "id": 172778725,
      "doc_id": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "updated": 1717725675000,
      "properties": {
        "title": "算法/基础/基本的数据结构",
        "urlname": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
        "date": "2024-06-07 10:01:15",
        "updated": "2024-06-07 10:01:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "relativePath": "/0457a71b-6e9d-5a9b-a007-f6fc64c2a523.md",
      "docPath": "post"
    },
    {
      "id": 172664764,
      "doc_id": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "updated": 1717914289000,
      "properties": {
        "title": "算法/树/二叉树的前后中序遍历详解",
        "urlname": "b65bee99-7800-5167-88a2-c2cac2f47061",
        "date": "2024-06-06 13:50:13",
        "updated": "2024-06-09 14:24:49",
        "author": "liguwe",
        "description": "二叉树的前后中序遍历详解#算法/二叉树  #2023/06/06[!tip] 递归函数 可以理解为一个 指针递归顺序是不会变的前后中序是三个不同的时间点 或 时机[!tip] 移步至： #语雀  https://www.yuque.com/liguwe/agorithms/gzg70n2dxb..."
      },
      "catalog": [],
      "realName": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "relativePath": "/b65bee99-7800-5167-88a2-c2cac2f47061.md",
      "docPath": "post"
    },
    {
      "id": 172664762,
      "doc_id": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "updated": 1717914288000,
      "properties": {
        "title": "算法/树/二叉树的两种解题思路",
        "urlname": "ca21f673-03b2-586c-b334-2ab48bec490e",
        "date": "2024-06-06 13:50:12",
        "updated": "2024-06-09 14:24:48",
        "author": "liguwe",
        "description": "二叉树的两种解题思路#树/二叉树 #2023/06/06[!tip] 移步至： #语雀   https://www.yuque.com/liguwe/agorithms/nu6uaih4ff4cgdz9#cyYuw阅读原文https://liguwe.github.io/post/ca21f6..."
      },
      "catalog": [],
      "realName": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "relativePath": "/ca21f673-03b2-586c-b334-2ab48bec490e.md",
      "docPath": "post"
    },
    {
      "id": 172664759,
      "doc_id": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "updated": 1717914287000,
      "properties": {
        "title": "算法/动态规划/最长递增子序列",
        "urlname": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
        "date": "2024-06-06 13:50:11",
        "updated": "2024-06-09 14:24:47",
        "author": "liguwe",
        "description": "最长递增子序列#2023/03/24  #算法/动态规划[!tip] 移步至： #语雀   https://www.yuque.com/liguwe/agorithms/lapm7trwgfnfvys0另外可参考  [[最长递增子序列 + 俄罗斯套娃信封问题]]  ，内容有重复阅读原文http..."
      },
      "catalog": [],
      "realName": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "relativePath": "/14fe0ff1-8842-5283-a9f7-fc11ffe78ea1.md",
      "docPath": "post"
    },
    {
      "id": 172664753,
      "doc_id": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "updated": 1717914286000,
      "properties": {
        "title": "算法/动态规划/俄罗斯套娃：二维最长递增子序列",
        "urlname": "0b8dc850-a493-515c-a1c0-c829410c6da2",
        "date": "2024-06-06 13:50:11",
        "updated": "2024-06-09 14:24:46",
        "author": "liguwe",
        "description": "俄罗斯套娃：二维最长递增子序列#算法/动态规划  #2023/03/24[!tip] 移步至： #语雀   https://www.yuque.com/liguwe/agorithms/xh82rz1hu7r84xl4另外参考 [[最长递增子序列 + 俄罗斯套娃信封问题]] ，内容有重复阅读原..."
      },
      "catalog": [],
      "realName": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "relativePath": "/0b8dc850-a493-515c-a1c0-c829410c6da2.md",
      "docPath": "post"
    },
    {
      "id": 172626939,
      "doc_id": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "updated": 1717653014000,
      "properties": {
        "title": "算法/动态规划/最长递增子序列 + 俄罗斯套娃信封问题",
        "urlname": "bd4652d6-8954-5bf3-804d-0118ed1007be",
        "date": "2024-06-06 09:42:00",
        "updated": "2024-06-06 13:50:14",
        "author": "liguwe",
        "description": "最长递增子序列 + 俄罗斯套娃信封问题#算法/动态规划 #2023/03/24最长递增子序列https://leetcode.cn/problems/longest-increasing-subsequence/「子序列」和「子串」的区别：  子串一定是连续的，而子序列不一定是连续的数学归纳法..."
      },
      "catalog": [],
      "realName": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "relativePath": "/bd4652d6-8954-5bf3-804d-0118ed1007be.md",
      "docPath": "post"
    },
    {
      "id": 172455737,
      "doc_id": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "updated": 1717541656000,
      "properties": {
        "title": "算法/树/树的一些基本概念",
        "urlname": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
        "date": "2024-06-05 06:54:15",
        "updated": "2024-06-05 06:54:16",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "relativePath": "/de7d537f-1a3d-572c-baaa-a98b3e5ff9d5.md",
      "docPath": "post"
    },
    {
      "id": 172455736,
      "doc_id": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "updated": 1717541655000,
      "properties": {
        "title": "算法/树/二叉堆与优先级队列的关系",
        "urlname": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
        "date": "2024-06-05 06:54:15",
        "updated": "2024-06-05 06:54:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "relativePath": "/5dd68a73-7991-5e3e-8bd6-3665771b24e5.md",
      "docPath": "post"
    },
    {
      "id": 172455735,
      "doc_id": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "updated": 1717541655000,
      "properties": {
        "title": "算法/栈/翻转二叉树的两种解题思路",
        "urlname": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
        "date": "2024-06-05 06:54:14",
        "updated": "2024-06-05 06:54:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "relativePath": "/5dad5968-f583-5c57-94ae-8aa692c69c9f.md",
      "docPath": "post"
    },
    {
      "id": 172416659,
      "doc_id": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "updated": 1717505453000,
      "properties": {
        "title": "翻译/什么才是真正做事？",
        "urlname": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
        "date": "2024-06-04 20:50:53",
        "updated": "2024-06-04 20:50:53",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "relativePath": "/bceddf09-da9a-5795-9c4c-bb640f2bc363.md",
      "docPath": "post"
    },
    {
      "id": 172455734,
      "doc_id": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "updated": 1717541654000,
      "properties": {
        "title": "算法/框架/计算机算法的框架思维",
        "urlname": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
        "date": "2024-06-05 06:54:13",
        "updated": "2024-06-05 06:54:14",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "relativePath": "/8fbc80cc-ba66-5782-9643-31f176a3fa0a.md",
      "docPath": "post"
    },
    {
      "id": 172416658,
      "doc_id": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "updated": 1717505452000,
      "properties": {
        "title": "工具/Raycast 使用技巧总结",
        "urlname": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
        "date": "2024-06-04 20:50:52",
        "updated": "2024-06-04 20:50:52",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "relativePath": "/cd4960fb-1dd9-596f-b65a-96387bf6fe0a.md",
      "docPath": "post"
    },
    {
      "id": 172416655,
      "doc_id": "4424154a-634d-5616-9c99-cbda52018d09",
      "updated": 1717505451000,
      "properties": {
        "title": "工具/Manico 快捷键",
        "urlname": "4424154a-634d-5616-9c99-cbda52018d09",
        "date": "2024-06-04 20:50:51",
        "updated": "2024-06-04 20:50:51",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "4424154a-634d-5616-9c99-cbda52018d09",
      "relativePath": "/4424154a-634d-5616-9c99-cbda52018d09.md",
      "docPath": "post"
    },
    {
      "id": 172416656,
      "doc_id": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "updated": 1717505451000,
      "properties": {
        "title": "工具/Obsidian 快捷键",
        "urlname": "151a786a-a63e-5388-ada4-27be5aef5c4e",
        "date": "2024-06-04 20:50:51",
        "updated": "2024-06-04 20:50:51",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "relativePath": "/151a786a-a63e-5388-ada4-27be5aef5c4e.md",
      "docPath": "post"
    },
    {
      "id": 172416652,
      "doc_id": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "updated": 1717505450000,
      "properties": {
        "title": "工具/Github Copilot 使用技巧总结",
        "urlname": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
        "date": "2024-06-04 20:50:50",
        "updated": "2024-06-04 20:50:50",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "relativePath": "/3fd1b909-88c4-53e8-835c-1adbccf5cffc.md",
      "docPath": "post"
    },
    {
      "id": 172416651,
      "doc_id": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "updated": 1717552481000,
      "properties": {
        "title": "工具/Arc 浏览器使用技巧总结",
        "urlname": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
        "date": "2024-06-04 20:50:49",
        "updated": "2024-06-05 09:54:41",
        "author": "liguwe",
        "description": "Arc 浏览器使用技巧总结#常用工具 #工具 #工具技巧 #浏览器  #2023/11/25网站搜索 可以配置，直接配置百度，京东搜索，但一般用不着，直接谷歌就好了 命令行 可以完成任何操作Command-T → Tab，然后输入具体命令 空间 点击侧边栏底部的空间图标，进行添加可以通过 Co..."
      },
      "catalog": [],
      "realName": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "relativePath": "/a02c5897-1801-55ac-b0e0-6b4194b067fb.md",
      "docPath": "post"
    },
    {
      "id": 172416650,
      "doc_id": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "updated": 1717505449000,
      "properties": {
        "title": "播客/AI 时代的频率跃迁背景下个人的选择：高频的卷或低频的定",
        "urlname": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
        "date": "2024-06-04 20:50:49",
        "updated": "2024-06-04 20:50:49",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "relativePath": "/2888c80f-b109-5a54-bdbe-7c97a407ab59.md",
      "docPath": "post"
    },
    {
      "id": 171574867,
      "doc_id": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "updated": 1717505453000,
      "properties": {
        "title": "播客/张云帆的芒格之道",
        "urlname": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
        "date": "2024-05-29 16:14:28",
        "updated": "2024-06-04 20:50:53",
        "author": "liguwe",
        "description": "张云帆的芒格之道#播客 #2023/12/23一、知行合一人生的终极哲学是芒格所说「知行合一」  ：不仅能把事情做成，人生也是自恰的对知识诚实，知道就是知道，不知道就是不知道。知之为知之，不知为不知读书不会带来改变，思考不会带来改变，只有读书后的思考而带来的行动才会对生活有改变（即知行合一）对..."
      },
      "catalog": [],
      "realName": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "relativePath": "/3a29791d-db02-5ceb-acd0-6bf884b409ac.md",
      "docPath": "post"
    },
    {
      "id": 171574866,
      "doc_id": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "updated": 1716970468000,
      "properties": {
        "title": "播客/人生危机不是崩溃而是瓦解",
        "urlname": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
        "date": "2024-05-29 16:14:28",
        "updated": "2024-05-29 16:14:28",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "relativePath": "/040db9fb-a8f0-5bb4-b006-3efdf2bec160.md",
      "docPath": "post"
    },
    {
      "id": 171574865,
      "doc_id": "4214e1f9-529d-5201-b575-248082694fd6",
      "updated": 1716970467000,
      "properties": {
        "title": "前端/性能/长列表或大数据渲染优化的一些思路",
        "urlname": "4214e1f9-529d-5201-b575-248082694fd6",
        "date": "2024-05-29 16:14:27",
        "updated": "2024-05-29 16:14:27",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "4214e1f9-529d-5201-b575-248082694fd6",
      "relativePath": "/4214e1f9-529d-5201-b575-248082694fd6.md",
      "docPath": "post"
    },
    {
      "id": 168216266,
      "doc_id": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
      "updated": 1714780858000,
      "properties": {
        "title": "思维模型/机会成本与沉没成本",
        "urlname": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
        "date": "2024-05-04 08:00:58",
        "updated": "2024-05-04 08:00:58",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
      "relativePath": "/57d16359-e2d9-50e3-b2e5-471c38db8b70.md",
      "docPath": "post"
    },
    {
      "id": 168216265,
      "doc_id": "27b086f5-4074-5ef2-908e-f697b587b80b",
      "updated": 1720153999000,
      "properties": {
        "title": "播客/Same as Ever 得到听书笔记",
        "urlname": "27b086f5-4074-5ef2-908e-f697b587b80b",
        "date": "2024-05-04 08:00:57",
        "updated": "2024-07-05 12:33:19",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "27b086f5-4074-5ef2-908e-f697b587b80b",
      "relativePath": "/27b086f5-4074-5ef2-908e-f697b587b80b.md",
      "docPath": "post"
    },
    {
      "id": 168216264,
      "doc_id": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "updated": 1714780857000,
      "properties": {
        "title": "前端/Vue/Pinia状态管理库文档笔记",
        "urlname": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
        "date": "2024-05-04 08:00:56",
        "updated": "2024-05-04 08:00:57",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "relativePath": "/b3055a75-f4cc-52a0-93da-90e2eb1c913f.md",
      "docPath": "post"
    },
    {
      "id": 168095560,
      "doc_id": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "updated": 1714865898000,
      "properties": {
        "title": "英语/语法/英语兔语法",
        "urlname": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
        "date": "2024-05-02 18:44:34",
        "updated": "2024-05-05 07:38:18",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "relativePath": "/15964b35-23bc-56d4-97db-1c4eacb8ea9e.md",
      "docPath": "post"
    },
    {
      "id": 168095559,
      "doc_id": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "updated": 1714865907000,
      "properties": {
        "title": "算法/动态规划/斐波那契数列",
        "urlname": "e424cba0-1726-5c35-bbb3-89cca880de82",
        "date": "2024-05-02 18:44:33",
        "updated": "2024-05-05 07:38:27",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "relativePath": "/e424cba0-1726-5c35-bbb3-89cca880de82.md",
      "docPath": "post"
    },
    {
      "id": 168095558,
      "doc_id": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "updated": 1714865902000,
      "properties": {
        "title": "算法/动态规划/最小硬币数&凑零钱问题",
        "urlname": "164a9949-66e8-5cb8-99a0-148862c9c79a",
        "date": "2024-05-02 18:44:33",
        "updated": "2024-05-05 07:38:22",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "relativePath": "/164a9949-66e8-5cb8-99a0-148862c9c79a.md",
      "docPath": "post"
    },
    {
      "id": 168095556,
      "doc_id": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "updated": 1717911691000,
      "properties": {
        "title": "前端/架构/前端框架设计里的\"权衡\" 与\"选择\"",
        "urlname": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
        "date": "2024-05-02 18:44:31",
        "updated": "2024-06-09 13:41:31",
        "author": "liguwe",
        "description": "前端框架设计里的\"权衡\" 与\"选择\"#vue #前端架构  #2023/03/171、命令式框架与声明式框架Jquery 就是典型的 命令式框架，关注过程Vue 暴露给用户使用的是 声明式 ，但底层内部实现肯定也是 命令式 ，如下示例：面向用户的是声明式的<template>   <div @..."
      },
      "catalog": [],
      "realName": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "relativePath": "/da84854d-ebb9-5579-8c43-48155fe3f2f7.md",
      "docPath": "post"
    },
    {
      "id": 168095557,
      "doc_id": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "updated": 1714865911000,
      "properties": {
        "title": "工具/Obsidina快捷键",
        "urlname": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
        "date": "2024-05-02 18:44:32",
        "updated": "2024-05-05 07:38:31",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "relativePath": "/e6506cdb-35eb-5497-ae29-ed5a2abf969f.md",
      "docPath": "post"
    },
    {
      "id": 168095553,
      "doc_id": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "updated": 1714869391000,
      "properties": {
        "title": "前端/Vue/Vue3 框架设计的核心要素",
        "urlname": "a78f947d-5133-509b-a4a5-39e89591a91c",
        "date": "2024-05-02 18:44:31",
        "updated": "2024-05-05 08:36:31",
        "author": "liguwe",
        "description": "Vue3 框架设计的核心要素#前端 #前端框架  #vue  #2023/03/19以Vue3 为例，对于开发一个前端框架来说，有哪些核心要素呢？ 如下：1、开发体验报错警告提示，是否能够让开发者立马定位到问题比如 如何提示 App.mount('#app') 中 #app 节点 不存在开发调..."
      },
      "catalog": [],
      "realName": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "relativePath": "/a78f947d-5133-509b-a4a5-39e89591a91c.md",
      "docPath": "post"
    },
    {
      "id": 168095552,
      "doc_id": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "updated": 1720153995000,
      "properties": {
        "title": "前端/Vue/Vue 的整体设计思路",
        "urlname": "29a73693-d417-57af-bb3a-6efd95b22d93",
        "date": "2024-05-02 18:44:30",
        "updated": "2024-07-05 12:33:15",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "relativePath": "/29a73693-d417-57af-bb3a-6efd95b22d93.md",
      "docPath": "post"
    },
    {
      "id": 168095551,
      "doc_id": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "updated": 1714646670000,
      "properties": {
        "title": "前端/Typescript/重新学习 Typescript",
        "urlname": "a891fa95-1d24-524f-b241-c0cb7737d75e",
        "date": "2024-05-02 18:44:29",
        "updated": "2024-05-02 18:44:30",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "relativePath": "/a891fa95-1d24-524f-b241-c0cb7737d75e.md",
      "docPath": "post"
    },
    {
      "id": 168095550,
      "doc_id": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "updated": 1714646669000,
      "properties": {
        "title": "前端/JavaScript/实现批量请求并控制最大并发数",
        "urlname": "d7481637-7459-5c98-ba1f-5180cd1e0948",
        "date": "2024-05-02 18:44:28",
        "updated": "2024-05-02 18:44:29",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "relativePath": "/d7481637-7459-5c98-ba1f-5180cd1e0948.md",
      "docPath": "post"
    },
    {
      "id": 168095549,
      "doc_id": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "updated": 1714646668000,
      "properties": {
        "title": "前端/JavaScript/如何检测页面是否在前台运行（检测页面的可见性）",
        "urlname": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
        "date": "2024-05-02 18:44:28",
        "updated": "2024-05-02 18:44:28",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "relativePath": "/9b12ad6f-17a2-58f2-bb9d-872e12428196.md",
      "docPath": "post"
    },
    {
      "id": 168095547,
      "doc_id": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "updated": 1714646666000,
      "properties": {
        "title": "前端/CSS/回流和重绘",
        "urlname": "465a49b1-860d-5c7e-a763-b8a32555fa08",
        "date": "2024-05-02 18:44:26",
        "updated": "2024-05-02 18:44:26",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "relativePath": "/465a49b1-860d-5c7e-a763-b8a32555fa08.md",
      "docPath": "post"
    },
    {
      "id": 168095548,
      "doc_id": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "updated": 1714646667000,
      "properties": {
        "title": "前端/JavaScript/为什么要用 setTimeout 模拟 setInterval ？",
        "urlname": "e5a02817-e232-5d13-a043-455e0e4140e6",
        "date": "2024-05-02 18:44:27",
        "updated": "2024-05-02 18:44:27",
        "author": "liguwe"
      },
      "catalog": [],
      "realName": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "relativePath": "/e5a02817-e232-5d13-a043-455e0e4140e6.md",
      "docPath": "post"
    }
  ],
  "catalog": [
    {
      "uuid": "JxxCK5aUtrl5bp5D",
      "type": "DOC",
      "title": "算法/树/翻转二叉树的两种解题思路",
      "url": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "slug": "63bc4318-ebbc-5441-ab77-37d4705e0af2",
      "id": 173003513,
      "doc_id": 173003513,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "",
      "sibling_uuid": "0Eu8E_zN12z1DP3C",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "0Eu8E_zN12z1DP3C",
      "type": "DOC",
      "title": "算法/树/二叉树算法概述",
      "url": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "slug": "7d001d04-2978-58c3-8b2d-2aedd27a1300",
      "id": 173003512,
      "doc_id": 173003512,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "JxxCK5aUtrl5bp5D",
      "sibling_uuid": "8-rjdmC7TsH2MYAB",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "8-rjdmC7TsH2MYAB",
      "type": "DOC",
      "title": "算法/树/二叉树的前后中序遍历详解",
      "url": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "slug": "b65bee99-7800-5167-88a2-c2cac2f47061",
      "id": 172664764,
      "doc_id": 172664764,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "0Eu8E_zN12z1DP3C",
      "sibling_uuid": "BHHpp24J7Udh9nIt",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "BHHpp24J7Udh9nIt",
      "type": "DOC",
      "title": "算法/树/二叉树的两种解题思路",
      "url": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "slug": "ca21f673-03b2-586c-b334-2ab48bec490e",
      "id": 172664762,
      "doc_id": 172664762,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "8-rjdmC7TsH2MYAB",
      "sibling_uuid": "_7a2bAas7OW8RsUQ",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_7a2bAas7OW8RsUQ",
      "type": "DOC",
      "title": "算法/动态规划/最长递增子序列",
      "url": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "slug": "14fe0ff1-8842-5283-a9f7-fc11ffe78ea1",
      "id": 172664759,
      "doc_id": 172664759,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "BHHpp24J7Udh9nIt",
      "sibling_uuid": "XHPw5qdK9htGiMQm",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "XHPw5qdK9htGiMQm",
      "type": "DOC",
      "title": "算法/动态规划/俄罗斯套娃：二维最长递增子序列",
      "url": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "slug": "0b8dc850-a493-515c-a1c0-c829410c6da2",
      "id": 172664753,
      "doc_id": 172664753,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_7a2bAas7OW8RsUQ",
      "sibling_uuid": "y_Oqj3k9s4r7_B0E",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "y_Oqj3k9s4r7_B0E",
      "type": "DOC",
      "title": "算法/链表/反转单链表：反转全部、反转前 N 个节点、反转一部分",
      "url": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "slug": "32a25aa6-b958-59f7-964b-33cc262560f0",
      "id": 173001604,
      "doc_id": 173001604,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "XHPw5qdK9htGiMQm",
      "sibling_uuid": "wYLG_9HWIxrCbBwk",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "wYLG_9HWIxrCbBwk",
      "type": "DOC",
      "title": "算法/二叉树/二叉树算法概述",
      "url": "6f964124-4281-5896-9c85-bef7889c1853",
      "slug": "6f964124-4281-5896-9c85-bef7889c1853",
      "id": 173001603,
      "doc_id": 173001603,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "y_Oqj3k9s4r7_B0E",
      "sibling_uuid": "khan_nXPJpb0VKSh",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "khan_nXPJpb0VKSh",
      "type": "DOC",
      "title": "算法/基础/算法的复杂度评估",
      "url": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "slug": "913adb85-34cd-560c-bd9f-f0190c86de81",
      "id": 172804453,
      "doc_id": 172804453,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "wYLG_9HWIxrCbBwk",
      "sibling_uuid": "RNTAVngVrCEw1W4d",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "RNTAVngVrCEw1W4d",
      "type": "DOC",
      "title": "算法/基础/基本的数据结构",
      "url": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "slug": "0457a71b-6e9d-5a9b-a007-f6fc64c2a523",
      "id": 172778725,
      "doc_id": 172778725,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "khan_nXPJpb0VKSh",
      "sibling_uuid": "_ozNsSk-G44HrOyq",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_ozNsSk-G44HrOyq",
      "type": "DOC",
      "title": "算法/动态规划/最长递增子序列 + 俄罗斯套娃信封问题",
      "url": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "slug": "bd4652d6-8954-5bf3-804d-0118ed1007be",
      "id": 172626939,
      "doc_id": 172626939,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "RNTAVngVrCEw1W4d",
      "sibling_uuid": "jITwin6DQNTM7kS0",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "jITwin6DQNTM7kS0",
      "type": "DOC",
      "title": "算法/树/树的一些基本概念",
      "url": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "slug": "de7d537f-1a3d-572c-baaa-a98b3e5ff9d5",
      "id": 172455737,
      "doc_id": 172455737,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_ozNsSk-G44HrOyq",
      "sibling_uuid": "il4IZ6nI9yFNTraG",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "il4IZ6nI9yFNTraG",
      "type": "DOC",
      "title": "算法/树/二叉堆与优先级队列的关系",
      "url": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "slug": "5dd68a73-7991-5e3e-8bd6-3665771b24e5",
      "id": 172455736,
      "doc_id": 172455736,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "jITwin6DQNTM7kS0",
      "sibling_uuid": "6NQNxZeyRM5pcWMy",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "6NQNxZeyRM5pcWMy",
      "type": "DOC",
      "title": "算法/栈/翻转二叉树的两种解题思路",
      "url": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "slug": "5dad5968-f583-5c57-94ae-8aa692c69c9f",
      "id": 172455735,
      "doc_id": 172455735,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "il4IZ6nI9yFNTraG",
      "sibling_uuid": "wnl52FZeerAvL7z8",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "wnl52FZeerAvL7z8",
      "type": "DOC",
      "title": "算法/框架/计算机算法的框架思维",
      "url": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "slug": "8fbc80cc-ba66-5782-9643-31f176a3fa0a",
      "id": 172455734,
      "doc_id": 172455734,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "6NQNxZeyRM5pcWMy",
      "sibling_uuid": "szASYd4d5Y2C9Zsf",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "szASYd4d5Y2C9Zsf",
      "type": "DOC",
      "title": "翻译/什么才是真正做事？",
      "url": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "slug": "bceddf09-da9a-5795-9c4c-bb640f2bc363",
      "id": 172416659,
      "doc_id": 172416659,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "wnl52FZeerAvL7z8",
      "sibling_uuid": "Muyg_khqJmEGHFxb",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "Muyg_khqJmEGHFxb",
      "type": "DOC",
      "title": "播客/张云帆的芒格之道",
      "url": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "slug": "3a29791d-db02-5ceb-acd0-6bf884b409ac",
      "id": 171574867,
      "doc_id": 171574867,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "szASYd4d5Y2C9Zsf",
      "sibling_uuid": "O9kszp8svLA_VCZP",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "O9kszp8svLA_VCZP",
      "type": "DOC",
      "title": "工具/Raycast 使用技巧总结",
      "url": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "slug": "cd4960fb-1dd9-596f-b65a-96387bf6fe0a",
      "id": 172416658,
      "doc_id": 172416658,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "Muyg_khqJmEGHFxb",
      "sibling_uuid": "hh1Yimd1CWkTEp4i",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "hh1Yimd1CWkTEp4i",
      "type": "DOC",
      "title": "工具/Obsidian 快捷键",
      "url": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "slug": "151a786a-a63e-5388-ada4-27be5aef5c4e",
      "id": 172416656,
      "doc_id": 172416656,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "O9kszp8svLA_VCZP",
      "sibling_uuid": "CTYqza3IerLP3sAj",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "CTYqza3IerLP3sAj",
      "type": "DOC",
      "title": "工具/Manico 快捷键",
      "url": "4424154a-634d-5616-9c99-cbda52018d09",
      "slug": "4424154a-634d-5616-9c99-cbda52018d09",
      "id": 172416655,
      "doc_id": 172416655,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "hh1Yimd1CWkTEp4i",
      "sibling_uuid": "EAsJ24CVyYLvfWTI",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "EAsJ24CVyYLvfWTI",
      "type": "DOC",
      "title": "工具/Github Copilot 使用技巧总结",
      "url": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "slug": "3fd1b909-88c4-53e8-835c-1adbccf5cffc",
      "id": 172416652,
      "doc_id": 172416652,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "CTYqza3IerLP3sAj",
      "sibling_uuid": "lO-Lr8b_MDcMhG1H",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "lO-Lr8b_MDcMhG1H",
      "type": "DOC",
      "title": "工具/Arc 浏览器使用技巧总结",
      "url": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "slug": "a02c5897-1801-55ac-b0e0-6b4194b067fb",
      "id": 172416651,
      "doc_id": 172416651,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "EAsJ24CVyYLvfWTI",
      "sibling_uuid": "_wtdn1hNO1xtQvZd",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_wtdn1hNO1xtQvZd",
      "type": "DOC",
      "title": "播客/AI 时代的频率跃迁背景下个人的选择：高频的卷或低频的定",
      "url": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "slug": "2888c80f-b109-5a54-bdbe-7c97a407ab59",
      "id": 172416650,
      "doc_id": 172416650,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "lO-Lr8b_MDcMhG1H",
      "sibling_uuid": "OtviJTdDqdY91pqj",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "OtviJTdDqdY91pqj",
      "type": "DOC",
      "title": "播客/人生危机不是崩溃而是瓦解",
      "url": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "slug": "040db9fb-a8f0-5bb4-b006-3efdf2bec160",
      "id": 171574866,
      "doc_id": 171574866,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_wtdn1hNO1xtQvZd",
      "sibling_uuid": "9Wu8-viWsSS_a-1Q",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "9Wu8-viWsSS_a-1Q",
      "type": "DOC",
      "title": "前端/性能/长列表或大数据渲染优化的一些思路",
      "url": "4214e1f9-529d-5201-b575-248082694fd6",
      "slug": "4214e1f9-529d-5201-b575-248082694fd6",
      "id": 171574865,
      "doc_id": 171574865,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "OtviJTdDqdY91pqj",
      "sibling_uuid": "L-on40WX9SFdz4nI",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "L-on40WX9SFdz4nI",
      "type": "DOC",
      "title": "思维模型/机会成本与沉没成本",
      "url": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
      "slug": "57d16359-e2d9-50e3-b2e5-471c38db8b70",
      "id": 168216266,
      "doc_id": 168216266,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "9Wu8-viWsSS_a-1Q",
      "sibling_uuid": "gTYtjNhhncenPOt5",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "gTYtjNhhncenPOt5",
      "type": "DOC",
      "title": "播客/Same as Ever 得到听书笔记",
      "url": "27b086f5-4074-5ef2-908e-f697b587b80b",
      "slug": "27b086f5-4074-5ef2-908e-f697b587b80b",
      "id": 168216265,
      "doc_id": 168216265,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "L-on40WX9SFdz4nI",
      "sibling_uuid": "s76yUGXO3AY1MWwh",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "s76yUGXO3AY1MWwh",
      "type": "DOC",
      "title": "前端/Vue/Pinia状态管理库文档笔记",
      "url": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "slug": "b3055a75-f4cc-52a0-93da-90e2eb1c913f",
      "id": 168216264,
      "doc_id": 168216264,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "gTYtjNhhncenPOt5",
      "sibling_uuid": "ojEhe8ynI0TFLHPr",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "ojEhe8ynI0TFLHPr",
      "type": "DOC",
      "title": "英语/语法/英语兔语法",
      "url": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "slug": "15964b35-23bc-56d4-97db-1c4eacb8ea9e",
      "id": 168095560,
      "doc_id": 168095560,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "s76yUGXO3AY1MWwh",
      "sibling_uuid": "zPw6IlPTYBC_b9KN",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "zPw6IlPTYBC_b9KN",
      "type": "DOC",
      "title": "算法/动态规划/最小硬币数&凑零钱问题",
      "url": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "slug": "164a9949-66e8-5cb8-99a0-148862c9c79a",
      "id": 168095558,
      "doc_id": 168095558,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "ojEhe8ynI0TFLHPr",
      "sibling_uuid": "Ho8Aqv4b_BK3DAqI",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "Ho8Aqv4b_BK3DAqI",
      "type": "DOC",
      "title": "算法/动态规划/斐波那契数列",
      "url": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "slug": "e424cba0-1726-5c35-bbb3-89cca880de82",
      "id": 168095559,
      "doc_id": 168095559,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "zPw6IlPTYBC_b9KN",
      "sibling_uuid": "AV1HPINO8t_jsXln",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "AV1HPINO8t_jsXln",
      "type": "DOC",
      "title": "工具/Obsidina快捷键",
      "url": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "slug": "e6506cdb-35eb-5497-ae29-ed5a2abf969f",
      "id": 168095557,
      "doc_id": 168095557,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "Ho8Aqv4b_BK3DAqI",
      "sibling_uuid": "3AEB7OJIl306Cmpd",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "3AEB7OJIl306Cmpd",
      "type": "DOC",
      "title": "前端/架构/前端框架设计里的\"权衡\" 与\"选择\"",
      "url": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "slug": "da84854d-ebb9-5579-8c43-48155fe3f2f7",
      "id": 168095556,
      "doc_id": 168095556,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "AV1HPINO8t_jsXln",
      "sibling_uuid": "BLn0QY4wioNSAcEc",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "BLn0QY4wioNSAcEc",
      "type": "DOC",
      "title": "前端/Vue/Vue3 框架设计的核心要素",
      "url": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "slug": "a78f947d-5133-509b-a4a5-39e89591a91c",
      "id": 168095553,
      "doc_id": 168095553,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "3AEB7OJIl306Cmpd",
      "sibling_uuid": "l26BNeX_7EAqeV9G",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "l26BNeX_7EAqeV9G",
      "type": "DOC",
      "title": "前端/Vue/Vue 的整体设计思路",
      "url": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "slug": "29a73693-d417-57af-bb3a-6efd95b22d93",
      "id": 168095552,
      "doc_id": 168095552,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "BLn0QY4wioNSAcEc",
      "sibling_uuid": "_mGQoxBwbcJKyw4i",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "_mGQoxBwbcJKyw4i",
      "type": "DOC",
      "title": "前端/Typescript/重新学习 Typescript",
      "url": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "slug": "a891fa95-1d24-524f-b241-c0cb7737d75e",
      "id": 168095551,
      "doc_id": 168095551,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "l26BNeX_7EAqeV9G",
      "sibling_uuid": "IAeHIWarwSN0dxTG",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "IAeHIWarwSN0dxTG",
      "type": "DOC",
      "title": "前端/JavaScript/实现批量请求并控制最大并发数",
      "url": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "slug": "d7481637-7459-5c98-ba1f-5180cd1e0948",
      "id": 168095550,
      "doc_id": 168095550,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "_mGQoxBwbcJKyw4i",
      "sibling_uuid": "ZsluFTpqLKblYqAY",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "ZsluFTpqLKblYqAY",
      "type": "DOC",
      "title": "前端/JavaScript/如何检测页面是否在前台运行（检测页面的可见性）",
      "url": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "slug": "9b12ad6f-17a2-58f2-bb9d-872e12428196",
      "id": 168095549,
      "doc_id": 168095549,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "IAeHIWarwSN0dxTG",
      "sibling_uuid": "zPHaZyW3qoMOezNc",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "zPHaZyW3qoMOezNc",
      "type": "DOC",
      "title": "前端/JavaScript/为什么要用 setTimeout 模拟 setInterval ？",
      "url": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "slug": "e5a02817-e232-5d13-a043-455e0e4140e6",
      "id": 168095548,
      "doc_id": 168095548,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "ZsluFTpqLKblYqAY",
      "sibling_uuid": "cqOAU_wFXIrKZbhb",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    },
    {
      "uuid": "cqOAU_wFXIrKZbhb",
      "type": "DOC",
      "title": "前端/CSS/回流和重绘",
      "url": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "slug": "465a49b1-860d-5c7e-a763-b8a32555fa08",
      "id": 168095547,
      "doc_id": 168095547,
      "level": 0,
      "depth": 1,
      "open_window": 1,
      "visible": 1,
      "prev_uuid": "zPHaZyW3qoMOezNc",
      "sibling_uuid": "",
      "child_uuid": "",
      "parent_uuid": "",
      "_serializer": "v2.toc_item"
    }
  ]
}