import{_ as l,o as e,c as i,V as t}from"./chunks/framework.9ad71fd6.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"page/0031.md"}'),r={name:"page/0031.md"},a=t('<p>#前端 #前端组件</p><p>PPT</p><ul><li>容器 <ul><li>协议</li></ul></li><li>边界 <ul><li>协作</li><li>组件分类</li><li>icon</li></ul></li></ul><p>一些想法</p><p><a href="https://www.figma.com/file/Ah2mNHgMgl07O883vTVR0w/0031%E7%AF%87%EF%BC%9A%E7%BB%84%E4%BB%B6%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6?node-id=0-1&amp;t=CRxXg5vR7ORlmgzQ-11" target="_blank" rel="noreferrer">0031篇：组件回收机制 – Figma</a></p><h2 id="组件回收机制" tabindex="-1">组件回收机制： <a class="header-anchor" href="#组件回收机制" aria-label="Permalink to &quot;组件回收机制：&quot;">​</a></h2><p>目的</p><ul><li>组件</li></ul><p>入库：</p><p>物料市场：？</p><ul><li><a href="https://taro-ext.jd.com/?sort=hot" target="_blank" rel="noreferrer">Taro 物料市场 | 让每一个轮子产生价值</a></li></ul><p><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202304281005861.png" alt="image.png"></p><p>物料管理我们使用npm仓库对前端物料进行管理，私有化npm仓库有很多例如Verdaccio、cnpm、nexus，在这里我们使用nexus进行npm包管理。但是nexus仓库只能够展示npm包，如下</p><ul><li>unpkg ： 直接打包发布，使用方式直接 <code>script</code>引入</li><li></li></ul><p><a href="https://next.startdt.com/develop/start.html" target="_blank" rel="noreferrer">快速开始 | 前端开发服务平台 - Next</a></p><ul><li><a href="https://next.startdt.com/develop/template.html" target="_blank" rel="noreferrer">物料模板 | 前端开发服务平台 - Next</a></li><li><a href="https://next.startdt.com/develop/protocol.html#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84" target="_blank" rel="noreferrer">数据协议 | 前端开发服务平台 - Next</a></li><li>AppWorks CLI</li></ul><h2 id="一些结论" tabindex="-1">一些结论 <a class="header-anchor" href="#一些结论" aria-label="Permalink to &quot;一些结论&quot;">​</a></h2><ul><li><p>回收到哪里？大家怎么用？ 2d</p><ul><li>所以最终还是得有个 <code>容器</code> 里承载，容器里具备基础的要素及协议等</li><li>仓库：多包管理，单体仓库 <ul><li>git submodule</li></ul></li><li>规范：协议</li><li>容器 <ul><li>仓库</li><li>doc</li><li>引用方式：unpkg 、npm @nancel/pro-com/table</li><li>package.json <ul><li>main.</li><li>export</li></ul></li></ul></li></ul></li><li><p>短期和长期</p><ul><li>短期：容器支持</li><li>长期：物料平台支持，cli 工具等等</li></ul></li><li><p>统一的回收物料协议，需要制定一版，先制定初版，必要的信息</p><ul><li>比如依赖的原子组件</li><li>第三方包：</li><li>文档规范？ 配合 <code>pro vitepress</code> 规范</li><li>版本号：</li><li>发版规则：</li></ul></li><li><p>命名规范：</p><ul><li>命名空间</li><li>组件类型细化</li></ul></li><li><p><code>cli</code> 工具统一，使用 next-cli 或者 ice-cli 工具等，简单封装？</p></li><li><p>如何使用</p><ul><li><code>npm</code> 私有服务，长期来说，需要和软研平台，把基础能力打通。</li><li>找找内部有没有类似于<code> unpkg</code> cdn 的东西，</li></ul></li><li><p>边界问题：</p><ul><li>原子组件： <ul><li>新的需求？</li></ul></li><li>组合组件？</li><li>业务组件：</li><li>回收组件： <ul><li>高级组件</li><li>业务组件？</li></ul></li><li>如何协作：</li></ul></li><li><p><a href="https://www.infoq.cn/article/MgILbHevE0WOp87VRAuA" target="_blank" rel="noreferrer">京东零售平台：前端组件资源共享与中心化管理实践_前端_陈俊生_InfoQ精选文章</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/u5oAcIYiGrl1qOujOYjzqw" target="_blank" rel="noreferrer">微信公众平台</a></p></li><li><p>低代码协议：<a href="https://lowcode-engine.cn/site/docs/specs/lowcode-spec" target="_blank" rel="noreferrer">《低代码引擎搭建协议规范》 | Low-Code Engine</a></p></li><li><p><a href="https://taro-ext.jd.com/search?keyword=table" target="_blank" rel="noreferrer">Taro 物料市场 | 让每一个轮子产生价值</a></p></li></ul>',18),o=[a];function p(n,c,u,s,d,m){return e(),i("div",null,o)}const f=l(r,[["render",p]]);export{_ as __pageData,f as default};
