const a=[{id:118622448,slug:"pufaatp7zg5g59ec",title:"0008.EN.语法综述",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:`<a name="7d7c6591"></a>
# 英语语法综述

<a name="779a5c56"></a>
## 为什么学语法？

为了\`造句\`

<a name="fa657f85"></a>
## 怎么学语法？

先\`简单句\` ，然后\`长难句\`

<a name="a012b28e"></a>
## 什么是 \`简单句\`

除了 感叹句、省略句、问句（向整句提问） ，都是在说 \`什么 + 怎么样\`  ，即 \`主语 + 谓语\` 如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191153960.png#id=zJgHN&originHeight=241&originWidth=295&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

这就是\`简单句\`

<a name="c8d5d350"></a>
## 那么 \`并列句\` 和 \`（主从）复杂句\` 呢？

并列句，\`简单句\`的叠加

\`（主从）复杂句\` ，即\`简单句\`作为\`其他简单句\`的\`句子成分\` ，并且可以无限套娃 。如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191158455.png#id=H7ULu&originHeight=541&originWidth=967&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

这就引出了 \`各种从句\`

回到\`简单句\`，即\`什么 + 怎么样\` 中的 \`怎么样\`  这就引出了 \`谓语动词\`

<a name="92bf8741"></a>
## 谓语动词

5 种谓语动词，引出了 5 种\`基本句子类型\`

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191202146.png#id=dSV3e&originHeight=441&originWidth=485&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

即：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191203448.png#id=JBycg&originHeight=311&originWidth=867&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="22a0df26"></a>
### 1、主谓结构

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191205145.png#id=P5p1p&originHeight=128&originWidth=301&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="61f11603"></a>
### 2、主谓宾

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191205344.png#id=smkHJ&originHeight=133&originWidth=364&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="13b562d6"></a>
### 3、主谓 + 直接宾语 + 间接宾语

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191206023.png#id=Ldw2l&originHeight=138&originWidth=523&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="183bd198"></a>
### 4、主谓宾 + 宾语补语

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191207709.png#id=lcby9&originHeight=141&originWidth=523&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="138d3039"></a>
### 5、主系表

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191208852.png#id=JjoUu&originHeight=679&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="9e9c5012"></a>
## 句子成分

上面的 5 种 \`基本句子类型\`，对于着 \`5 种句子成分\` 即

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191209461.png#id=sREvd&originHeight=215&originWidth=187&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

再加另外 3 种

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191210329.png#id=ojaxx&originHeight=340&originWidth=237&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

就构成了所有的\`句子成分\`。

下面是 \`定语\`、\`状语\`、\`同位语\`的示例：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191210204.png#id=DO8nO&originHeight=569&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

> [!tip]<br />同位语，即把\`主语或者宾语\` 换种方式\`再说一遍\`


所以，一共有 \`8 种句子成分\`，如下：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191214821.png#id=W1PZJ&originHeight=301&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

> [!tip]<br />插入语 解释如上图


而\`句子成分\`又由 不同\`词类\`组成，这就引出了\`词类\`

<a name="9092d3af"></a>
## 词类

一共 \`10 种词类\`，如下

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191218997.png#id=FVnzv&originHeight=399&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

10 种\`词类\`的示例如下：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191219090.png#id=TcRPU&originHeight=1084&originWidth=1203&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

除了谓语动词是 \`“动词”\` ， 句子成分可包含 \`完全不同的词类\` ，如下图，这句包含了 \`不同的句子成分\` 及 \`不同的词类\`

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191221125.png#id=HASP8&originHeight=497&originWidth=1060&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

所以，这里的\`谓语动词\` ,  即作句子成分中的 \`”谓语“\` ， 当然，这里不作为”谓语“ 的动词，称为 \`非谓语动词\` ， \`谓语动词 + 非谓语动词 = 英语中的所有动词\` ，废话，这是肯定啊，比如 \`是你 + 不是你 = 所有人\`  嘛。

<a name="3d1a61d0"></a>
## 谓语动词 + 非谓语动词 = 动词

如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191230890.png#id=rBYx1&originHeight=1218&originWidth=1794&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="6be7ec3f"></a>
### 先说谓语动词

即 \`动词\`  作句子成分中的 \`”谓语“\` ， 区别于“中文” 里的动词英文中谓语动词的 \`“三大本领”\`

即 \`时间、状态、语气\`  ，如下图

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191235101.png#id=Ape5d&originHeight=1880&originWidth=1912&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

即：

- \`4 种动作时间 * 4 种 动作状态 = 16 种时态\`
- \`语气\`，如上图 \`虚拟、陈述、祈使\` 等

另 \`谓语动词\`无法表示 \`否定、可能性、必须性\` 等， 需要借助 \`”助动词“\` ，如下图：

<a name="4e30960b"></a>
#### 助动词

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191241887.png#id=cfcyP&originHeight=2036&originWidth=1448&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)<br />

<a name="02033c2c"></a>
### 再说非谓语动词

非谓语动词，可以做 \`几乎所有的其他句子成分\` ，如下图

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191237875.png#id=cvUWX&originHeight=992&originWidth=1924&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="9415a826"></a>
## 最后

发现没有，说来说去都是\`动词\` ，是的 英语语法的核心 就是\`动词\` ， **动词能够”串“起所有语法概念** ，如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191243354.png#id=d48Kq&originHeight=1328&originWidth=2622&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="d17a0f0b"></a>
### 参考

> [https://www.bilibili.com/video/BV1XY411J7aG?p=2&vd_source=e507242a02e4c9fdb6386bb791e1c08f](https://www.bilibili.com/video/BV1XY411J7aG?p=2&vd_source=e507242a02e4c9fdb6386bb791e1c08f)

`,body_draft:`<a name="7d7c6591"></a>
# 英语语法综述

<a name="779a5c56"></a>
## 为什么学语法？

为了\`造句\`

<a name="fa657f85"></a>
## 怎么学语法？

先\`简单句\` ，然后\`长难句\`

<a name="a012b28e"></a>
## 什么是 \`简单句\`

除了 感叹句、省略句、问句（向整句提问） ，都是在说 \`什么 + 怎么样\`  ，即 \`主语 + 谓语\` 如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191153960.png#id=zJgHN&originHeight=241&originWidth=295&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

这就是\`简单句\`

<a name="c8d5d350"></a>
## 那么 \`并列句\` 和 \`（主从）复杂句\` 呢？

并列句，\`简单句\`的叠加

\`（主从）复杂句\` ，即\`简单句\`作为\`其他简单句\`的\`句子成分\` ，并且可以无限套娃 。如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191158455.png#id=H7ULu&originHeight=541&originWidth=967&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

这就引出了 \`各种从句\`

回到\`简单句\`，即\`什么 + 怎么样\` 中的 \`怎么样\`  这就引出了 \`谓语动词\`

<a name="92bf8741"></a>
## 谓语动词

5 种谓语动词，引出了 5 种\`基本句子类型\`

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191202146.png#id=dSV3e&originHeight=441&originWidth=485&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

即：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191203448.png#id=JBycg&originHeight=311&originWidth=867&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="22a0df26"></a>
### 1、主谓结构

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191205145.png#id=P5p1p&originHeight=128&originWidth=301&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="61f11603"></a>
### 2、主谓宾

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191205344.png#id=smkHJ&originHeight=133&originWidth=364&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="13b562d6"></a>
### 3、主谓 + 直接宾语 + 间接宾语

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191206023.png#id=Ldw2l&originHeight=138&originWidth=523&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="183bd198"></a>
### 4、主谓宾 + 宾语补语

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191207709.png#id=lcby9&originHeight=141&originWidth=523&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="138d3039"></a>
### 5、主系表

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191208852.png#id=JjoUu&originHeight=679&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="9e9c5012"></a>
## 句子成分

上面的 5 种 \`基本句子类型\`，对于着 \`5 种句子成分\` 即

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191209461.png#id=sREvd&originHeight=215&originWidth=187&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

再加另外 3 种

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191210329.png#id=ojaxx&originHeight=340&originWidth=237&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

就构成了所有的\`句子成分\`。

下面是 \`定语\`、\`状语\`、\`同位语\`的示例：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191210204.png#id=DO8nO&originHeight=569&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

> [!tip]<br />同位语，即把\`主语或者宾语\` 换种方式\`再说一遍\`


所以，一共有 \`8 种句子成分\`，如下：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191214821.png#id=W1PZJ&originHeight=301&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

> [!tip]<br />插入语 解释如上图


而\`句子成分\`又由 不同\`词类\`组成，这就引出了\`词类\`

<a name="9092d3af"></a>
## 词类

一共 \`10 种词类\`，如下

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191218997.png#id=FVnzv&originHeight=399&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

10 种\`词类\`的示例如下：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191219090.png#id=TcRPU&originHeight=1084&originWidth=1203&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

除了谓语动词是 \`“动词”\` ， 句子成分可包含 \`完全不同的词类\` ，如下图，这句包含了 \`不同的句子成分\` 及 \`不同的词类\`

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191221125.png#id=HASP8&originHeight=497&originWidth=1060&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

所以，这里的\`谓语动词\` ,  即作句子成分中的 \`”谓语“\` ， 当然，这里不作为”谓语“ 的动词，称为 \`非谓语动词\` ， \`谓语动词 + 非谓语动词 = 英语中的所有动词\` ，废话，这是肯定啊，比如 \`是你 + 不是你 = 所有人\`  嘛。

<a name="3d1a61d0"></a>
## 谓语动词 + 非谓语动词 = 动词

如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191230890.png#id=rBYx1&originHeight=1218&originWidth=1794&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="6be7ec3f"></a>
### 先说谓语动词

即 \`动词\`  作句子成分中的 \`”谓语“\` ， 区别于“中文” 里的动词英文中谓语动词的 \`“三大本领”\`

即 \`时间、状态、语气\`  ，如下图

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191235101.png#id=Ape5d&originHeight=1880&originWidth=1912&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

即：

- \`4 种动作时间 * 4 种 动作状态 = 16 种时态\`
- \`语气\`，如上图 \`虚拟、陈述、祈使\` 等

另 \`谓语动词\`无法表示 \`否定、可能性、必须性\` 等， 需要借助 \`”助动词“\` ，如下图：

<a name="4e30960b"></a>
#### 助动词

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191241887.png#id=cfcyP&originHeight=2036&originWidth=1448&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)<br />

<a name="02033c2c"></a>
### 再说非谓语动词

非谓语动词，可以做 \`几乎所有的其他句子成分\` ，如下图

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191237875.png#id=cvUWX&originHeight=992&originWidth=1924&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="9415a826"></a>
## 最后

发现没有，说来说去都是\`动词\` ，是的 英语语法的核心 就是\`动词\` ， **动词能够”串“起所有语法概念** ，如下图：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191243354.png#id=d48Kq&originHeight=1328&originWidth=2622&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="d17a0f0b"></a>
### 参考

> [https://www.bilibili.com/video/BV1XY411J7aG?p=2&vd_source=e507242a02e4c9fdb6386bb791e1c08f](https://www.bilibili.com/video/BV1XY411J7aG?p=2&vd_source=e507242a02e4c9fdb6386bb791e1c08f)

`,body_html:'<!doctype html><div class="lake-content" typography="classic"><h1 id="7d7c6591"><span class="ne-text">英语语法综述</span></h1><p id="ud21470b5" class="ne-p"><br></p><h2 id="779a5c56"><span class="ne-text">为什么学语法？</span></h2><p id="u45af2c35" class="ne-p"><br></p><p id="udc5dbf69" class="ne-p"><span class="ne-text">为了</span><code class="ne-code"><span class="ne-text">造句</span></code></p><p id="u8201ee9d" class="ne-p"><br></p><h2 id="fa657f85"><span class="ne-text">怎么学语法？</span></h2><p id="ud0cf7a83" class="ne-p"><br></p><p id="u2a28be92" class="ne-p"><span class="ne-text">先</span><code class="ne-code"><span class="ne-text">简单句</span></code><span class="ne-text"> ，然后</span><code class="ne-code"><span class="ne-text">长难句</span></code></p><p id="uba305618" class="ne-p"><br></p><h2 id="a012b28e"><span class="ne-text">什么是 </span><code class="ne-code"><span class="ne-text">简单句</span></code></h2><p id="ud6e7c243" class="ne-p"><br></p><p id="ubeaa4b88" class="ne-p"><span class="ne-text">除了 感叹句、省略句、问句（向整句提问） ，都是在说 </span><code class="ne-code"><span class="ne-text">什么 + 怎么样</span></code><span class="ne-text">  ，即 </span><code class="ne-code"><span class="ne-text">主语 + 谓语</span></code><span class="ne-text"> 如下图：</span></p><p id="ue5ceb3ac" class="ne-p"><br></p><p id="ud7534b9d" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191153960.png" width="295" id="zJgHN" class="ne-image"></p><p id="u6465a77d" class="ne-p"><br></p><p id="u628769ad" class="ne-p"><span class="ne-text">这就是</span><code class="ne-code"><span class="ne-text">简单句</span></code></p><p id="ub8fdb632" class="ne-p"><br></p><h2 id="c8d5d350"><span class="ne-text">那么 </span><code class="ne-code"><span class="ne-text">并列句</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">（主从）复杂句</span></code><span class="ne-text"> 呢？</span></h2><p id="uf2c1fbbb" class="ne-p"><br></p><p id="uc96ec844" class="ne-p"><span class="ne-text">并列句，</span><code class="ne-code"><span class="ne-text">简单句</span></code><span class="ne-text">的叠加</span></p><p id="u2b4d1116" class="ne-p"><br></p><p id="u3f6aaafe" class="ne-p"><code class="ne-code"><span class="ne-text">（主从）复杂句</span></code><span class="ne-text"> ，即</span><code class="ne-code"><span class="ne-text">简单句</span></code><span class="ne-text">作为</span><code class="ne-code"><span class="ne-text">其他简单句</span></code><span class="ne-text">的</span><code class="ne-code"><span class="ne-text">句子成分</span></code><span class="ne-text"> ，并且可以无限套娃 。如下图：</span></p><p id="u3c9b8d27" class="ne-p"><br></p><p id="uc698d181" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191158455.png" width="967" id="H7ULu" class="ne-image"></p><p id="ub476255b" class="ne-p"><br></p><p id="u40b0a997" class="ne-p"><span class="ne-text">这就引出了 </span><code class="ne-code"><span class="ne-text">各种从句</span></code></p><p id="u5a6779fc" class="ne-p"><br></p><p id="u0f4fa50a" class="ne-p"><span class="ne-text">回到</span><code class="ne-code"><span class="ne-text">简单句</span></code><span class="ne-text">，即</span><code class="ne-code"><span class="ne-text">什么 + 怎么样</span></code><span class="ne-text"> 中的 </span><code class="ne-code"><span class="ne-text">怎么样</span></code><span class="ne-text">  这就引出了 </span><code class="ne-code"><span class="ne-text">谓语动词</span></code></p><p id="u24868373" class="ne-p"><br></p><h2 id="92bf8741"><span class="ne-text">谓语动词</span></h2><p id="u5d68c979" class="ne-p"><br></p><p id="ucf86491a" class="ne-p"><span class="ne-text">5 种谓语动词，引出了 5 种</span><code class="ne-code"><span class="ne-text">基本句子类型</span></code></p><p id="u71a668f6" class="ne-p"><br></p><p id="u365cbb7a" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191202146.png" width="485" id="dSV3e" class="ne-image"></p><p id="u35a3f6ec" class="ne-p"><br></p><p id="ufaa427ba" class="ne-p"><span class="ne-text">即：</span></p><p id="u652dbab6" class="ne-p"><br></p><p id="ucfaea9bd" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191203448.png" width="867" id="JBycg" class="ne-image"></p><p id="u474e9548" class="ne-p"><br></p><h3 id="22a0df26"><span class="ne-text">1、主谓结构</span></h3><p id="u19104f91" class="ne-p"><br></p><p id="ue814ff87" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191205145.png" width="301" id="P5p1p" class="ne-image"></p><p id="ua3a69732" class="ne-p"><br></p><h3 id="61f11603"><span class="ne-text">2、主谓宾</span></h3><p id="u9c46ea20" class="ne-p"><br></p><p id="ufef2940f" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191205344.png" width="364" id="smkHJ" class="ne-image"></p><p id="uc60e969f" class="ne-p"><br></p><h3 id="13b562d6"><span class="ne-text">3、主谓 + 直接宾语 + 间接宾语</span></h3><p id="ued558050" class="ne-p"><br></p><p id="u56477fe0" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191206023.png" width="523" id="Ldw2l" class="ne-image"></p><p id="ubd5c2541" class="ne-p"><br></p><h3 id="183bd198"><span class="ne-text">4、主谓宾 + 宾语补语</span></h3><p id="u137be351" class="ne-p"><br></p><p id="u1044b8b5" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191207709.png" width="523" id="lcby9" class="ne-image"></p><p id="u07940312" class="ne-p"><br></p><h3 id="138d3039"><span class="ne-text">5、主系表</span></h3><p id="u8b6b60c3" class="ne-p"><br></p><p id="u78c8f5e5" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191208852.png" width="807" id="JjoUu" class="ne-image"></p><p id="u956584d4" class="ne-p"><br></p><h2 id="9e9c5012"><span class="ne-text">句子成分</span></h2><p id="u49a62548" class="ne-p"><br></p><p id="ua49afba6" class="ne-p"><span class="ne-text">上面的 5 种 </span><code class="ne-code"><span class="ne-text">基本句子类型</span></code><span class="ne-text">，对于着 </span><code class="ne-code"><span class="ne-text">5 种句子成分</span></code><span class="ne-text"> 即</span></p><p id="u7fcd206e" class="ne-p"><br></p><p id="uea5a85b2" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191209461.png" width="187" id="sREvd" class="ne-image"></p><p id="u5a221d3d" class="ne-p"><br></p><p id="ue0ac5298" class="ne-p"><span class="ne-text">再加另外 3 种</span></p><p id="u39aff0c9" class="ne-p"><br></p><p id="u925dd935" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191210329.png" width="237" id="ojaxx" class="ne-image"></p><p id="u6258e234" class="ne-p"><br></p><p id="u8ed09531" class="ne-p"><span class="ne-text">就构成了所有的</span><code class="ne-code"><span class="ne-text">句子成分</span></code><span class="ne-text">。</span></p><p id="u77c998e1" class="ne-p"><br></p><p id="u171da1b0" class="ne-p"><span class="ne-text">下面是 </span><code class="ne-code"><span class="ne-text">定语</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">状语</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">同位语</span></code><span class="ne-text">的示例：</span></p><p id="u91c3b526" class="ne-p"><br></p><p id="ueeb14e36" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191210204.png" width="807" id="DO8nO" class="ne-image"></p><p id="u65deb595" class="ne-p"><br></p><div class="ne-quote"><p id="u80a42de2" class="ne-p"><span class="ne-text">[!tip]<br /></span><span class="ne-text">同位语，即把</span><code class="ne-code"><span class="ne-text">主语或者宾语</span></code><span class="ne-text"> 换种方式</span><code class="ne-code"><span class="ne-text">再说一遍</span></code></p></div><p id="udeece413" class="ne-p"><br></p><p id="ue5ba15e7" class="ne-p"><span class="ne-text">所以，一共有 </span><code class="ne-code"><span class="ne-text">8 种句子成分</span></code><span class="ne-text">，如下：</span></p><p id="ud01f7de1" class="ne-p"><br></p><p id="u91253b14" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191214821.png" width="807" id="W1PZJ" class="ne-image"></p><p id="u3acd45f9" class="ne-p"><br></p><div class="ne-quote"><p id="u1da4eea8" class="ne-p"><span class="ne-text">[!tip]<br /></span><mark class="ne-mark"><span class="ne-text">插入语</span></mark><span class="ne-text"> 解释如上图</span></p></div><p id="uf2e77654" class="ne-p"><br></p><p id="ud88320b7" class="ne-p"><span class="ne-text">而</span><code class="ne-code"><span class="ne-text">句子成分</span></code><span class="ne-text">又由 不同</span><code class="ne-code"><span class="ne-text">词类</span></code><span class="ne-text">组成，这就引出了</span><code class="ne-code"><span class="ne-text">词类</span></code></p><p id="u477c817d" class="ne-p"><br></p><h2 id="9092d3af"><span class="ne-text">词类</span></h2><p id="u512ec9fc" class="ne-p"><br></p><p id="u70ce52af" class="ne-p"><span class="ne-text">一共 </span><code class="ne-code"><span class="ne-text">10 种词类</span></code><span class="ne-text">，如下</span></p><p id="u80379eb3" class="ne-p"><br></p><p id="ua9c8e035" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191218997.png" width="807" id="FVnzv" class="ne-image"></p><p id="ub67a3e1e" class="ne-p"><br></p><p id="u61b0cff6" class="ne-p"><span class="ne-text">10 种</span><code class="ne-code"><span class="ne-text">词类</span></code><span class="ne-text">的示例如下：</span></p><p id="uf2c7afb2" class="ne-p"><br></p><p id="u11013c42" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191219090.png" width="1203" id="TcRPU" class="ne-image"></p><p id="ub6290801" class="ne-p"><br></p><p id="ub2cd2637" class="ne-p"><span class="ne-text">除了谓语动词是 </span><code class="ne-code"><span class="ne-text">“动词”</span></code><span class="ne-text"> ， 句子成分可包含 </span><code class="ne-code"><span class="ne-text">完全不同的词类</span></code><span class="ne-text"> ，如下图，这句包含了 </span><code class="ne-code"><span class="ne-text">不同的句子成分</span></code><span class="ne-text"> 及 </span><code class="ne-code"><span class="ne-text">不同的词类</span></code></p><p id="u1fd4b897" class="ne-p"><br></p><p id="u5aff7125" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191221125.png" width="1060" id="HASP8" class="ne-image"></p><p id="ue38577e5" class="ne-p"><br></p><p id="u214b8aab" class="ne-p"><span class="ne-text">所以，这里的</span><code class="ne-code"><span class="ne-text">谓语动词</span></code><span class="ne-text"> ,  即作句子成分中的 </span><code class="ne-code"><span class="ne-text">”谓语“</span></code><span class="ne-text"> ， 当然，这里不作为”谓语“ 的动词，称为 </span><code class="ne-code"><span class="ne-text">非谓语动词</span></code><span class="ne-text"> ， </span><code class="ne-code"><span class="ne-text">谓语动词 + 非谓语动词 = 英语中的所有动词</span></code><span class="ne-text"> ，废话，这是肯定啊，比如 </span><code class="ne-code"><span class="ne-text">是你 + 不是你 = 所有人</span></code><span class="ne-text">  嘛。</span></p><p id="u1d5ec36d" class="ne-p"><br></p><h2 id="3d1a61d0"><span class="ne-text">谓语动词 + 非谓语动词 = 动词</span></h2><p id="u6bdf9b7c" class="ne-p"><br></p><p id="ud3855710" class="ne-p"><span class="ne-text">如下图：</span></p><p id="u6574a449" class="ne-p"><br></p><p id="u3c8f6702" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191230890.png" width="1794" id="rBYx1" class="ne-image"></p><p id="u14e85df2" class="ne-p"><br></p><h3 id="6be7ec3f"><span class="ne-text">先说谓语动词</span></h3><p id="u6a378104" class="ne-p"><br></p><p id="u8d888b88" class="ne-p"><span class="ne-text">即 </span><code class="ne-code"><span class="ne-text">动词</span></code><span class="ne-text">  作句子成分中的 </span><code class="ne-code"><span class="ne-text">”谓语“</span></code><span class="ne-text"> ， 区别于“中文” 里的动词英文中谓语动词的 </span><code class="ne-code"><span class="ne-text">“三大本领”</span></code></p><p id="u9fe4eae2" class="ne-p"><br></p><p id="ua2ddec9b" class="ne-p"><span class="ne-text">即 </span><code class="ne-code"><span class="ne-text">时间、状态、语气</span></code><span class="ne-text">  ，如下图</span></p><p id="uedb7b02e" class="ne-p"><br></p><p id="u513fa868" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191235101.png" width="1912" id="Ape5d" class="ne-image"></p><p id="u99bb1c10" class="ne-p"><br></p><p id="u72cb5966" class="ne-p"><span class="ne-text">即：</span></p><p id="uaf39a34e" class="ne-p"><br></p><ul class="ne-ul"><li id="u010d06c1"><code class="ne-code"><span class="ne-text">4 种动作时间 * 4 种 动作状态 = 16 种时态</span></code></li><li id="u5f46ca20"><code class="ne-code"><span class="ne-text">语气</span></code><span class="ne-text">，如上图 </span><code class="ne-code"><span class="ne-text">虚拟、陈述、祈使</span></code><span class="ne-text"> 等</span></li></ul><p id="u80cf87fd" class="ne-p"><br></p><p id="u6201f103" class="ne-p"><span class="ne-text">另 </span><code class="ne-code"><span class="ne-text">谓语动词</span></code><span class="ne-text">无法表示 </span><code class="ne-code"><span class="ne-text">否定、可能性、必须性</span></code><span class="ne-text"> 等， 需要借助 </span><code class="ne-code"><span class="ne-text">”助动词“</span></code><span class="ne-text"> ，如下图：</span></p><p id="u9e6ac868" class="ne-p"><br></p><h4 id="4e30960b"><span class="ne-text">助动词</span></h4><p id="u731da5e4" class="ne-p"><br></p><p id="u6cbc7eb5" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191241887.png" width="1448" id="cfcyP" class="ne-image"><span class="ne-text"><br /></span><span class="ne-text"></span></p><p id="ud87426ae" class="ne-p"><br></p><h3 id="02033c2c"><span class="ne-text">再说非谓语动词</span></h3><p id="u52a7140b" class="ne-p"><br></p><p id="u7843e61f" class="ne-p"><span class="ne-text">非谓语动词，可以做 </span><code class="ne-code"><span class="ne-text">几乎所有的其他句子成分</span></code><span class="ne-text"> ，如下图</span></p><p id="ud0bf80bb" class="ne-p"><br></p><p id="u9f661df2" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191237875.png" width="1924" id="cvUWX" class="ne-image"></p><p id="u9e81f9ce" class="ne-p"><br></p><h2 id="9415a826"><span class="ne-text">最后</span></h2><p id="u20a41c68" class="ne-p"><br></p><p id="u4a1e802b" class="ne-p"><span class="ne-text">发现没有，说来说去都是</span><code class="ne-code"><span class="ne-text">动词</span></code><span class="ne-text"> ，是的 英语语法的核心 就是</span><code class="ne-code"><span class="ne-text">动词</span></code><span class="ne-text"> ， </span><strong><span class="ne-text">动词能够”串“起所有语法概念</span></strong><span class="ne-text"> ，如下图：</span></p><p id="u88af9d93" class="ne-p"><br></p><p id="u0c626071" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191243354.png" width="2622" id="d48Kq" class="ne-image"></p><p id="u862432c0" class="ne-p"><br></p><h3 id="d17a0f0b"><span class="ne-text">参考</span></h3><p id="ubf47e5a3" class="ne-p"><br></p><div class="ne-quote"><p id="uf907d103" class="ne-p"><a href="https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f" data-href="https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f" target="_blank" class="ne-link"><span class="ne-text">https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f</span></a></p></div></div>',body_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="7d7c6591" id="7d7c6591"><span data-lake-id="u5830e7e0" id="u5830e7e0">英语语法综述</span></h1><p data-lake-id="ud21470b5" id="ud21470b5"><br></p><h2 data-lake-id="779a5c56" id="779a5c56"><span data-lake-id="u891f6778" id="u891f6778">为什么学语法？</span></h2><p data-lake-id="u45af2c35" id="u45af2c35"><br></p><p data-lake-id="udc5dbf69" id="udc5dbf69"><span data-lake-id="ue47e327c" id="ue47e327c">为了</span><code data-lake-id="u3a3a5df1" id="u3a3a5df1"><span data-lake-id="u8ce9f086" id="u8ce9f086">造句</span></code></p><p data-lake-id="u8201ee9d" id="u8201ee9d"><br></p><h2 data-lake-id="fa657f85" id="fa657f85"><span data-lake-id="u1f55e50f" id="u1f55e50f">怎么学语法？</span></h2><p data-lake-id="ud0cf7a83" id="ud0cf7a83"><br></p><p data-lake-id="u2a28be92" id="u2a28be92"><span data-lake-id="u19fba002" id="u19fba002">先</span><code data-lake-id="u4a727be2" id="u4a727be2"><span data-lake-id="ubea3ddca" id="ubea3ddca">简单句</span></code><span data-lake-id="uad85d143" id="uad85d143"> ，然后</span><code data-lake-id="u6a044afc" id="u6a044afc"><span data-lake-id="u1b4de510" id="u1b4de510">长难句</span></code></p><p data-lake-id="uba305618" id="uba305618"><br></p><h2 data-lake-id="a012b28e" id="a012b28e"><span data-lake-id="u0ba9ece6" id="u0ba9ece6">什么是 </span><code data-lake-id="uca8202c4" id="uca8202c4"><span data-lake-id="u43d23576" id="u43d23576">简单句</span></code></h2><p data-lake-id="ud6e7c243" id="ud6e7c243"><br></p><p data-lake-id="ubeaa4b88" id="ubeaa4b88"><span data-lake-id="u4fce52d5" id="u4fce52d5">除了 感叹句、省略句、问句（向整句提问） ，都是在说 </span><code data-lake-id="uc017ad50" id="uc017ad50"><span data-lake-id="ufaa5bb84" id="ufaa5bb84">什么 + 怎么样</span></code><span data-lake-id="u60377cb1" id="u60377cb1">  ，即 </span><code data-lake-id="u049b7005" id="u049b7005"><span data-lake-id="ucd008765" id="ucd008765">主语 + 谓语</span></code><span data-lake-id="u7373869e" id="u7373869e"> 如下图：</span></p><p data-lake-id="ue5ceb3ac" id="ue5ceb3ac"><br></p><p data-lake-id="ud7534b9d" id="ud7534b9d"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191153960.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A295%2C%22originHeight%22%3A241%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22zJgHN%22%7D"></card></p><p data-lake-id="u6465a77d" id="u6465a77d"><br></p><p data-lake-id="u628769ad" id="u628769ad"><span data-lake-id="u3b87ca49" id="u3b87ca49">这就是</span><code data-lake-id="u85c75333" id="u85c75333"><span data-lake-id="u1052bb76" id="u1052bb76">简单句</span></code></p><p data-lake-id="ub8fdb632" id="ub8fdb632"><br></p><h2 data-lake-id="c8d5d350" id="c8d5d350"><span data-lake-id="ucb2b0843" id="ucb2b0843">那么 </span><code data-lake-id="ub41bb87b" id="ub41bb87b"><span data-lake-id="uc40aa482" id="uc40aa482">并列句</span></code><span data-lake-id="u91b38a42" id="u91b38a42"> 和 </span><code data-lake-id="ucca4377e" id="ucca4377e"><span data-lake-id="u94880b18" id="u94880b18">（主从）复杂句</span></code><span data-lake-id="uf12ddb98" id="uf12ddb98"> 呢？</span></h2><p data-lake-id="uf2c1fbbb" id="uf2c1fbbb"><br></p><p data-lake-id="uc96ec844" id="uc96ec844"><span data-lake-id="u53fa58e3" id="u53fa58e3">并列句，</span><code data-lake-id="u94068046" id="u94068046"><span data-lake-id="ub69fdfd5" id="ub69fdfd5">简单句</span></code><span data-lake-id="uaddf0a9b" id="uaddf0a9b">的叠加</span></p><p data-lake-id="u2b4d1116" id="u2b4d1116"><br></p><p data-lake-id="u3f6aaafe" id="u3f6aaafe"><code data-lake-id="u1274a1ec" id="u1274a1ec"><span data-lake-id="udcd84809" id="udcd84809">（主从）复杂句</span></code><span data-lake-id="u698906c0" id="u698906c0"> ，即</span><code data-lake-id="udb705e8c" id="udb705e8c"><span data-lake-id="u39ff8aef" id="u39ff8aef">简单句</span></code><span data-lake-id="ua1c59869" id="ua1c59869">作为</span><code data-lake-id="u3c34deff" id="u3c34deff"><span data-lake-id="ud09e9760" id="ud09e9760">其他简单句</span></code><span data-lake-id="ue936106b" id="ue936106b">的</span><code data-lake-id="u9dcf5764" id="u9dcf5764"><span data-lake-id="u3d6ef018" id="u3d6ef018">句子成分</span></code><span data-lake-id="ub0127781" id="ub0127781"> ，并且可以无限套娃 。如下图：</span></p><p data-lake-id="u3c9b8d27" id="u3c9b8d27"><br></p><p data-lake-id="uc698d181" id="uc698d181"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191158455.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A967%2C%22originHeight%22%3A541%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22H7ULu%22%7D"></card></p><p data-lake-id="ub476255b" id="ub476255b"><br></p><p data-lake-id="u40b0a997" id="u40b0a997"><span data-lake-id="u2d623c3a" id="u2d623c3a">这就引出了 </span><code data-lake-id="uc1a772ee" id="uc1a772ee"><span data-lake-id="u32787e43" id="u32787e43">各种从句</span></code></p><p data-lake-id="u5a6779fc" id="u5a6779fc"><br></p><p data-lake-id="u0f4fa50a" id="u0f4fa50a"><span data-lake-id="ufe4c4bd6" id="ufe4c4bd6">回到</span><code data-lake-id="u428070ac" id="u428070ac"><span data-lake-id="udbf99bf9" id="udbf99bf9">简单句</span></code><span data-lake-id="u1e2826e4" id="u1e2826e4">，即</span><code data-lake-id="uee2050fc" id="uee2050fc"><span data-lake-id="u86b0134c" id="u86b0134c">什么 + 怎么样</span></code><span data-lake-id="u286efbf7" id="u286efbf7"> 中的 </span><code data-lake-id="u9f8d6024" id="u9f8d6024"><span data-lake-id="u32f9cf1b" id="u32f9cf1b">怎么样</span></code><span data-lake-id="u7e7d3213" id="u7e7d3213">  这就引出了 </span><code data-lake-id="uefe01443" id="uefe01443"><span data-lake-id="u62b5db51" id="u62b5db51">谓语动词</span></code></p><p data-lake-id="u24868373" id="u24868373"><br></p><h2 data-lake-id="92bf8741" id="92bf8741"><span data-lake-id="ue50f65f6" id="ue50f65f6">谓语动词</span></h2><p data-lake-id="u5d68c979" id="u5d68c979"><br></p><p data-lake-id="ucf86491a" id="ucf86491a"><span data-lake-id="uf4387c61" id="uf4387c61">5 种谓语动词，引出了 5 种</span><code data-lake-id="u3a1a3b30" id="u3a1a3b30"><span data-lake-id="u55ef94cf" id="u55ef94cf">基本句子类型</span></code></p><p data-lake-id="u71a668f6" id="u71a668f6"><br></p><p data-lake-id="u365cbb7a" id="u365cbb7a"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191202146.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A485%2C%22originHeight%22%3A441%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22dSV3e%22%7D"></card></p><p data-lake-id="u35a3f6ec" id="u35a3f6ec"><br></p><p data-lake-id="ufaa427ba" id="ufaa427ba"><span data-lake-id="u73e60a5b" id="u73e60a5b">即：</span></p><p data-lake-id="u652dbab6" id="u652dbab6"><br></p><p data-lake-id="ucfaea9bd" id="ucfaea9bd"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191203448.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A867%2C%22originHeight%22%3A311%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22JBycg%22%7D"></card></p><p data-lake-id="u474e9548" id="u474e9548"><br></p><h3 data-lake-id="22a0df26" id="22a0df26"><span data-lake-id="uc6ea4bd4" id="uc6ea4bd4">1、主谓结构</span></h3><p data-lake-id="u19104f91" id="u19104f91"><br></p><p data-lake-id="ue814ff87" id="ue814ff87"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191205145.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A301%2C%22originHeight%22%3A128%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22P5p1p%22%7D"></card></p><p data-lake-id="ua3a69732" id="ua3a69732"><br></p><h3 data-lake-id="61f11603" id="61f11603"><span data-lake-id="ub8d1758f" id="ub8d1758f">2、主谓宾</span></h3><p data-lake-id="u9c46ea20" id="u9c46ea20"><br></p><p data-lake-id="ufef2940f" id="ufef2940f"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191205344.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A364%2C%22originHeight%22%3A133%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22smkHJ%22%7D"></card></p><p data-lake-id="uc60e969f" id="uc60e969f"><br></p><h3 data-lake-id="13b562d6" id="13b562d6"><span data-lake-id="ua7f6b8ae" id="ua7f6b8ae">3、主谓 + 直接宾语 + 间接宾语</span></h3><p data-lake-id="ued558050" id="ued558050"><br></p><p data-lake-id="u56477fe0" id="u56477fe0"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191206023.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A523%2C%22originHeight%22%3A138%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22Ldw2l%22%7D"></card></p><p data-lake-id="ubd5c2541" id="ubd5c2541"><br></p><h3 data-lake-id="183bd198" id="183bd198"><span data-lake-id="uaacbd491" id="uaacbd491">4、主谓宾 + 宾语补语</span></h3><p data-lake-id="u137be351" id="u137be351"><br></p><p data-lake-id="u1044b8b5" id="u1044b8b5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191207709.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A523%2C%22originHeight%22%3A141%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22lcby9%22%7D"></card></p><p data-lake-id="u07940312" id="u07940312"><br></p><h3 data-lake-id="138d3039" id="138d3039"><span data-lake-id="uc907fbb6" id="uc907fbb6">5、主系表</span></h3><p data-lake-id="u8b6b60c3" id="u8b6b60c3"><br></p><p data-lake-id="u78c8f5e5" id="u78c8f5e5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191208852.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A679%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22JjoUu%22%7D"></card></p><p data-lake-id="u956584d4" id="u956584d4"><br></p><h2 data-lake-id="9e9c5012" id="9e9c5012"><span data-lake-id="uf5acc95c" id="uf5acc95c">句子成分</span></h2><p data-lake-id="u49a62548" id="u49a62548"><br></p><p data-lake-id="ua49afba6" id="ua49afba6"><span data-lake-id="u6299899e" id="u6299899e">上面的 5 种 </span><code data-lake-id="u43cf91a1" id="u43cf91a1"><span data-lake-id="ub3517884" id="ub3517884">基本句子类型</span></code><span data-lake-id="u486aef5b" id="u486aef5b">，对于着 </span><code data-lake-id="ufebd90a8" id="ufebd90a8"><span data-lake-id="u0ae336c1" id="u0ae336c1">5 种句子成分</span></code><span data-lake-id="u3cfb5b0a" id="u3cfb5b0a"> 即</span></p><p data-lake-id="u7fcd206e" id="u7fcd206e"><br></p><p data-lake-id="uea5a85b2" id="uea5a85b2"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191209461.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A187%2C%22originHeight%22%3A215%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22sREvd%22%7D"></card></p><p data-lake-id="u5a221d3d" id="u5a221d3d"><br></p><p data-lake-id="ue0ac5298" id="ue0ac5298"><span data-lake-id="u0c3f6f50" id="u0c3f6f50">再加另外 3 种</span></p><p data-lake-id="u39aff0c9" id="u39aff0c9"><br></p><p data-lake-id="u925dd935" id="u925dd935"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191210329.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A237%2C%22originHeight%22%3A340%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ojaxx%22%7D"></card></p><p data-lake-id="u6258e234" id="u6258e234"><br></p><p data-lake-id="u8ed09531" id="u8ed09531"><span data-lake-id="u65da9040" id="u65da9040">就构成了所有的</span><code data-lake-id="u61072af4" id="u61072af4"><span data-lake-id="u63c1358d" id="u63c1358d">句子成分</span></code><span data-lake-id="ua21aad37" id="ua21aad37">。</span></p><p data-lake-id="u77c998e1" id="u77c998e1"><br></p><p data-lake-id="u171da1b0" id="u171da1b0"><span data-lake-id="u5de2e4a6" id="u5de2e4a6">下面是 </span><code data-lake-id="u9ca2ed7d" id="u9ca2ed7d"><span data-lake-id="ue58178ef" id="ue58178ef">定语</span></code><span data-lake-id="u03080628" id="u03080628">、</span><code data-lake-id="u3583ca46" id="u3583ca46"><span data-lake-id="u8bdaf984" id="u8bdaf984">状语</span></code><span data-lake-id="u904c5613" id="u904c5613">、</span><code data-lake-id="uc5574442" id="uc5574442"><span data-lake-id="u225b2d87" id="u225b2d87">同位语</span></code><span data-lake-id="ud5ee79dd" id="ud5ee79dd">的示例：</span></p><p data-lake-id="u91c3b526" id="u91c3b526"><br></p><p data-lake-id="ueeb14e36" id="ueeb14e36"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191210204.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A569%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22DO8nO%22%7D"></card></p><p data-lake-id="u65deb595" id="u65deb595"><br></p><blockquote data-lake-id="uc892e60c" id="uc892e60c"><p data-lake-id="u80a42de2" id="u80a42de2"><span data-lake-id="u8be40131" id="u8be40131">[!tip]<br /></span><span data-lake-id="u21199ff8" id="u21199ff8">同位语，即把</span><code data-lake-id="u881a47f4" id="u881a47f4"><span data-lake-id="u49909d03" id="u49909d03">主语或者宾语</span></code><span data-lake-id="uff1b241d" id="uff1b241d"> 换种方式</span><code data-lake-id="uf3d8014b" id="uf3d8014b"><span data-lake-id="u757c834e" id="u757c834e">再说一遍</span></code></p></blockquote><p data-lake-id="udeece413" id="udeece413"><br></p><p data-lake-id="ue5ba15e7" id="ue5ba15e7"><span data-lake-id="ue00a8163" id="ue00a8163">所以，一共有 </span><code data-lake-id="uba3a7a4e" id="uba3a7a4e"><span data-lake-id="u45dfa0e1" id="u45dfa0e1">8 种句子成分</span></code><span data-lake-id="uc54a5652" id="uc54a5652">，如下：</span></p><p data-lake-id="ud01f7de1" id="ud01f7de1"><br></p><p data-lake-id="u91253b14" id="u91253b14"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191214821.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A301%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22W1PZJ%22%7D"></card></p><p data-lake-id="u3acd45f9" id="u3acd45f9"><br></p><blockquote data-lake-id="u9f38bc5a" id="u9f38bc5a"><p data-lake-id="u1da4eea8" id="u1da4eea8"><span data-lake-id="uc05ceced" id="uc05ceced">[!tip]<br /></span><mark data-lake-id="u3a7a4dda" id="u3a7a4dda"><span data-lake-id="u9251538f" id="u9251538f">插入语</span></mark><span data-lake-id="u918bca05" id="u918bca05"> 解释如上图</span></p></blockquote><p data-lake-id="uf2e77654" id="uf2e77654"><br></p><p data-lake-id="ud88320b7" id="ud88320b7"><span data-lake-id="u8f2aa906" id="u8f2aa906">而</span><code data-lake-id="u0dbafe8c" id="u0dbafe8c"><span data-lake-id="u7d845822" id="u7d845822">句子成分</span></code><span data-lake-id="ua9603fc4" id="ua9603fc4">又由 不同</span><code data-lake-id="uc9f294aa" id="uc9f294aa"><span data-lake-id="u01892353" id="u01892353">词类</span></code><span data-lake-id="u284574a3" id="u284574a3">组成，这就引出了</span><code data-lake-id="u0a46f067" id="u0a46f067"><span data-lake-id="u15bcd42f" id="u15bcd42f">词类</span></code></p><p data-lake-id="u477c817d" id="u477c817d"><br></p><h2 data-lake-id="9092d3af" id="9092d3af"><span data-lake-id="u66041b9e" id="u66041b9e">词类</span></h2><p data-lake-id="u512ec9fc" id="u512ec9fc"><br></p><p data-lake-id="u70ce52af" id="u70ce52af"><span data-lake-id="u93a21625" id="u93a21625">一共 </span><code data-lake-id="u55ae10bc" id="u55ae10bc"><span data-lake-id="u607b625b" id="u607b625b">10 种词类</span></code><span data-lake-id="uf29a50a1" id="uf29a50a1">，如下</span></p><p data-lake-id="u80379eb3" id="u80379eb3"><br></p><p data-lake-id="ua9c8e035" id="ua9c8e035"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191218997.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A399%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22FVnzv%22%7D"></card></p><p data-lake-id="ub67a3e1e" id="ub67a3e1e"><br></p><p data-lake-id="u61b0cff6" id="u61b0cff6"><span data-lake-id="u4dfa8500" id="u4dfa8500">10 种</span><code data-lake-id="u81f86ac3" id="u81f86ac3"><span data-lake-id="u83dc4e46" id="u83dc4e46">词类</span></code><span data-lake-id="ua3ae219c" id="ua3ae219c">的示例如下：</span></p><p data-lake-id="uf2c7afb2" id="uf2c7afb2"><br></p><p data-lake-id="u11013c42" id="u11013c42"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191219090.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1203%2C%22originHeight%22%3A1084%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22TcRPU%22%7D"></card></p><p data-lake-id="ub6290801" id="ub6290801"><br></p><p data-lake-id="ub2cd2637" id="ub2cd2637"><span data-lake-id="uc58e3795" id="uc58e3795">除了谓语动词是 </span><code data-lake-id="ufb8a7e29" id="ufb8a7e29"><span data-lake-id="u2972bb79" id="u2972bb79">“动词”</span></code><span data-lake-id="u8612127a" id="u8612127a"> ， 句子成分可包含 </span><code data-lake-id="u8038b994" id="u8038b994"><span data-lake-id="u7b6202f6" id="u7b6202f6">完全不同的词类</span></code><span data-lake-id="u37c28365" id="u37c28365"> ，如下图，这句包含了 </span><code data-lake-id="ua916a20e" id="ua916a20e"><span data-lake-id="u8ef139e9" id="u8ef139e9">不同的句子成分</span></code><span data-lake-id="uc33c0e6c" id="uc33c0e6c"> 及 </span><code data-lake-id="u23dd77a1" id="u23dd77a1"><span data-lake-id="u47f7ae82" id="u47f7ae82">不同的词类</span></code></p><p data-lake-id="u1fd4b897" id="u1fd4b897"><br></p><p data-lake-id="u5aff7125" id="u5aff7125"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191221125.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1060%2C%22originHeight%22%3A497%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22HASP8%22%7D"></card></p><p data-lake-id="ue38577e5" id="ue38577e5"><br></p><p data-lake-id="u214b8aab" id="u214b8aab"><span data-lake-id="uc93fd784" id="uc93fd784">所以，这里的</span><code data-lake-id="u5eb4d03f" id="u5eb4d03f"><span data-lake-id="u9758d0bd" id="u9758d0bd">谓语动词</span></code><span data-lake-id="ue4f56444" id="ue4f56444"> ,  即作句子成分中的 </span><code data-lake-id="u04573b47" id="u04573b47"><span data-lake-id="u44d5afed" id="u44d5afed">”谓语“</span></code><span data-lake-id="ue4c9274e" id="ue4c9274e"> ， 当然，这里不作为”谓语“ 的动词，称为 </span><code data-lake-id="u932aa1a8" id="u932aa1a8"><span data-lake-id="u3fd1a33d" id="u3fd1a33d">非谓语动词</span></code><span data-lake-id="u76e044ab" id="u76e044ab"> ， </span><code data-lake-id="u8bbc898f" id="u8bbc898f"><span data-lake-id="u8f6d61a0" id="u8f6d61a0">谓语动词 + 非谓语动词 = 英语中的所有动词</span></code><span data-lake-id="uef3f4244" id="uef3f4244"> ，废话，这是肯定啊，比如 </span><code data-lake-id="udb6672f2" id="udb6672f2"><span data-lake-id="u6bdde41f" id="u6bdde41f">是你 + 不是你 = 所有人</span></code><span data-lake-id="udc3ea483" id="udc3ea483">  嘛。</span></p><p data-lake-id="u1d5ec36d" id="u1d5ec36d"><br></p><h2 data-lake-id="3d1a61d0" id="3d1a61d0"><span data-lake-id="u72f2529d" id="u72f2529d">谓语动词 + 非谓语动词 = 动词</span></h2><p data-lake-id="u6bdf9b7c" id="u6bdf9b7c"><br></p><p data-lake-id="ud3855710" id="ud3855710"><span data-lake-id="u02e10031" id="u02e10031">如下图：</span></p><p data-lake-id="u6574a449" id="u6574a449"><br></p><p data-lake-id="u3c8f6702" id="u3c8f6702"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191230890.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1794%2C%22originHeight%22%3A1218%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22rBYx1%22%7D"></card></p><p data-lake-id="u14e85df2" id="u14e85df2"><br></p><h3 data-lake-id="6be7ec3f" id="6be7ec3f"><span data-lake-id="ueda480ab" id="ueda480ab">先说谓语动词</span></h3><p data-lake-id="u6a378104" id="u6a378104"><br></p><p data-lake-id="u8d888b88" id="u8d888b88"><span data-lake-id="ub49947e9" id="ub49947e9">即 </span><code data-lake-id="u6fb60192" id="u6fb60192"><span data-lake-id="u6aa351e3" id="u6aa351e3">动词</span></code><span data-lake-id="u94de0d8b" id="u94de0d8b">  作句子成分中的 </span><code data-lake-id="udad85ed9" id="udad85ed9"><span data-lake-id="ud3f8c925" id="ud3f8c925">”谓语“</span></code><span data-lake-id="uf2c523c7" id="uf2c523c7"> ， 区别于“中文” 里的动词英文中谓语动词的 </span><code data-lake-id="uaf9e2911" id="uaf9e2911"><span data-lake-id="u2af94a66" id="u2af94a66">“三大本领”</span></code></p><p data-lake-id="u9fe4eae2" id="u9fe4eae2"><br></p><p data-lake-id="ua2ddec9b" id="ua2ddec9b"><span data-lake-id="u5b8cb9eb" id="u5b8cb9eb">即 </span><code data-lake-id="u4ef40b45" id="u4ef40b45"><span data-lake-id="udf9664a7" id="udf9664a7">时间、状态、语气</span></code><span data-lake-id="u45f045f4" id="u45f045f4">  ，如下图</span></p><p data-lake-id="uedb7b02e" id="uedb7b02e"><br></p><p data-lake-id="u513fa868" id="u513fa868"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191235101.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1912%2C%22originHeight%22%3A1880%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22Ape5d%22%7D"></card></p><p data-lake-id="u99bb1c10" id="u99bb1c10"><br></p><p data-lake-id="u72cb5966" id="u72cb5966"><span data-lake-id="ufc30b2d8" id="ufc30b2d8">即：</span></p><p data-lake-id="uaf39a34e" id="uaf39a34e"><br></p><ul list="u734616b8"><li fid="u8003bff0" data-lake-id="u010d06c1" id="u010d06c1"><code data-lake-id="u1006ba23" id="u1006ba23"><span data-lake-id="uffd5afb9" id="uffd5afb9">4 种动作时间 * 4 种 动作状态 = 16 种时态</span></code></li><li fid="u8003bff0" data-lake-id="u5f46ca20" id="u5f46ca20"><code data-lake-id="u070ce34c" id="u070ce34c"><span data-lake-id="ua5da5599" id="ua5da5599">语气</span></code><span data-lake-id="ueafff35a" id="ueafff35a">，如上图 </span><code data-lake-id="ud5e7adb9" id="ud5e7adb9"><span data-lake-id="u3e46f5b8" id="u3e46f5b8">虚拟、陈述、祈使</span></code><span data-lake-id="ua4251914" id="ua4251914"> 等</span></li></ul><p data-lake-id="u80cf87fd" id="u80cf87fd"><br></p><p data-lake-id="u6201f103" id="u6201f103"><span data-lake-id="ufb321913" id="ufb321913">另 </span><code data-lake-id="u96815fba" id="u96815fba"><span data-lake-id="u5321a4d5" id="u5321a4d5">谓语动词</span></code><span data-lake-id="ud9647946" id="ud9647946">无法表示 </span><code data-lake-id="u4bb15b31" id="u4bb15b31"><span data-lake-id="u74e5156b" id="u74e5156b">否定、可能性、必须性</span></code><span data-lake-id="u8056cc3d" id="u8056cc3d"> 等， 需要借助 </span><code data-lake-id="ucca5011b" id="ucca5011b"><span data-lake-id="u1df6c910" id="u1df6c910">”助动词“</span></code><span data-lake-id="uc819d541" id="uc819d541"> ，如下图：</span></p><p data-lake-id="u9e6ac868" id="u9e6ac868"><br></p><h4 data-lake-id="4e30960b" id="4e30960b"><span data-lake-id="u54ad04ff" id="u54ad04ff">助动词</span></h4><p data-lake-id="u731da5e4" id="u731da5e4"><br></p><p data-lake-id="u6cbc7eb5" id="u6cbc7eb5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191241887.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1448%2C%22originHeight%22%3A2036%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22cfcyP%22%7D"></card><span data-lake-id="u14ef4452" id="u14ef4452"><br /></span><span data-lake-id="u2ea0f3f5" id="u2ea0f3f5">​</span></p><p data-lake-id="ud87426ae" id="ud87426ae"><br></p><h3 data-lake-id="02033c2c" id="02033c2c"><span data-lake-id="uee7438d9" id="uee7438d9">再说非谓语动词</span></h3><p data-lake-id="u52a7140b" id="u52a7140b"><br></p><p data-lake-id="u7843e61f" id="u7843e61f"><span data-lake-id="u649d047a" id="u649d047a">非谓语动词，可以做 </span><code data-lake-id="u53a9783e" id="u53a9783e"><span data-lake-id="udf21ea69" id="udf21ea69">几乎所有的其他句子成分</span></code><span data-lake-id="u4fb68c28" id="u4fb68c28"> ，如下图</span></p><p data-lake-id="ud0bf80bb" id="ud0bf80bb"><br></p><p data-lake-id="u9f661df2" id="u9f661df2"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191237875.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1924%2C%22originHeight%22%3A992%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22cvUWX%22%7D"></card></p><p data-lake-id="u9e81f9ce" id="u9e81f9ce"><br></p><h2 data-lake-id="9415a826" id="9415a826"><span data-lake-id="u9c1e1333" id="u9c1e1333">最后</span></h2><p data-lake-id="u20a41c68" id="u20a41c68"><br></p><p data-lake-id="u4a1e802b" id="u4a1e802b"><span data-lake-id="u09a6f919" id="u09a6f919">发现没有，说来说去都是</span><code data-lake-id="u1e8f8e50" id="u1e8f8e50"><span data-lake-id="uf8c641aa" id="uf8c641aa">动词</span></code><span data-lake-id="u4b811e31" id="u4b811e31"> ，是的 英语语法的核心 就是</span><code data-lake-id="udcaedb50" id="udcaedb50"><span data-lake-id="uc82cc637" id="uc82cc637">动词</span></code><span data-lake-id="ud8ba8ed0" id="ud8ba8ed0"> ， </span><strong><span data-lake-id="u14430eed" id="u14430eed">动词能够”串“起所有语法概念</span></strong><span data-lake-id="u76a25b5b" id="u76a25b5b"> ，如下图：</span></p><p data-lake-id="u88af9d93" id="u88af9d93"><br></p><p data-lake-id="u0c626071" id="u0c626071"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191243354.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A2622%2C%22originHeight%22%3A1328%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22d48Kq%22%7D"></card></p><p data-lake-id="u862432c0" id="u862432c0"><br></p><h3 data-lake-id="d17a0f0b" id="d17a0f0b"><span data-lake-id="u19752b05" id="u19752b05">参考</span></h3><p data-lake-id="ubf47e5a3" id="ubf47e5a3"><br></p><blockquote data-lake-id="u4b2c9df1" id="u4b2c9df1"><p data-lake-id="uf907d103" id="uf907d103"><a href="https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f" target="_blank" data-lake-id="ud189dc54" id="ud189dc54"><span data-lake-id="u779094be" id="u779094be">https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f</span></a></p></blockquote>',body_draft_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="7d7c6591" id="7d7c6591"><span data-lake-id="u5830e7e0" id="u5830e7e0">英语语法综述</span></h1><p data-lake-id="ud21470b5" id="ud21470b5"><br></p><h2 data-lake-id="779a5c56" id="779a5c56"><span data-lake-id="u891f6778" id="u891f6778">为什么学语法？</span></h2><p data-lake-id="u45af2c35" id="u45af2c35"><br></p><p data-lake-id="udc5dbf69" id="udc5dbf69"><span data-lake-id="ue47e327c" id="ue47e327c">为了</span><code data-lake-id="u3a3a5df1" id="u3a3a5df1"><span data-lake-id="u8ce9f086" id="u8ce9f086">造句</span></code></p><p data-lake-id="u8201ee9d" id="u8201ee9d"><br></p><h2 data-lake-id="fa657f85" id="fa657f85"><span data-lake-id="u1f55e50f" id="u1f55e50f">怎么学语法？</span></h2><p data-lake-id="ud0cf7a83" id="ud0cf7a83"><br></p><p data-lake-id="u2a28be92" id="u2a28be92"><span data-lake-id="u19fba002" id="u19fba002">先</span><code data-lake-id="u4a727be2" id="u4a727be2"><span data-lake-id="ubea3ddca" id="ubea3ddca">简单句</span></code><span data-lake-id="uad85d143" id="uad85d143"> ，然后</span><code data-lake-id="u6a044afc" id="u6a044afc"><span data-lake-id="u1b4de510" id="u1b4de510">长难句</span></code></p><p data-lake-id="uba305618" id="uba305618"><br></p><h2 data-lake-id="a012b28e" id="a012b28e"><span data-lake-id="u0ba9ece6" id="u0ba9ece6">什么是 </span><code data-lake-id="uca8202c4" id="uca8202c4"><span data-lake-id="u43d23576" id="u43d23576">简单句</span></code></h2><p data-lake-id="ud6e7c243" id="ud6e7c243"><br></p><p data-lake-id="ubeaa4b88" id="ubeaa4b88"><span data-lake-id="u4fce52d5" id="u4fce52d5">除了 感叹句、省略句、问句（向整句提问） ，都是在说 </span><code data-lake-id="uc017ad50" id="uc017ad50"><span data-lake-id="ufaa5bb84" id="ufaa5bb84">什么 + 怎么样</span></code><span data-lake-id="u60377cb1" id="u60377cb1">  ，即 </span><code data-lake-id="u049b7005" id="u049b7005"><span data-lake-id="ucd008765" id="ucd008765">主语 + 谓语</span></code><span data-lake-id="u7373869e" id="u7373869e"> 如下图：</span></p><p data-lake-id="ue5ceb3ac" id="ue5ceb3ac"><br></p><p data-lake-id="ud7534b9d" id="ud7534b9d"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191153960.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A295%2C%22originHeight%22%3A241%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22zJgHN%22%7D"></card></p><p data-lake-id="u6465a77d" id="u6465a77d"><br></p><p data-lake-id="u628769ad" id="u628769ad"><span data-lake-id="u3b87ca49" id="u3b87ca49">这就是</span><code data-lake-id="u85c75333" id="u85c75333"><span data-lake-id="u1052bb76" id="u1052bb76">简单句</span></code></p><p data-lake-id="ub8fdb632" id="ub8fdb632"><br></p><h2 data-lake-id="c8d5d350" id="c8d5d350"><span data-lake-id="ucb2b0843" id="ucb2b0843">那么 </span><code data-lake-id="ub41bb87b" id="ub41bb87b"><span data-lake-id="uc40aa482" id="uc40aa482">并列句</span></code><span data-lake-id="u91b38a42" id="u91b38a42"> 和 </span><code data-lake-id="ucca4377e" id="ucca4377e"><span data-lake-id="u94880b18" id="u94880b18">（主从）复杂句</span></code><span data-lake-id="uf12ddb98" id="uf12ddb98"> 呢？</span></h2><p data-lake-id="uf2c1fbbb" id="uf2c1fbbb"><br></p><p data-lake-id="uc96ec844" id="uc96ec844"><span data-lake-id="u53fa58e3" id="u53fa58e3">并列句，</span><code data-lake-id="u94068046" id="u94068046"><span data-lake-id="ub69fdfd5" id="ub69fdfd5">简单句</span></code><span data-lake-id="uaddf0a9b" id="uaddf0a9b">的叠加</span></p><p data-lake-id="u2b4d1116" id="u2b4d1116"><br></p><p data-lake-id="u3f6aaafe" id="u3f6aaafe"><code data-lake-id="u1274a1ec" id="u1274a1ec"><span data-lake-id="udcd84809" id="udcd84809">（主从）复杂句</span></code><span data-lake-id="u698906c0" id="u698906c0"> ，即</span><code data-lake-id="udb705e8c" id="udb705e8c"><span data-lake-id="u39ff8aef" id="u39ff8aef">简单句</span></code><span data-lake-id="ua1c59869" id="ua1c59869">作为</span><code data-lake-id="u3c34deff" id="u3c34deff"><span data-lake-id="ud09e9760" id="ud09e9760">其他简单句</span></code><span data-lake-id="ue936106b" id="ue936106b">的</span><code data-lake-id="u9dcf5764" id="u9dcf5764"><span data-lake-id="u3d6ef018" id="u3d6ef018">句子成分</span></code><span data-lake-id="ub0127781" id="ub0127781"> ，并且可以无限套娃 。如下图：</span></p><p data-lake-id="u3c9b8d27" id="u3c9b8d27"><br></p><p data-lake-id="uc698d181" id="uc698d181"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191158455.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A967%2C%22originHeight%22%3A541%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22H7ULu%22%7D"></card></p><p data-lake-id="ub476255b" id="ub476255b"><br></p><p data-lake-id="u40b0a997" id="u40b0a997"><span data-lake-id="u2d623c3a" id="u2d623c3a">这就引出了 </span><code data-lake-id="uc1a772ee" id="uc1a772ee"><span data-lake-id="u32787e43" id="u32787e43">各种从句</span></code></p><p data-lake-id="u5a6779fc" id="u5a6779fc"><br></p><p data-lake-id="u0f4fa50a" id="u0f4fa50a"><span data-lake-id="ufe4c4bd6" id="ufe4c4bd6">回到</span><code data-lake-id="u428070ac" id="u428070ac"><span data-lake-id="udbf99bf9" id="udbf99bf9">简单句</span></code><span data-lake-id="u1e2826e4" id="u1e2826e4">，即</span><code data-lake-id="uee2050fc" id="uee2050fc"><span data-lake-id="u86b0134c" id="u86b0134c">什么 + 怎么样</span></code><span data-lake-id="u286efbf7" id="u286efbf7"> 中的 </span><code data-lake-id="u9f8d6024" id="u9f8d6024"><span data-lake-id="u32f9cf1b" id="u32f9cf1b">怎么样</span></code><span data-lake-id="u7e7d3213" id="u7e7d3213">  这就引出了 </span><code data-lake-id="uefe01443" id="uefe01443"><span data-lake-id="u62b5db51" id="u62b5db51">谓语动词</span></code></p><p data-lake-id="u24868373" id="u24868373"><br></p><h2 data-lake-id="92bf8741" id="92bf8741"><span data-lake-id="ue50f65f6" id="ue50f65f6">谓语动词</span></h2><p data-lake-id="u5d68c979" id="u5d68c979"><br></p><p data-lake-id="ucf86491a" id="ucf86491a"><span data-lake-id="uf4387c61" id="uf4387c61">5 种谓语动词，引出了 5 种</span><code data-lake-id="u3a1a3b30" id="u3a1a3b30"><span data-lake-id="u55ef94cf" id="u55ef94cf">基本句子类型</span></code></p><p data-lake-id="u71a668f6" id="u71a668f6"><br></p><p data-lake-id="u365cbb7a" id="u365cbb7a"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191202146.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A485%2C%22originHeight%22%3A441%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22dSV3e%22%7D"></card></p><p data-lake-id="u35a3f6ec" id="u35a3f6ec"><br></p><p data-lake-id="ufaa427ba" id="ufaa427ba"><span data-lake-id="u73e60a5b" id="u73e60a5b">即：</span></p><p data-lake-id="u652dbab6" id="u652dbab6"><br></p><p data-lake-id="ucfaea9bd" id="ucfaea9bd"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191203448.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A867%2C%22originHeight%22%3A311%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22JBycg%22%7D"></card></p><p data-lake-id="u474e9548" id="u474e9548"><br></p><h3 data-lake-id="22a0df26" id="22a0df26"><span data-lake-id="uc6ea4bd4" id="uc6ea4bd4">1、主谓结构</span></h3><p data-lake-id="u19104f91" id="u19104f91"><br></p><p data-lake-id="ue814ff87" id="ue814ff87"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191205145.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A301%2C%22originHeight%22%3A128%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22P5p1p%22%7D"></card></p><p data-lake-id="ua3a69732" id="ua3a69732"><br></p><h3 data-lake-id="61f11603" id="61f11603"><span data-lake-id="ub8d1758f" id="ub8d1758f">2、主谓宾</span></h3><p data-lake-id="u9c46ea20" id="u9c46ea20"><br></p><p data-lake-id="ufef2940f" id="ufef2940f"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191205344.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A364%2C%22originHeight%22%3A133%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22smkHJ%22%7D"></card></p><p data-lake-id="uc60e969f" id="uc60e969f"><br></p><h3 data-lake-id="13b562d6" id="13b562d6"><span data-lake-id="ua7f6b8ae" id="ua7f6b8ae">3、主谓 + 直接宾语 + 间接宾语</span></h3><p data-lake-id="ued558050" id="ued558050"><br></p><p data-lake-id="u56477fe0" id="u56477fe0"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191206023.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A523%2C%22originHeight%22%3A138%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22Ldw2l%22%7D"></card></p><p data-lake-id="ubd5c2541" id="ubd5c2541"><br></p><h3 data-lake-id="183bd198" id="183bd198"><span data-lake-id="uaacbd491" id="uaacbd491">4、主谓宾 + 宾语补语</span></h3><p data-lake-id="u137be351" id="u137be351"><br></p><p data-lake-id="u1044b8b5" id="u1044b8b5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191207709.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A523%2C%22originHeight%22%3A141%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22lcby9%22%7D"></card></p><p data-lake-id="u07940312" id="u07940312"><br></p><h3 data-lake-id="138d3039" id="138d3039"><span data-lake-id="uc907fbb6" id="uc907fbb6">5、主系表</span></h3><p data-lake-id="u8b6b60c3" id="u8b6b60c3"><br></p><p data-lake-id="u78c8f5e5" id="u78c8f5e5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191208852.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A679%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22JjoUu%22%7D"></card></p><p data-lake-id="u956584d4" id="u956584d4"><br></p><h2 data-lake-id="9e9c5012" id="9e9c5012"><span data-lake-id="uf5acc95c" id="uf5acc95c">句子成分</span></h2><p data-lake-id="u49a62548" id="u49a62548"><br></p><p data-lake-id="ua49afba6" id="ua49afba6"><span data-lake-id="u6299899e" id="u6299899e">上面的 5 种 </span><code data-lake-id="u43cf91a1" id="u43cf91a1"><span data-lake-id="ub3517884" id="ub3517884">基本句子类型</span></code><span data-lake-id="u486aef5b" id="u486aef5b">，对于着 </span><code data-lake-id="ufebd90a8" id="ufebd90a8"><span data-lake-id="u0ae336c1" id="u0ae336c1">5 种句子成分</span></code><span data-lake-id="u3cfb5b0a" id="u3cfb5b0a"> 即</span></p><p data-lake-id="u7fcd206e" id="u7fcd206e"><br></p><p data-lake-id="uea5a85b2" id="uea5a85b2"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191209461.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A187%2C%22originHeight%22%3A215%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22sREvd%22%7D"></card></p><p data-lake-id="u5a221d3d" id="u5a221d3d"><br></p><p data-lake-id="ue0ac5298" id="ue0ac5298"><span data-lake-id="u0c3f6f50" id="u0c3f6f50">再加另外 3 种</span></p><p data-lake-id="u39aff0c9" id="u39aff0c9"><br></p><p data-lake-id="u925dd935" id="u925dd935"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191210329.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A237%2C%22originHeight%22%3A340%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ojaxx%22%7D"></card></p><p data-lake-id="u6258e234" id="u6258e234"><br></p><p data-lake-id="u8ed09531" id="u8ed09531"><span data-lake-id="u65da9040" id="u65da9040">就构成了所有的</span><code data-lake-id="u61072af4" id="u61072af4"><span data-lake-id="u63c1358d" id="u63c1358d">句子成分</span></code><span data-lake-id="ua21aad37" id="ua21aad37">。</span></p><p data-lake-id="u77c998e1" id="u77c998e1"><br></p><p data-lake-id="u171da1b0" id="u171da1b0"><span data-lake-id="u5de2e4a6" id="u5de2e4a6">下面是 </span><code data-lake-id="u9ca2ed7d" id="u9ca2ed7d"><span data-lake-id="ue58178ef" id="ue58178ef">定语</span></code><span data-lake-id="u03080628" id="u03080628">、</span><code data-lake-id="u3583ca46" id="u3583ca46"><span data-lake-id="u8bdaf984" id="u8bdaf984">状语</span></code><span data-lake-id="u904c5613" id="u904c5613">、</span><code data-lake-id="uc5574442" id="uc5574442"><span data-lake-id="u225b2d87" id="u225b2d87">同位语</span></code><span data-lake-id="ud5ee79dd" id="ud5ee79dd">的示例：</span></p><p data-lake-id="u91c3b526" id="u91c3b526"><br></p><p data-lake-id="ueeb14e36" id="ueeb14e36"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191210204.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A569%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22DO8nO%22%7D"></card></p><p data-lake-id="u65deb595" id="u65deb595"><br></p><blockquote data-lake-id="uc892e60c" id="uc892e60c"><p data-lake-id="u80a42de2" id="u80a42de2"><span data-lake-id="u8be40131" id="u8be40131">[!tip]<br /></span><span data-lake-id="u21199ff8" id="u21199ff8">同位语，即把</span><code data-lake-id="u881a47f4" id="u881a47f4"><span data-lake-id="u49909d03" id="u49909d03">主语或者宾语</span></code><span data-lake-id="uff1b241d" id="uff1b241d"> 换种方式</span><code data-lake-id="uf3d8014b" id="uf3d8014b"><span data-lake-id="u757c834e" id="u757c834e">再说一遍</span></code></p></blockquote><p data-lake-id="udeece413" id="udeece413"><br></p><p data-lake-id="ue5ba15e7" id="ue5ba15e7"><span data-lake-id="ue00a8163" id="ue00a8163">所以，一共有 </span><code data-lake-id="uba3a7a4e" id="uba3a7a4e"><span data-lake-id="u45dfa0e1" id="u45dfa0e1">8 种句子成分</span></code><span data-lake-id="uc54a5652" id="uc54a5652">，如下：</span></p><p data-lake-id="ud01f7de1" id="ud01f7de1"><br></p><p data-lake-id="u91253b14" id="u91253b14"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191214821.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A301%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22W1PZJ%22%7D"></card></p><p data-lake-id="u3acd45f9" id="u3acd45f9"><br></p><blockquote data-lake-id="u9f38bc5a" id="u9f38bc5a"><p data-lake-id="u1da4eea8" id="u1da4eea8"><span data-lake-id="uc05ceced" id="uc05ceced">[!tip]<br /></span><mark data-lake-id="u3a7a4dda" id="u3a7a4dda"><span data-lake-id="u9251538f" id="u9251538f">插入语</span></mark><span data-lake-id="u918bca05" id="u918bca05"> 解释如上图</span></p></blockquote><p data-lake-id="uf2e77654" id="uf2e77654"><br></p><p data-lake-id="ud88320b7" id="ud88320b7"><span data-lake-id="u8f2aa906" id="u8f2aa906">而</span><code data-lake-id="u0dbafe8c" id="u0dbafe8c"><span data-lake-id="u7d845822" id="u7d845822">句子成分</span></code><span data-lake-id="ua9603fc4" id="ua9603fc4">又由 不同</span><code data-lake-id="uc9f294aa" id="uc9f294aa"><span data-lake-id="u01892353" id="u01892353">词类</span></code><span data-lake-id="u284574a3" id="u284574a3">组成，这就引出了</span><code data-lake-id="u0a46f067" id="u0a46f067"><span data-lake-id="u15bcd42f" id="u15bcd42f">词类</span></code></p><p data-lake-id="u477c817d" id="u477c817d"><br></p><h2 data-lake-id="9092d3af" id="9092d3af"><span data-lake-id="u66041b9e" id="u66041b9e">词类</span></h2><p data-lake-id="u512ec9fc" id="u512ec9fc"><br></p><p data-lake-id="u70ce52af" id="u70ce52af"><span data-lake-id="u93a21625" id="u93a21625">一共 </span><code data-lake-id="u55ae10bc" id="u55ae10bc"><span data-lake-id="u607b625b" id="u607b625b">10 种词类</span></code><span data-lake-id="uf29a50a1" id="uf29a50a1">，如下</span></p><p data-lake-id="u80379eb3" id="u80379eb3"><br></p><p data-lake-id="ua9c8e035" id="ua9c8e035"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191218997.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A399%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22FVnzv%22%7D"></card></p><p data-lake-id="ub67a3e1e" id="ub67a3e1e"><br></p><p data-lake-id="u61b0cff6" id="u61b0cff6"><span data-lake-id="u4dfa8500" id="u4dfa8500">10 种</span><code data-lake-id="u81f86ac3" id="u81f86ac3"><span data-lake-id="u83dc4e46" id="u83dc4e46">词类</span></code><span data-lake-id="ua3ae219c" id="ua3ae219c">的示例如下：</span></p><p data-lake-id="uf2c7afb2" id="uf2c7afb2"><br></p><p data-lake-id="u11013c42" id="u11013c42"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191219090.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1203%2C%22originHeight%22%3A1084%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22TcRPU%22%7D"></card></p><p data-lake-id="ub6290801" id="ub6290801"><br></p><p data-lake-id="ub2cd2637" id="ub2cd2637"><span data-lake-id="uc58e3795" id="uc58e3795">除了谓语动词是 </span><code data-lake-id="ufb8a7e29" id="ufb8a7e29"><span data-lake-id="u2972bb79" id="u2972bb79">“动词”</span></code><span data-lake-id="u8612127a" id="u8612127a"> ， 句子成分可包含 </span><code data-lake-id="u8038b994" id="u8038b994"><span data-lake-id="u7b6202f6" id="u7b6202f6">完全不同的词类</span></code><span data-lake-id="u37c28365" id="u37c28365"> ，如下图，这句包含了 </span><code data-lake-id="ua916a20e" id="ua916a20e"><span data-lake-id="u8ef139e9" id="u8ef139e9">不同的句子成分</span></code><span data-lake-id="uc33c0e6c" id="uc33c0e6c"> 及 </span><code data-lake-id="u23dd77a1" id="u23dd77a1"><span data-lake-id="u47f7ae82" id="u47f7ae82">不同的词类</span></code></p><p data-lake-id="u1fd4b897" id="u1fd4b897"><br></p><p data-lake-id="u5aff7125" id="u5aff7125"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191221125.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1060%2C%22originHeight%22%3A497%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22HASP8%22%7D"></card></p><p data-lake-id="ue38577e5" id="ue38577e5"><br></p><p data-lake-id="u214b8aab" id="u214b8aab"><span data-lake-id="uc93fd784" id="uc93fd784">所以，这里的</span><code data-lake-id="u5eb4d03f" id="u5eb4d03f"><span data-lake-id="u9758d0bd" id="u9758d0bd">谓语动词</span></code><span data-lake-id="ue4f56444" id="ue4f56444"> ,  即作句子成分中的 </span><code data-lake-id="u04573b47" id="u04573b47"><span data-lake-id="u44d5afed" id="u44d5afed">”谓语“</span></code><span data-lake-id="ue4c9274e" id="ue4c9274e"> ， 当然，这里不作为”谓语“ 的动词，称为 </span><code data-lake-id="u932aa1a8" id="u932aa1a8"><span data-lake-id="u3fd1a33d" id="u3fd1a33d">非谓语动词</span></code><span data-lake-id="u76e044ab" id="u76e044ab"> ， </span><code data-lake-id="u8bbc898f" id="u8bbc898f"><span data-lake-id="u8f6d61a0" id="u8f6d61a0">谓语动词 + 非谓语动词 = 英语中的所有动词</span></code><span data-lake-id="uef3f4244" id="uef3f4244"> ，废话，这是肯定啊，比如 </span><code data-lake-id="udb6672f2" id="udb6672f2"><span data-lake-id="u6bdde41f" id="u6bdde41f">是你 + 不是你 = 所有人</span></code><span data-lake-id="udc3ea483" id="udc3ea483">  嘛。</span></p><p data-lake-id="u1d5ec36d" id="u1d5ec36d"><br></p><h2 data-lake-id="3d1a61d0" id="3d1a61d0"><span data-lake-id="u72f2529d" id="u72f2529d">谓语动词 + 非谓语动词 = 动词</span></h2><p data-lake-id="u6bdf9b7c" id="u6bdf9b7c"><br></p><p data-lake-id="ud3855710" id="ud3855710"><span data-lake-id="u02e10031" id="u02e10031">如下图：</span></p><p data-lake-id="u6574a449" id="u6574a449"><br></p><p data-lake-id="u3c8f6702" id="u3c8f6702"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191230890.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1794%2C%22originHeight%22%3A1218%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22rBYx1%22%7D"></card></p><p data-lake-id="u14e85df2" id="u14e85df2"><br></p><h3 data-lake-id="6be7ec3f" id="6be7ec3f"><span data-lake-id="ueda480ab" id="ueda480ab">先说谓语动词</span></h3><p data-lake-id="u6a378104" id="u6a378104"><br></p><p data-lake-id="u8d888b88" id="u8d888b88"><span data-lake-id="ub49947e9" id="ub49947e9">即 </span><code data-lake-id="u6fb60192" id="u6fb60192"><span data-lake-id="u6aa351e3" id="u6aa351e3">动词</span></code><span data-lake-id="u94de0d8b" id="u94de0d8b">  作句子成分中的 </span><code data-lake-id="udad85ed9" id="udad85ed9"><span data-lake-id="ud3f8c925" id="ud3f8c925">”谓语“</span></code><span data-lake-id="uf2c523c7" id="uf2c523c7"> ， 区别于“中文” 里的动词英文中谓语动词的 </span><code data-lake-id="uaf9e2911" id="uaf9e2911"><span data-lake-id="u2af94a66" id="u2af94a66">“三大本领”</span></code></p><p data-lake-id="u9fe4eae2" id="u9fe4eae2"><br></p><p data-lake-id="ua2ddec9b" id="ua2ddec9b"><span data-lake-id="u5b8cb9eb" id="u5b8cb9eb">即 </span><code data-lake-id="u4ef40b45" id="u4ef40b45"><span data-lake-id="udf9664a7" id="udf9664a7">时间、状态、语气</span></code><span data-lake-id="u45f045f4" id="u45f045f4">  ，如下图</span></p><p data-lake-id="uedb7b02e" id="uedb7b02e"><br></p><p data-lake-id="u513fa868" id="u513fa868"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191235101.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1912%2C%22originHeight%22%3A1880%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22Ape5d%22%7D"></card></p><p data-lake-id="u99bb1c10" id="u99bb1c10"><br></p><p data-lake-id="u72cb5966" id="u72cb5966"><span data-lake-id="ufc30b2d8" id="ufc30b2d8">即：</span></p><p data-lake-id="uaf39a34e" id="uaf39a34e"><br></p><ul list="u734616b8"><li fid="u8003bff0" data-lake-id="u010d06c1" id="u010d06c1"><code data-lake-id="u1006ba23" id="u1006ba23"><span data-lake-id="uffd5afb9" id="uffd5afb9">4 种动作时间 * 4 种 动作状态 = 16 种时态</span></code></li><li fid="u8003bff0" data-lake-id="u5f46ca20" id="u5f46ca20"><code data-lake-id="u070ce34c" id="u070ce34c"><span data-lake-id="ua5da5599" id="ua5da5599">语气</span></code><span data-lake-id="ueafff35a" id="ueafff35a">，如上图 </span><code data-lake-id="ud5e7adb9" id="ud5e7adb9"><span data-lake-id="u3e46f5b8" id="u3e46f5b8">虚拟、陈述、祈使</span></code><span data-lake-id="ua4251914" id="ua4251914"> 等</span></li></ul><p data-lake-id="u80cf87fd" id="u80cf87fd"><br></p><p data-lake-id="u6201f103" id="u6201f103"><span data-lake-id="ufb321913" id="ufb321913">另 </span><code data-lake-id="u96815fba" id="u96815fba"><span data-lake-id="u5321a4d5" id="u5321a4d5">谓语动词</span></code><span data-lake-id="ud9647946" id="ud9647946">无法表示 </span><code data-lake-id="u4bb15b31" id="u4bb15b31"><span data-lake-id="u74e5156b" id="u74e5156b">否定、可能性、必须性</span></code><span data-lake-id="u8056cc3d" id="u8056cc3d"> 等， 需要借助 </span><code data-lake-id="ucca5011b" id="ucca5011b"><span data-lake-id="u1df6c910" id="u1df6c910">”助动词“</span></code><span data-lake-id="uc819d541" id="uc819d541"> ，如下图：</span></p><p data-lake-id="u9e6ac868" id="u9e6ac868"><br></p><h4 data-lake-id="4e30960b" id="4e30960b"><span data-lake-id="u54ad04ff" id="u54ad04ff">助动词</span></h4><p data-lake-id="u731da5e4" id="u731da5e4"><br></p><p data-lake-id="u6cbc7eb5" id="u6cbc7eb5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191241887.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1448%2C%22originHeight%22%3A2036%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22cfcyP%22%7D"></card><span data-lake-id="u14ef4452" id="u14ef4452"><br /></span><span data-lake-id="u2ea0f3f5" id="u2ea0f3f5">​</span></p><p data-lake-id="ud87426ae" id="ud87426ae"><br></p><h3 data-lake-id="02033c2c" id="02033c2c"><span data-lake-id="uee7438d9" id="uee7438d9">再说非谓语动词</span></h3><p data-lake-id="u52a7140b" id="u52a7140b"><br></p><p data-lake-id="u7843e61f" id="u7843e61f"><span data-lake-id="u649d047a" id="u649d047a">非谓语动词，可以做 </span><code data-lake-id="u53a9783e" id="u53a9783e"><span data-lake-id="udf21ea69" id="udf21ea69">几乎所有的其他句子成分</span></code><span data-lake-id="u4fb68c28" id="u4fb68c28"> ，如下图</span></p><p data-lake-id="ud0bf80bb" id="ud0bf80bb"><br></p><p data-lake-id="u9f661df2" id="u9f661df2"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191237875.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1924%2C%22originHeight%22%3A992%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22cvUWX%22%7D"></card></p><p data-lake-id="u9e81f9ce" id="u9e81f9ce"><br></p><h2 data-lake-id="9415a826" id="9415a826"><span data-lake-id="u9c1e1333" id="u9c1e1333">最后</span></h2><p data-lake-id="u20a41c68" id="u20a41c68"><br></p><p data-lake-id="u4a1e802b" id="u4a1e802b"><span data-lake-id="u09a6f919" id="u09a6f919">发现没有，说来说去都是</span><code data-lake-id="u1e8f8e50" id="u1e8f8e50"><span data-lake-id="uf8c641aa" id="uf8c641aa">动词</span></code><span data-lake-id="u4b811e31" id="u4b811e31"> ，是的 英语语法的核心 就是</span><code data-lake-id="udcaedb50" id="udcaedb50"><span data-lake-id="uc82cc637" id="uc82cc637">动词</span></code><span data-lake-id="ud8ba8ed0" id="ud8ba8ed0"> ， </span><strong><span data-lake-id="u14430eed" id="u14430eed">动词能够”串“起所有语法概念</span></strong><span data-lake-id="u76a25b5b" id="u76a25b5b"> ，如下图：</span></p><p data-lake-id="u88af9d93" id="u88af9d93"><br></p><p data-lake-id="u0c626071" id="u0c626071"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191243354.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A2622%2C%22originHeight%22%3A1328%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22d48Kq%22%7D"></card></p><p data-lake-id="u862432c0" id="u862432c0"><br></p><h3 data-lake-id="d17a0f0b" id="d17a0f0b"><span data-lake-id="u19752b05" id="u19752b05">参考</span></h3><p data-lake-id="ubf47e5a3" id="ubf47e5a3"><br></p><blockquote data-lake-id="u4b2c9df1" id="u4b2c9df1"><p data-lake-id="uf907d103" id="uf907d103"><a href="https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f" target="_blank" data-lake-id="ud189dc54" id="ud189dc54"><span data-lake-id="u779094be" id="u779094be">https://www.bilibili.com/video/BV1XY411J7aG?p=2&amp;vd_source=e507242a02e4c9fdb6386bb791e1c08f</span></a></p></blockquote>',public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-19T11:27:17.000Z",deleted_at:null,created_at:"2023-03-19T11:27:03.000Z",updated_at:"2023-03-19T11:27:29.000Z",published_at:"2023-03-19T11:27:17.000Z",first_published_at:"2023-03-19T11:27:16.694Z",word_count:769,cover:null,description:"英语语法综述为什么学语法？为了造句怎么学语法？先简单句 ，然后长难句什么是 简单句除了 感叹句、省略句、问句（向整句提问） ，都是在说 什么 + 怎么样  ，即 主语 + 谓语 如下图：这就是简单句那么 并列句 和 （主从）复杂句 呢？并列句，简单句的叠加（主从）复杂句 ，即简单句作为其他简单...",custom_description:null,hits:0,_serializer:"v2.doc_detail"},{id:118576422,slug:"tvw0dc2bsg2qrk7r",title:"0007.AL.最小硬币数",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:`<a name="ef74365d"></a>
# 最小硬币数

> [https://leetcode.cn/problems/coin-change/](https://leetcode.cn/problems/coin-change/)


![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181621816.png#id=zpE7D&originHeight=822&originWidth=895&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="6bf84746"></a>
## 动态规划的要点

这是一个经典的动态规划问题，因为它具有\`「最优子结构」\`的。即子问题间 \`互相独立\`

- 动态规划问题的一般形式就是\`求最值\`
- 求解动态规划的核心问题是\`穷举\`
- 具备\`「最优子结构」\`，即是否能够通过\`子问题的最值\`得到原问题的最值
- 是否 存在\`「重叠子问题」\`，如果存在需要 使用\`「备忘录」\`或者\`「DP table」\`来优化穷举过程
- \`重叠子问题\`、\`最优子结构\`、\`状态转移方程\`就是 **动态规划三要素**

<a name="ddc00f82"></a>
## 如何列出 \`状态转移方程\`

dp 函数：\`dp(n)\` 表示，输入一个目标金额 \`n\`，返回凑出目标金额 \`n\` 所需的最少硬币数量

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303170806731.png#id=c2JT8&originHeight=127&originWidth=682&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

- 第一步、确定 \`base case\`  , 比如 需要 找零  \`0元\` ，那么最小的硬币数就为 \`0\`
- 第二步、确定\`状态\`， 即\`原问题和子问题\`中会变化的\`变量\`  ， 所以，该问题的状态 为 \`找零多少钱
- 第三步、确定\`选择\`  ，即 **导致 状态 变化的行为** ，即 \`需要找零多少钱\` 会变化呢？因为每次选择了一枚硬币，比如会导致 \`状态\`的变化
- 第四步、明确 \`dp函数\`  或者 \`dp数组\` 
   - **dp函数**，自顶向下\`递归\`的动态规划 解法 ，看下面模板
   - \`dp数组\` ， 自底向上\`迭代\`的动态规划，看下面模板

<a name="4782e08c"></a>
## 自顶向下的\`递归\`解法

\`\`\`javascript
// 模板
function dp('所有可能的选择', '状态 1','状态 2 ...'){
    // ::::base case
    if('状态' === 1) return 'xxx'
    if('状态' === 1) return 'xxx'
    // ::::需要返回的最值
    let res = ''
    for (let '选择' of '所有可能的选择'){
        // # 此时的状态已经因为做了选择而改变
        res =  dp('所有可能的选择', '状态 1','状态 2 ...')
    }
    return res;
}

// 对应下面的代码 
function dp (coins, amount) {
    // base case
    if (amount === 0) {
        return 0;
    }
    if (amount < 0) {
        return -1
    }
    // ::::res为最终返回的结果，即最少几枚硬币
    let res = Infinity;
    for (let coin of coins) {
        // 计算子问题的结果
        let subProblem = dp(coins, amount - coin);
        // 子问题无解则跳过
        if (subProblem === -1) continue;
        // 能到这儿，说明能够继续
        // 在子问题中选择最优解，然后加一
        res = Math.min(res, subProblem + 1);
    }
    return res === Infinity ? -1 : res;
};
\`\`\`

分析一下时间复杂度：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181714402.png#id=nv7Ez&originHeight=720&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

下面看看算法复杂度：

- \`子问题\`总数为 \`递归树的节点个数\`，但是如何\`剪枝\` 依赖于 硬币的\`名额\`，算出有多少子问题比较困难，所以我们就按照\`最坏情况\`来估计复杂度，\`最坏情况\`是\`全用面额为 1 的硬币\` 
   - 类比 \`fib 数列\` ，如何\`剪枝\` 就比较方便， 即 \`fib(n-1) + fib(n-2)\` ,  可参考[[999.AL.斐波那契数列]] 里的\`递归树\`
- 假设目标金额为 \`n\`，给定的硬币个数为 \`k\`，那么\`递归树\`最坏情况下高度为 \`n\`（\`全用面额为 1 的硬币\`） 即 \`最终递归完成需要到树的最底部\`， 然后再假设这是一 \`棵满k叉树\` ，则节点的总数在 \`k^n\` 这个数量级。
- 接下来看\`每个子问题的复杂度\`，由于每次递归包含一个 for 循，复杂度为 \`O(k)\`，相乘得到总时间复杂度为 \`O(k*k^n) ===> O(k^n)\`

> [!info]<br />简单总结就是： 复杂度等于 \`子问题个数 * 每个子问题的复杂度\`<br />所以，因为这个问题的\`子问题个数\`就是\`指数级别\`，所以肯定是指数级别的复杂度


> [!tip]<br />注意以上代码模板的选 \`状态\` 与 \`选择\`


<a name="7b1a82a3"></a>
## 自顶向下的\`递归\`解法 - 带备忘录

\`\`\`javascript
// 具体实现
function fn(coins, amount) {
    const memo = new Array(amount+1).fill(-999);
    function dp(coins, amount) {
        // :::: base case
        if (amount === 0) return 0;
        if (amount < 0) return -1;
        // ::::已经被存储过了，就放在这儿
        if (memo[amount] !== -999) return memo[amount];
        // ::::res为最终返回的结果，即最少几枚硬币
        let res = Infinity;
        for (let coin of coins) {
            let subProblem = dp(coins, amount - coin);
            if (subProblem === -1) continue;
            res = Math.min(res, subProblem + 1);
        }
        memo[amount] = (res === Infinity ? -1 : res);
        return memo[amount];
    }
    return dp(coins, amount);
}

console.log(fn([1, 2, 5], 10));  // 2
console.log(fn([1, 24, 100], 200));  //  2
console.log(fn([5, 10, 20, 50], 201)); // -1
\`\`\`

很显然「备忘录」大大减小了\`子问题数目\`，完全消除了\`子问题的冗余\`，所以子问题总数不会超过金额数 \`n\`，即子问题数目为 \`O(n)\`。处理一个子问题的时间不变，仍是 \`O(k)\`，所以总的时间复杂度是 \`O(kn)\`

<a name="2735cd20"></a>
## 自底向上的dp 数组的迭代解法 -  dp table

- \`dp 函数\` 体现在\`函数参数\`
- \`dp 数组\` 体现在\`数组索引\`

dp 数组的定义：当目标金额为 \`i\` 时，至少需要 \`dp[i]\` 枚硬币凑出

先看看模板：

\`\`\`javascript
# 自底向上迭代的动态规划
# 初始化 base case
dp[0][0][...] = base case
# 进行状态转移
for 状态1 in 状态1的所有取值：
    for 状态2 in 状态2的所有取值：
        for ...
            dp[状态1][状态2][...] = 求最值(选择1，选择2...)

// 代码实现
function fn(coins, amount) {
    // ::::第一步：初始化
    // :::: dp 数组的定义：当目标金额为 \`i\` 时，至少需要 \`dp[i]\` 枚硬币凑出
    // :::: 初始化为 amount + 1 就相当于初始化为正无穷
    // :::: 因为最多dp[amount] 最大只能等于 amount ,即都找零 1 块钱的
    const dp = new Array(amount + 1).fill(amount + 1);

	// ::::第二步 base case
    dp[0] = 0;

    // ::::第三步 嵌套循环
    // 外层 for 循环在遍历所有状态的所有取值
    for (let i = 0; i < dp.length; i++) {
        // ::::内层 for 循环在求所有选择的最小值
        for (let coin of coins) {
            // 子问题无解，跳过
            if (i - coin < 0) {
                continue;
            }
            dp[i] = Math.min(dp[i], 1 + dp[i - coin]);
        }
    }
    
    return (dp[amount] === amount + 1) ? -1 : dp[amount];
}

console.log(fn([1, 2, 5], 10));  // 2
console.log(fn([1, 24, 100], 200));  //  2
console.log(fn([5, 10, 20, 50], 201)); // -1
\`\`\`

- 时间复杂度看\`几层遍历\`， 所以是  \`O(kn)\`（假设 \`k\` 为 硬币数，\`n\` 为找零多少钱）
- 空间复杂度 \`O(n)\`

<a name="f8aaec24"></a>
## 最后，总结几个关键点

- \`dp 递归函数 - 备忘录\`、\`dp 数组迭代（DP table）\` , 在追求“\`如何聪明地穷举\`”。\`用空间换时间\`的思路，是降低时间复杂度的不二法门
- 配合  [[999.AL.斐波那契数列]]  多理解，多动手
- \`自顶向下\`和\`自底向上\` 
   - \`自顶向下\` ，本质是递归，即"顶"问题，拆解为"子问题" 去解决，复杂度依赖于 \`子问题个数\`
   - \`自底向上\` ，本质是数组迭代，复杂度依赖于\`几重迭代\`
- 动态规划问题，核心的是写出\`暴力解法\` ，然后才是 \`空间换时间\`的优化思路

<a name="d17a0f0b"></a>
## 参考

- [https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/](https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/)
`,body_draft:`<a name="ef74365d"></a>
# 最小硬币数

> [https://leetcode.cn/problems/coin-change/](https://leetcode.cn/problems/coin-change/)


![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181621816.png#id=zpE7D&originHeight=822&originWidth=895&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

<a name="6bf84746"></a>
## 动态规划的要点

这是一个经典的动态规划问题，因为它具有\`「最优子结构」\`的。即子问题间 \`互相独立\`

- 动态规划问题的一般形式就是\`求最值\`
- 求解动态规划的核心问题是\`穷举\`
- 具备\`「最优子结构」\`，即是否能够通过\`子问题的最值\`得到原问题的最值
- 是否 存在\`「重叠子问题」\`，如果存在需要 使用\`「备忘录」\`或者\`「DP table」\`来优化穷举过程
- \`重叠子问题\`、\`最优子结构\`、\`状态转移方程\`就是 **动态规划三要素**

<a name="ddc00f82"></a>
## 如何列出 \`状态转移方程\`

dp 函数：\`dp(n)\` 表示，输入一个目标金额 \`n\`，返回凑出目标金额 \`n\` 所需的最少硬币数量

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303170806731.png#id=c2JT8&originHeight=127&originWidth=682&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

- 第一步、确定 \`base case\`  , 比如 需要 找零  \`0元\` ，那么最小的硬币数就为 \`0\`
- 第二步、确定\`状态\`， 即\`原问题和子问题\`中会变化的\`变量\`  ， 所以，该问题的状态 为 \`找零多少钱
- 第三步、确定\`选择\`  ，即 **导致 状态 变化的行为** ，即 \`需要找零多少钱\` 会变化呢？因为每次选择了一枚硬币，比如会导致 \`状态\`的变化
- 第四步、明确 \`dp函数\`  或者 \`dp数组\` 
   - **dp函数**，自顶向下\`递归\`的动态规划 解法 ，看下面模板
   - \`dp数组\` ， 自底向上\`迭代\`的动态规划，看下面模板

<a name="4782e08c"></a>
## 自顶向下的\`递归\`解法

\`\`\`javascript
// 模板
function dp('所有可能的选择', '状态 1','状态 2 ...'){
    // ::::base case
    if('状态' === 1) return 'xxx'
    if('状态' === 1) return 'xxx'
    // ::::需要返回的最值
    let res = ''
    for (let '选择' of '所有可能的选择'){
        // # 此时的状态已经因为做了选择而改变
        res =  dp('所有可能的选择', '状态 1','状态 2 ...')
    }
    return res;
}

// 对应下面的代码 
function dp (coins, amount) {
    // base case
    if (amount === 0) {
        return 0;
    }
    if (amount < 0) {
        return -1
    }
    // ::::res为最终返回的结果，即最少几枚硬币
    let res = Infinity;
    for (let coin of coins) {
        // 计算子问题的结果
        let subProblem = dp(coins, amount - coin);
        // 子问题无解则跳过
        if (subProblem === -1) continue;
        // 能到这儿，说明能够继续
        // 在子问题中选择最优解，然后加一
        res = Math.min(res, subProblem + 1);
    }
    return res === Infinity ? -1 : res;
};
\`\`\`

分析一下时间复杂度：

![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181714402.png#id=nv7Ez&originHeight=720&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)

下面看看算法复杂度：

- \`子问题\`总数为 \`递归树的节点个数\`，但是如何\`剪枝\` 依赖于 硬币的\`名额\`，算出有多少子问题比较困难，所以我们就按照\`最坏情况\`来估计复杂度，\`最坏情况\`是\`全用面额为 1 的硬币\` 
   - 类比 \`fib 数列\` ，如何\`剪枝\` 就比较方便， 即 \`fib(n-1) + fib(n-2)\` ,  可参考[[999.AL.斐波那契数列]] 里的\`递归树\`
- 假设目标金额为 \`n\`，给定的硬币个数为 \`k\`，那么\`递归树\`最坏情况下高度为 \`n\`（\`全用面额为 1 的硬币\`） 即 \`最终递归完成需要到树的最底部\`， 然后再假设这是一 \`棵满k叉树\` ，则节点的总数在 \`k^n\` 这个数量级。
- 接下来看\`每个子问题的复杂度\`，由于每次递归包含一个 for 循，复杂度为 \`O(k)\`，相乘得到总时间复杂度为 \`O(k*k^n) ===> O(k^n)\`

> [!info]<br />简单总结就是： 复杂度等于 \`子问题个数 * 每个子问题的复杂度\`<br />所以，因为这个问题的\`子问题个数\`就是\`指数级别\`，所以肯定是指数级别的复杂度


> [!tip]<br />注意以上代码模板的选 \`状态\` 与 \`选择\`


<a name="7b1a82a3"></a>
## 自顶向下的\`递归\`解法 - 带备忘录

\`\`\`javascript
// 具体实现
function fn(coins, amount) {
    const memo = new Array(amount+1).fill(-999);
    function dp(coins, amount) {
        // :::: base case
        if (amount === 0) return 0;
        if (amount < 0) return -1;
        // ::::已经被存储过了，就放在这儿
        if (memo[amount] !== -999) return memo[amount];
        // ::::res为最终返回的结果，即最少几枚硬币
        let res = Infinity;
        for (let coin of coins) {
            let subProblem = dp(coins, amount - coin);
            if (subProblem === -1) continue;
            res = Math.min(res, subProblem + 1);
        }
        memo[amount] = (res === Infinity ? -1 : res);
        return memo[amount];
    }
    return dp(coins, amount);
}

console.log(fn([1, 2, 5], 10));  // 2
console.log(fn([1, 24, 100], 200));  //  2
console.log(fn([5, 10, 20, 50], 201)); // -1
\`\`\`

很显然「备忘录」大大减小了\`子问题数目\`，完全消除了\`子问题的冗余\`，所以子问题总数不会超过金额数 \`n\`，即子问题数目为 \`O(n)\`。处理一个子问题的时间不变，仍是 \`O(k)\`，所以总的时间复杂度是 \`O(kn)\`

<a name="2735cd20"></a>
## 自底向上的dp 数组的迭代解法 -  dp table

- \`dp 函数\` 体现在\`函数参数\`
- \`dp 数组\` 体现在\`数组索引\`

dp 数组的定义：当目标金额为 \`i\` 时，至少需要 \`dp[i]\` 枚硬币凑出

先看看模板：

\`\`\`javascript
# 自底向上迭代的动态规划
# 初始化 base case
dp[0][0][...] = base case
# 进行状态转移
for 状态1 in 状态1的所有取值：
    for 状态2 in 状态2的所有取值：
        for ...
            dp[状态1][状态2][...] = 求最值(选择1，选择2...)

// 代码实现
function fn(coins, amount) {
    // ::::第一步：初始化
    // :::: dp 数组的定义：当目标金额为 \`i\` 时，至少需要 \`dp[i]\` 枚硬币凑出
    // :::: 初始化为 amount + 1 就相当于初始化为正无穷
    // :::: 因为最多dp[amount] 最大只能等于 amount ,即都找零 1 块钱的
    const dp = new Array(amount + 1).fill(amount + 1);

	// ::::第二步 base case
    dp[0] = 0;

    // ::::第三步 嵌套循环
    // 外层 for 循环在遍历所有状态的所有取值
    for (let i = 0; i < dp.length; i++) {
        // ::::内层 for 循环在求所有选择的最小值
        for (let coin of coins) {
            // 子问题无解，跳过
            if (i - coin < 0) {
                continue;
            }
            dp[i] = Math.min(dp[i], 1 + dp[i - coin]);
        }
    }
    
    return (dp[amount] === amount + 1) ? -1 : dp[amount];
}

console.log(fn([1, 2, 5], 10));  // 2
console.log(fn([1, 24, 100], 200));  //  2
console.log(fn([5, 10, 20, 50], 201)); // -1
\`\`\`

- 时间复杂度看\`几层遍历\`， 所以是  \`O(kn)\`（假设 \`k\` 为 硬币数，\`n\` 为找零多少钱）
- 空间复杂度 \`O(n)\`

<a name="f8aaec24"></a>
## 最后，总结几个关键点

- \`dp 递归函数 - 备忘录\`、\`dp 数组迭代（DP table）\` , 在追求“\`如何聪明地穷举\`”。\`用空间换时间\`的思路，是降低时间复杂度的不二法门
- 配合  [[999.AL.斐波那契数列]]  多理解，多动手
- \`自顶向下\`和\`自底向上\` 
   - \`自顶向下\` ，本质是递归，即"顶"问题，拆解为"子问题" 去解决，复杂度依赖于 \`子问题个数\`
   - \`自底向上\` ，本质是数组迭代，复杂度依赖于\`几重迭代\`
- 动态规划问题，核心的是写出\`暴力解法\` ，然后才是 \`空间换时间\`的优化思路

<a name="d17a0f0b"></a>
## 参考

- [https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/](https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/)
`,body_html:`<!doctype html><div class="lake-content" typography="classic"><h1 id="ef74365d"><span class="ne-text">最小硬币数</span></h1><p id="uc341bb76" class="ne-p"><br></p><div class="ne-quote"><p id="ube561005" class="ne-p"><a href="https://leetcode.cn/problems/coin-change/" data-href="https://leetcode.cn/problems/coin-change/" target="_blank" class="ne-link"><span class="ne-text">https://leetcode.cn/problems/coin-change/</span></a></p></div><p id="uc6912f1c" class="ne-p"><br></p><p id="uda05eb64" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181621816.png" width="895" id="zpE7D" class="ne-image"></p><p id="uc2b14ca3" class="ne-p"><br></p><h2 id="6bf84746"><span class="ne-text">动态规划的要点</span></h2><p id="ufaf4f6bd" class="ne-p"><br></p><p id="u4b18bfa3" class="ne-p"><span class="ne-text">这是一个经典的动态规划问题，因为它具有</span><code class="ne-code"><span class="ne-text">「最优子结构」</span></code><span class="ne-text">的。即子问题间 </span><code class="ne-code"><span class="ne-text">互相独立</span></code></p><p id="uc0946f8d" class="ne-p"><br></p><ul class="ne-ul"><li id="ua2c9e0d0"><span class="ne-text">动态规划问题的一般形式就是</span><code class="ne-code"><span class="ne-text">求最值</span></code></li><li id="u66ac9a36"><span class="ne-text">求解动态规划的核心问题是</span><code class="ne-code"><span class="ne-text">穷举</span></code></li><li id="u3d3d2264"><span class="ne-text">具备</span><code class="ne-code"><span class="ne-text">「最优子结构」</span></code><span class="ne-text">，即是否能够通过</span><code class="ne-code"><span class="ne-text">子问题的最值</span></code><span class="ne-text">得到原问题的最值</span></li><li id="uf7da022d"><span class="ne-text">是否 存在</span><code class="ne-code"><span class="ne-text">「重叠子问题」</span></code><span class="ne-text">，如果存在需要 使用</span><code class="ne-code"><span class="ne-text">「备忘录」</span></code><span class="ne-text">或者</span><code class="ne-code"><span class="ne-text">「DP table」</span></code><span class="ne-text">来优化穷举过程</span></li><li id="u5733e402"><code class="ne-code"><span class="ne-text">重叠子问题</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">最优子结构</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">状态转移方程</span></code><span class="ne-text">就是 </span><strong><span class="ne-text">动态规划三要素</span></strong></li></ul><p id="ud26ca6e0" class="ne-p"><br></p><h2 id="ddc00f82"><span class="ne-text">如何列出 </span><code class="ne-code"><span class="ne-text">状态转移方程</span></code></h2><p id="ud2b58075" class="ne-p"><br></p><p id="u7a6b67a0" class="ne-p"><span class="ne-text">dp 函数：</span><code class="ne-code"><span class="ne-text">dp(n)</span></code><span class="ne-text"> 表示，输入一个目标金额 </span><code class="ne-code"><span class="ne-text">n</span></code><span class="ne-text">，返回凑出目标金额 </span><code class="ne-code"><span class="ne-text">n</span></code><span class="ne-text"> 所需的最少硬币数量</span></p><p id="ud32861a8" class="ne-p"><br></p><p id="ub5438af6" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303170806731.png" width="682" id="c2JT8" class="ne-image"></p><p id="u1033a389" class="ne-p"><br></p><ul class="ne-ul"><li id="ucf122ee4"><span class="ne-text">第一步、确定 </span><code class="ne-code"><span class="ne-text">base case</span></code><span class="ne-text">  , 比如 需要 找零  </span><code class="ne-code"><span class="ne-text">0元</span></code><span class="ne-text"> ，那么最小的硬币数就为 </span><code class="ne-code"><span class="ne-text">0</span></code></li><li id="u8d77b759"><span class="ne-text">第二步、确定</span><code class="ne-code"><span class="ne-text">状态</span></code><span class="ne-text">， 即</span><code class="ne-code"><span class="ne-text">原问题和子问题</span></code><span class="ne-text">中会变化的</span><code class="ne-code"><span class="ne-text">变量</span></code><span class="ne-text">  ， 所以，该问题的状态 为 \`找零多少钱</span></li><li id="uca0e988e"><span class="ne-text">第三步、确定</span><code class="ne-code"><span class="ne-text">选择</span></code><span class="ne-text">  ，即 </span><strong><span class="ne-text">导致 状态 变化的行为</span></strong><span class="ne-text"> ，即 </span><code class="ne-code"><span class="ne-text">需要找零多少钱</span></code><span class="ne-text"> 会变化呢？因为每次选择了一枚硬币，比如会导致 </span><code class="ne-code"><span class="ne-text">状态</span></code><span class="ne-text">的变化</span></li><li id="u9bb86338"><span class="ne-text">第四步、明确 </span><code class="ne-code"><span class="ne-text">dp函数</span></code><span class="ne-text">  或者 </span><code class="ne-code"><span class="ne-text">dp数组</span></code><span class="ne-text"> </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="u8325ce31"><strong><span class="ne-text">dp函数</span></strong><span class="ne-text">，自顶向下</span><code class="ne-code"><span class="ne-text">递归</span></code><span class="ne-text">的动态规划 解法 ，看下面模板</span></li><li id="u878b4ecf"><code class="ne-code"><span class="ne-text">dp数组</span></code><span class="ne-text"> ， 自底向上</span><code class="ne-code"><span class="ne-text">迭代</span></code><span class="ne-text">的动态规划，看下面模板</span></li></ul></ul><p id="uf07dcd11" class="ne-p"><br></p><h2 id="4782e08c"><span class="ne-text">自顶向下的</span><code class="ne-code"><span class="ne-text">递归</span></code><span class="ne-text">解法</span></h2><p id="u03b04f3e" class="ne-p"><br></p><pre data-language="javascript" id="6b8258f5" class="ne-codeblock language-javascript">// 模板
function dp('所有可能的选择', '状态 1','状态 2 ...'){
    // ::::base case
    if('状态' === 1) return 'xxx'
    if('状态' === 1) return 'xxx'
    // ::::需要返回的最值
    let res = ''
    for (let '选择' of '所有可能的选择'){
        // # 此时的状态已经因为做了选择而改变
        res =  dp('所有可能的选择', '状态 1','状态 2 ...')
    }
    return res;
}

// 对应下面的代码 
function dp (coins, amount) {
    // base case
    if (amount === 0) {
        return 0;
    }
    if (amount &lt; 0) {
        return -1
    }
    // ::::res为最终返回的结果，即最少几枚硬币
    let res = Infinity;
    for (let coin of coins) {
        // 计算子问题的结果
        let subProblem = dp(coins, amount - coin);
        // 子问题无解则跳过
        if (subProblem === -1) continue;
        // 能到这儿，说明能够继续
        // 在子问题中选择最优解，然后加一
        res = Math.min(res, subProblem + 1);
    }
    return res === Infinity ? -1 : res;
};</pre><p id="u8e6cb626" class="ne-p"><br></p><p id="u4f2b48ab" class="ne-p"><span class="ne-text">分析一下时间复杂度：</span></p><p id="uf785dce6" class="ne-p"><br></p><p id="uf6871382" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181714402.png" width="1280" id="nv7Ez" class="ne-image"></p><p id="ua27263ff" class="ne-p"><br></p><p id="uedb0978d" class="ne-p"><span class="ne-text">下面看看算法复杂度：</span></p><p id="u6fb142ed" class="ne-p"><br></p><ul class="ne-ul"><li id="ufa7386ea"><code class="ne-code"><span class="ne-text">子问题</span></code><span class="ne-text">总数为 </span><code class="ne-code"><span class="ne-text">递归树的节点个数</span></code><span class="ne-text">，但是如何</span><code class="ne-code"><span class="ne-text">剪枝</span></code><span class="ne-text"> 依赖于 硬币的</span><code class="ne-code"><span class="ne-text">名额</span></code><span class="ne-text">，算出有多少子问题比较困难，所以我们就按照</span><code class="ne-code"><span class="ne-text">最坏情况</span></code><span class="ne-text">来估计复杂度，</span><code class="ne-code"><span class="ne-text">最坏情况</span></code><span class="ne-text">是</span><code class="ne-code"><span class="ne-text">全用面额为 1 的硬币</span></code><span class="ne-text"> </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="uc282c592"><span class="ne-text">类比 </span><code class="ne-code"><span class="ne-text">fib 数列</span></code><span class="ne-text"> ，如何</span><code class="ne-code"><span class="ne-text">剪枝</span></code><span class="ne-text"> 就比较方便， 即 </span><code class="ne-code"><span class="ne-text">fib(n-1) + fib(n-2)</span></code><span class="ne-text"> ,  可参考[[999.AL.斐波那契数列]] 里的</span><code class="ne-code"><span class="ne-text">递归树</span></code></li></ul></ul><ul class="ne-ul"><li id="ua9bf763b"><span class="ne-text">假设目标金额为 </span><code class="ne-code"><span class="ne-text">n</span></code><span class="ne-text">，给定的硬币个数为 </span><code class="ne-code"><span class="ne-text">k</span></code><span class="ne-text">，那么</span><code class="ne-code"><span class="ne-text">递归树</span></code><span class="ne-text">最坏情况下高度为 </span><code class="ne-code"><span class="ne-text">n</span></code><span class="ne-text">（</span><code class="ne-code"><span class="ne-text">全用面额为 1 的硬币</span></code><span class="ne-text">） 即 </span><code class="ne-code"><span class="ne-text">最终递归完成需要到树的最底部</span></code><span class="ne-text">， 然后再假设这是一 </span><code class="ne-code"><span class="ne-text">棵满k叉树</span></code><span class="ne-text"> ，则节点的总数在 </span><code class="ne-code"><span class="ne-text">k^n</span></code><span class="ne-text"> 这个数量级。</span></li><li id="u6221826d"><span class="ne-text">接下来看</span><code class="ne-code"><span class="ne-text">每个子问题的复杂度</span></code><span class="ne-text">，由于每次递归包含一个 for 循，复杂度为 </span><code class="ne-code"><span class="ne-text">O(k)</span></code><span class="ne-text">，相乘得到总时间复杂度为 </span><code class="ne-code"><span class="ne-text">O(k*k^n) ===&gt; O(k^n)</span></code></li></ul><p id="u55f293c9" class="ne-p"><br></p><div class="ne-quote"><p id="uc63d2c70" class="ne-p"><span class="ne-text">[!info]<br /></span><span class="ne-text">简单总结就是： 复杂度等于 </span><code class="ne-code"><span class="ne-text">子问题个数 * 每个子问题的复杂度</span></code><span class="ne-text"><br /></span><span class="ne-text">所以，因为这个问题的</span><code class="ne-code"><span class="ne-text">子问题个数</span></code><span class="ne-text">就是</span><code class="ne-code"><span class="ne-text">指数级别</span></code><span class="ne-text">，所以肯定是指数级别的复杂度</span></p></div><p id="u710048c2" class="ne-p"><br></p><div class="ne-quote"><p id="u0567839c" class="ne-p"><span class="ne-text">[!tip]<br /></span><span class="ne-text">注意以上代码模板的选 </span><code class="ne-code"><span class="ne-text">状态</span></code><span class="ne-text"> 与 </span><code class="ne-code"><span class="ne-text">选择</span></code></p></div><p id="u5bd86b25" class="ne-p"><br></p><h2 id="7b1a82a3"><span class="ne-text">自顶向下的</span><code class="ne-code"><span class="ne-text">递归</span></code><span class="ne-text">解法 - 带备忘录</span></h2><p id="udd4aada2" class="ne-p"><br></p><pre data-language="javascript" id="acc7a31d" class="ne-codeblock language-javascript">// 具体实现
function fn(coins, amount) {
    const memo = new Array(amount+1).fill(-999);
    function dp(coins, amount) {
        // :::: base case
        if (amount === 0) return 0;
        if (amount &lt; 0) return -1;
        // ::::已经被存储过了，就放在这儿
        if (memo[amount] !== -999) return memo[amount];
        // ::::res为最终返回的结果，即最少几枚硬币
        let res = Infinity;
        for (let coin of coins) {
            let subProblem = dp(coins, amount - coin);
            if (subProblem === -1) continue;
            res = Math.min(res, subProblem + 1);
        }
        memo[amount] = (res === Infinity ? -1 : res);
        return memo[amount];
    }
    return dp(coins, amount);
}

console.log(fn([1, 2, 5], 10));  // 2
console.log(fn([1, 24, 100], 200));  //  2
console.log(fn([5, 10, 20, 50], 201)); // -1</pre><p id="u6d7690d8" class="ne-p"><br></p><p id="ud06ec1c5" class="ne-p"><span class="ne-text">很显然「备忘录」大大减小了</span><code class="ne-code"><span class="ne-text">子问题数目</span></code><span class="ne-text">，完全消除了</span><code class="ne-code"><span class="ne-text">子问题的冗余</span></code><span class="ne-text">，所以子问题总数不会超过金额数 </span><code class="ne-code"><span class="ne-text">n</span></code><span class="ne-text">，即子问题数目为 </span><code class="ne-code"><span class="ne-text">O(n)</span></code><span class="ne-text">。处理一个子问题的时间不变，仍是 </span><code class="ne-code"><span class="ne-text">O(k)</span></code><span class="ne-text">，所以总的时间复杂度是 </span><code class="ne-code"><span class="ne-text">O(kn)</span></code></p><p id="ub5e0b6c9" class="ne-p"><br></p><h2 id="2735cd20"><span class="ne-text">自底向上的dp 数组的迭代解法 -  dp table</span></h2><p id="u5c237592" class="ne-p"><br></p><ul class="ne-ul"><li id="u2abafe49"><code class="ne-code"><span class="ne-text">dp 函数</span></code><span class="ne-text"> 体现在</span><code class="ne-code"><span class="ne-text">函数参数</span></code></li><li id="u82681233"><code class="ne-code"><span class="ne-text">dp 数组</span></code><span class="ne-text"> 体现在</span><code class="ne-code"><span class="ne-text">数组索引</span></code></li></ul><p id="u734d8c16" class="ne-p"><br></p><p id="u2faf8352" class="ne-p"><span class="ne-text">dp 数组的定义：当目标金额为 </span><code class="ne-code"><span class="ne-text">i</span></code><span class="ne-text"> 时，至少需要 </span><code class="ne-code"><span class="ne-text">dp[i]</span></code><span class="ne-text"> 枚硬币凑出</span></p><p id="ube8b2a25" class="ne-p"><br></p><p id="uda1d4939" class="ne-p"><span class="ne-text">先看看模板：</span></p><p id="u04acae66" class="ne-p"><br></p><pre data-language="javascript" id="c2c8452d" class="ne-codeblock language-javascript"># 自底向上迭代的动态规划
# 初始化 base case
dp[0][0][...] = base case
# 进行状态转移
for 状态1 in 状态1的所有取值：
    for 状态2 in 状态2的所有取值：
        for ...
            dp[状态1][状态2][...] = 求最值(选择1，选择2...)

// 代码实现
function fn(coins, amount) {
    // ::::第一步：初始化
    // :::: dp 数组的定义：当目标金额为 \`i\` 时，至少需要 \`dp[i]\` 枚硬币凑出
    // :::: 初始化为 amount + 1 就相当于初始化为正无穷
    // :::: 因为最多dp[amount] 最大只能等于 amount ,即都找零 1 块钱的
    const dp = new Array(amount + 1).fill(amount + 1);

	// ::::第二步 base case
    dp[0] = 0;

    // ::::第三步 嵌套循环
    // 外层 for 循环在遍历所有状态的所有取值
    for (let i = 0; i &lt; dp.length; i++) {
        // ::::内层 for 循环在求所有选择的最小值
        for (let coin of coins) {
            // 子问题无解，跳过
            if (i - coin &lt; 0) {
                continue;
            }
            dp[i] = Math.min(dp[i], 1 + dp[i - coin]);
        }
    }
    
    return (dp[amount] === amount + 1) ? -1 : dp[amount];
}

console.log(fn([1, 2, 5], 10));  // 2
console.log(fn([1, 24, 100], 200));  //  2
console.log(fn([5, 10, 20, 50], 201)); // -1</pre><p id="u3e6b98eb" class="ne-p"><br></p><ul class="ne-ul"><li id="ud648d3c7"><span class="ne-text">时间复杂度看</span><code class="ne-code"><span class="ne-text">几层遍历</span></code><span class="ne-text">， 所以是  </span><code class="ne-code"><span class="ne-text">O(kn)</span></code><span class="ne-text">（假设 </span><code class="ne-code"><span class="ne-text">k</span></code><span class="ne-text"> 为 硬币数，</span><code class="ne-code"><span class="ne-text">n</span></code><span class="ne-text"> 为找零多少钱）</span></li><li id="u7a5d5dd6"><span class="ne-text">空间复杂度 </span><code class="ne-code"><span class="ne-text">O(n)</span></code></li></ul><p id="ub00ff78a" class="ne-p"><br></p><h2 id="f8aaec24"><span class="ne-text">最后，总结几个关键点</span></h2><p id="u9b464421" class="ne-p"><br></p><ul class="ne-ul"><li id="u6cee1123"><code class="ne-code"><span class="ne-text">dp 递归函数 - 备忘录</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">dp 数组迭代（DP table）</span></code><span class="ne-text"> , 在追求“</span><code class="ne-code"><span class="ne-text">如何聪明地穷举</span></code><span class="ne-text">”。</span><code class="ne-code"><span class="ne-text">用空间换时间</span></code><span class="ne-text">的思路，是降低时间复杂度的不二法门</span></li><li id="uc68a3973"><span class="ne-text">配合  [[999.AL.斐波那契数列]]  多理解，多动手</span></li><li id="u6da30a7d"><code class="ne-code"><span class="ne-text">自顶向下</span></code><span class="ne-text">和</span><code class="ne-code"><span class="ne-text">自底向上</span></code><span class="ne-text"> </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="u3d33e8dd"><code class="ne-code"><span class="ne-text">自顶向下</span></code><span class="ne-text"> ，本质是递归，即&quot;顶&quot;问题，拆解为&quot;子问题&quot; 去解决，复杂度依赖于 </span><code class="ne-code"><span class="ne-text">子问题个数</span></code></li><li id="u4baa211c"><code class="ne-code"><span class="ne-text">自底向上</span></code><span class="ne-text"> ，本质是数组迭代，复杂度依赖于</span><code class="ne-code"><span class="ne-text">几重迭代</span></code></li></ul></ul><ul class="ne-ul"><li id="u2cc99ea9"><span class="ne-text">动态规划问题，核心的是写出</span><code class="ne-code"><span class="ne-text">暴力解法</span></code><span class="ne-text"> ，然后才是 </span><code class="ne-code"><span class="ne-text">空间换时间</span></code><span class="ne-text">的优化思路</span></li></ul><p id="ud6ba27e7" class="ne-p"><br></p><h2 id="d17a0f0b"><span class="ne-text">参考</span></h2><p id="u4ef5a4f3" class="ne-p"><br></p><ul class="ne-ul"><li id="u4ffdd94f"><a href="https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/" data-href="https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/" target="_blank" class="ne-link"><span class="ne-text">https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/</span></a></li></ul></div>`,body_lake:`<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="ef74365d" id="ef74365d"><span data-lake-id="ufd2e0e7a" id="ufd2e0e7a">最小硬币数</span></h1><p data-lake-id="uc341bb76" id="uc341bb76"><br></p><blockquote data-lake-id="ucc87cfdc" id="ucc87cfdc"><p data-lake-id="ube561005" id="ube561005"><a href="https://leetcode.cn/problems/coin-change/" target="_blank" data-lake-id="u7c071310" id="u7c071310"><span data-lake-id="u1c73433f" id="u1c73433f">https://leetcode.cn/problems/coin-change/</span></a></p></blockquote><p data-lake-id="uc6912f1c" id="uc6912f1c"><br></p><p data-lake-id="uda05eb64" id="uda05eb64"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181621816.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A895%2C%22originHeight%22%3A822%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22zpE7D%22%7D"></card></p><p data-lake-id="uc2b14ca3" id="uc2b14ca3"><br></p><h2 data-lake-id="6bf84746" id="6bf84746"><span data-lake-id="udce0775a" id="udce0775a">动态规划的要点</span></h2><p data-lake-id="ufaf4f6bd" id="ufaf4f6bd"><br></p><p data-lake-id="u4b18bfa3" id="u4b18bfa3"><span data-lake-id="u9a1e0d4a" id="u9a1e0d4a">这是一个经典的动态规划问题，因为它具有</span><code data-lake-id="uca64b1cb" id="uca64b1cb"><span data-lake-id="u410a0a09" id="u410a0a09">「最优子结构」</span></code><span data-lake-id="u42e81142" id="u42e81142">的。即子问题间 </span><code data-lake-id="u4ac51a33" id="u4ac51a33"><span data-lake-id="ud27ca03c" id="ud27ca03c">互相独立</span></code></p><p data-lake-id="uc0946f8d" id="uc0946f8d"><br></p><ul list="u2dffe98f"><li fid="ue16b216e" data-lake-id="ua2c9e0d0" id="ua2c9e0d0"><span data-lake-id="ud131742d" id="ud131742d">动态规划问题的一般形式就是</span><code data-lake-id="u22c9bda1" id="u22c9bda1"><span data-lake-id="u0cc68982" id="u0cc68982">求最值</span></code></li><li fid="ue16b216e" data-lake-id="u66ac9a36" id="u66ac9a36"><span data-lake-id="u93d647bb" id="u93d647bb">求解动态规划的核心问题是</span><code data-lake-id="u047f9a56" id="u047f9a56"><span data-lake-id="u35526a6a" id="u35526a6a">穷举</span></code></li><li fid="ue16b216e" data-lake-id="u3d3d2264" id="u3d3d2264"><span data-lake-id="uc4dbad32" id="uc4dbad32">具备</span><code data-lake-id="u9b6a7867" id="u9b6a7867"><span data-lake-id="ua42595db" id="ua42595db">「最优子结构」</span></code><span data-lake-id="uca0530c0" id="uca0530c0">，即是否能够通过</span><code data-lake-id="u4a3361cf" id="u4a3361cf"><span data-lake-id="uf60ba0ca" id="uf60ba0ca">子问题的最值</span></code><span data-lake-id="ucdfc2ec1" id="ucdfc2ec1">得到原问题的最值</span></li><li fid="ue16b216e" data-lake-id="uf7da022d" id="uf7da022d"><span data-lake-id="u96a60dfc" id="u96a60dfc">是否 存在</span><code data-lake-id="u4b8a7049" id="u4b8a7049"><span data-lake-id="u2f5665bf" id="u2f5665bf">「重叠子问题」</span></code><span data-lake-id="u6b981ad0" id="u6b981ad0">，如果存在需要 使用</span><code data-lake-id="u0cd7bf83" id="u0cd7bf83"><span data-lake-id="uea1fde9d" id="uea1fde9d">「备忘录」</span></code><span data-lake-id="ue11aeaac" id="ue11aeaac">或者</span><code data-lake-id="u9d01b3e1" id="u9d01b3e1"><span data-lake-id="u1e6515a1" id="u1e6515a1">「DP table」</span></code><span data-lake-id="ua9af5cb7" id="ua9af5cb7">来优化穷举过程</span></li><li fid="ue16b216e" data-lake-id="u5733e402" id="u5733e402"><code data-lake-id="ub1903651" id="ub1903651"><span data-lake-id="u080eb555" id="u080eb555">重叠子问题</span></code><span data-lake-id="uff92ed5d" id="uff92ed5d">、</span><code data-lake-id="ufbff6857" id="ufbff6857"><span data-lake-id="u8fb1ac0e" id="u8fb1ac0e">最优子结构</span></code><span data-lake-id="u6a95c272" id="u6a95c272">、</span><code data-lake-id="ud945c719" id="ud945c719"><span data-lake-id="uee4880d8" id="uee4880d8">状态转移方程</span></code><span data-lake-id="u4df581de" id="u4df581de">就是 </span><strong><span data-lake-id="ub15edf1b" id="ub15edf1b">动态规划三要素</span></strong></li></ul><p data-lake-id="ud26ca6e0" id="ud26ca6e0"><br></p><h2 data-lake-id="ddc00f82" id="ddc00f82"><span data-lake-id="u075f56bd" id="u075f56bd">如何列出 </span><code data-lake-id="u361c3d42" id="u361c3d42"><span data-lake-id="uc8e080b4" id="uc8e080b4">状态转移方程</span></code></h2><p data-lake-id="ud2b58075" id="ud2b58075"><br></p><p data-lake-id="u7a6b67a0" id="u7a6b67a0"><span data-lake-id="uaacb823f" id="uaacb823f">dp 函数：</span><code data-lake-id="u70bfaf3a" id="u70bfaf3a"><span data-lake-id="u1ce8b7ad" id="u1ce8b7ad">dp(n)</span></code><span data-lake-id="u26c17abd" id="u26c17abd"> 表示，输入一个目标金额 </span><code data-lake-id="u65b6c4d8" id="u65b6c4d8"><span data-lake-id="ud2d29a2a" id="ud2d29a2a">n</span></code><span data-lake-id="uf311b26b" id="uf311b26b">，返回凑出目标金额 </span><code data-lake-id="u2fe15597" id="u2fe15597"><span data-lake-id="uaed7b907" id="uaed7b907">n</span></code><span data-lake-id="uc92a9014" id="uc92a9014"> 所需的最少硬币数量</span></p><p data-lake-id="ud32861a8" id="ud32861a8"><br></p><p data-lake-id="ub5438af6" id="ub5438af6"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303170806731.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A682%2C%22originHeight%22%3A127%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22c2JT8%22%7D"></card></p><p data-lake-id="u1033a389" id="u1033a389"><br></p><ul list="ub288e829"><li fid="ub94e2246" data-lake-id="ucf122ee4" id="ucf122ee4"><span data-lake-id="u28bd66b5" id="u28bd66b5">第一步、确定 </span><code data-lake-id="u8f325d1b" id="u8f325d1b"><span data-lake-id="u37382e18" id="u37382e18">base case</span></code><span data-lake-id="ucf9a91d9" id="ucf9a91d9">  , 比如 需要 找零  </span><code data-lake-id="u53e03b56" id="u53e03b56"><span data-lake-id="ub7e1aed2" id="ub7e1aed2">0元</span></code><span data-lake-id="u06e24b23" id="u06e24b23"> ，那么最小的硬币数就为 </span><code data-lake-id="uc24b074a" id="uc24b074a"><span data-lake-id="uf55ce670" id="uf55ce670">0</span></code></li><li fid="ub94e2246" data-lake-id="u8d77b759" id="u8d77b759"><span data-lake-id="u359f7beb" id="u359f7beb">第二步、确定</span><code data-lake-id="ua63ee000" id="ua63ee000"><span data-lake-id="ue18185c3" id="ue18185c3">状态</span></code><span data-lake-id="u5e0bc732" id="u5e0bc732">， 即</span><code data-lake-id="u735c8980" id="u735c8980"><span data-lake-id="u52158aaa" id="u52158aaa">原问题和子问题</span></code><span data-lake-id="u8fab7c01" id="u8fab7c01">中会变化的</span><code data-lake-id="u86c9f0a1" id="u86c9f0a1"><span data-lake-id="ua082e231" id="ua082e231">变量</span></code><span data-lake-id="uf02453c1" id="uf02453c1">  ， 所以，该问题的状态 为 \`找零多少钱</span></li><li fid="ub94e2246" data-lake-id="uca0e988e" id="uca0e988e"><span data-lake-id="ufb091888" id="ufb091888">第三步、确定</span><code data-lake-id="u99a7f391" id="u99a7f391"><span data-lake-id="u9e29fe5c" id="u9e29fe5c">选择</span></code><span data-lake-id="uab19b75c" id="uab19b75c">  ，即 </span><strong><span data-lake-id="u505c990a" id="u505c990a">导致 状态 变化的行为</span></strong><span data-lake-id="uf65d7d4e" id="uf65d7d4e"> ，即 </span><code data-lake-id="u6ad755e0" id="u6ad755e0"><span data-lake-id="u6df093bf" id="u6df093bf">需要找零多少钱</span></code><span data-lake-id="u9202d956" id="u9202d956"> 会变化呢？因为每次选择了一枚硬币，比如会导致 </span><code data-lake-id="u34558860" id="u34558860"><span data-lake-id="u55d7f41e" id="u55d7f41e">状态</span></code><span data-lake-id="u94aa7003" id="u94aa7003">的变化</span></li><li fid="ub94e2246" data-lake-id="u9bb86338" id="u9bb86338"><span data-lake-id="u3a35c4d1" id="u3a35c4d1">第四步、明确 </span><code data-lake-id="u726876cf" id="u726876cf"><span data-lake-id="ubd43c9b6" id="ubd43c9b6">dp函数</span></code><span data-lake-id="u53be6fea" id="u53be6fea">  或者 </span><code data-lake-id="uf21c9a50" id="uf21c9a50"><span data-lake-id="ua226b9f0" id="ua226b9f0">dp数组</span></code><span data-lake-id="u15b26c49" id="u15b26c49"> </span></li></ul><ul list="ub288e829" data-lake-indent="1"><li fid="ud15f40f4" data-lake-id="u8325ce31" id="u8325ce31"><strong><span data-lake-id="u7079ce84" id="u7079ce84">dp函数</span></strong><span data-lake-id="ub4b6d610" id="ub4b6d610">，自顶向下</span><code data-lake-id="u7174accd" id="u7174accd"><span data-lake-id="u2c142bba" id="u2c142bba">递归</span></code><span data-lake-id="u05267739" id="u05267739">的动态规划 解法 ，看下面模板</span></li><li fid="ud15f40f4" data-lake-id="u878b4ecf" id="u878b4ecf"><code data-lake-id="u6ea22a75" id="u6ea22a75"><span data-lake-id="u1cd05010" id="u1cd05010">dp数组</span></code><span data-lake-id="uabb57ec8" id="uabb57ec8"> ， 自底向上</span><code data-lake-id="ud27f3deb" id="ud27f3deb"><span data-lake-id="uc895f2b5" id="uc895f2b5">迭代</span></code><span data-lake-id="u888552ec" id="u888552ec">的动态规划，看下面模板</span></li></ul><p data-lake-id="uf07dcd11" id="uf07dcd11"><br></p><h2 data-lake-id="4782e08c" id="4782e08c"><span data-lake-id="u50491131" id="u50491131">自顶向下的</span><code data-lake-id="ue9787229" id="ue9787229"><span data-lake-id="uf9cfa325" id="uf9cfa325">递归</span></code><span data-lake-id="u64312da4" id="u64312da4">解法</span></h2><p data-lake-id="u03b04f3e" id="u03b04f3e"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E6%A8%A1%E6%9D%BF%5Cnfunction%20dp('%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9'%2C%20'%E7%8A%B6%E6%80%81%201'%2C'%E7%8A%B6%E6%80%81%202%20...')%7B%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3Abase%20case%5Cn%20%20%20%20if('%E7%8A%B6%E6%80%81'%20%3D%3D%3D%201)%20return%20'xxx'%5Cn%20%20%20%20if('%E7%8A%B6%E6%80%81'%20%3D%3D%3D%201)%20return%20'xxx'%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E9%9C%80%E8%A6%81%E8%BF%94%E5%9B%9E%E7%9A%84%E6%9C%80%E5%80%BC%5Cn%20%20%20%20let%20res%20%3D%20''%5Cn%20%20%20%20for%20(let%20'%E9%80%89%E6%8B%A9'%20of%20'%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9')%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%23%20%E6%AD%A4%E6%97%B6%E7%9A%84%E7%8A%B6%E6%80%81%E5%B7%B2%E7%BB%8F%E5%9B%A0%E4%B8%BA%E5%81%9A%E4%BA%86%E9%80%89%E6%8B%A9%E8%80%8C%E6%94%B9%E5%8F%98%5Cn%20%20%20%20%20%20%20%20res%20%3D%20%20dp('%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9'%2C%20'%E7%8A%B6%E6%80%81%201'%2C'%E7%8A%B6%E6%80%81%202%20...')%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%3B%5Cn%7D%5Cn%5Cn%2F%2F%20%E5%AF%B9%E5%BA%94%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%20%5Cnfunction%20dp%20(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%2F%2F%20base%20case%5Cn%20%20%20%20if%20(amount%20%3D%3D%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20return%200%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20if%20(amount%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20-1%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3Ares%E4%B8%BA%E6%9C%80%E7%BB%88%E8%BF%94%E5%9B%9E%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E5%8D%B3%E6%9C%80%E5%B0%91%E5%87%A0%E6%9E%9A%E7%A1%AC%E5%B8%81%5Cn%20%20%20%20let%20res%20%3D%20Infinity%3B%5Cn%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E5%AD%90%E9%97%AE%E9%A2%98%E7%9A%84%E7%BB%93%E6%9E%9C%5Cn%20%20%20%20%20%20%20%20let%20subProblem%20%3D%20dp(coins%2C%20amount%20-%20coin)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%AD%90%E9%97%AE%E9%A2%98%E6%97%A0%E8%A7%A3%E5%88%99%E8%B7%B3%E8%BF%87%5Cn%20%20%20%20%20%20%20%20if%20(subProblem%20%3D%3D%3D%20-1)%20continue%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%83%BD%E5%88%B0%E8%BF%99%E5%84%BF%EF%BC%8C%E8%AF%B4%E6%98%8E%E8%83%BD%E5%A4%9F%E7%BB%A7%E7%BB%AD%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%9C%A8%E5%AD%90%E9%97%AE%E9%A2%98%E4%B8%AD%E9%80%89%E6%8B%A9%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%8C%E7%84%B6%E5%90%8E%E5%8A%A0%E4%B8%80%5Cn%20%20%20%20%20%20%20%20res%20%3D%20Math.min(res%2C%20subProblem%20%2B%201)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%20%3D%3D%3D%20Infinity%20%3F%20-1%20%3A%20res%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%226b8258f5%22%7D"></card><p data-lake-id="u8e6cb626" id="u8e6cb626"><br></p><p data-lake-id="u4f2b48ab" id="u4f2b48ab"><span data-lake-id="uf8439e18" id="uf8439e18">分析一下时间复杂度：</span></p><p data-lake-id="uf785dce6" id="uf785dce6"><br></p><p data-lake-id="uf6871382" id="uf6871382"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181714402.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1280%2C%22originHeight%22%3A720%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22nv7Ez%22%7D"></card></p><p data-lake-id="ua27263ff" id="ua27263ff"><br></p><p data-lake-id="uedb0978d" id="uedb0978d"><span data-lake-id="uac689ccc" id="uac689ccc">下面看看算法复杂度：</span></p><p data-lake-id="u6fb142ed" id="u6fb142ed"><br></p><ul list="ub932b697"><li fid="u0a2ce8e0" data-lake-id="ufa7386ea" id="ufa7386ea"><code data-lake-id="u70f6d21c" id="u70f6d21c"><span data-lake-id="uf33b10c3" id="uf33b10c3">子问题</span></code><span data-lake-id="ua14a832a" id="ua14a832a">总数为 </span><code data-lake-id="uc4f9368d" id="uc4f9368d"><span data-lake-id="uf4071e7d" id="uf4071e7d">递归树的节点个数</span></code><span data-lake-id="ua084e6cf" id="ua084e6cf">，但是如何</span><code data-lake-id="u056fdefc" id="u056fdefc"><span data-lake-id="u813c7169" id="u813c7169">剪枝</span></code><span data-lake-id="u57c87ee3" id="u57c87ee3"> 依赖于 硬币的</span><code data-lake-id="u1e021f04" id="u1e021f04"><span data-lake-id="u59190a37" id="u59190a37">名额</span></code><span data-lake-id="u09c23c88" id="u09c23c88">，算出有多少子问题比较困难，所以我们就按照</span><code data-lake-id="uc458d77c" id="uc458d77c"><span data-lake-id="u986f020d" id="u986f020d">最坏情况</span></code><span data-lake-id="uf8944f20" id="uf8944f20">来估计复杂度，</span><code data-lake-id="ue30f5d41" id="ue30f5d41"><span data-lake-id="u25c154d3" id="u25c154d3">最坏情况</span></code><span data-lake-id="ua815d156" id="ua815d156">是</span><code data-lake-id="uf5f745a4" id="uf5f745a4"><span data-lake-id="uc030c53f" id="uc030c53f">全用面额为 1 的硬币</span></code><span data-lake-id="ua531640d" id="ua531640d"> </span></li></ul><ul list="ub932b697" data-lake-indent="1"><li fid="u31f76014" data-lake-id="uc282c592" id="uc282c592"><span data-lake-id="uae306458" id="uae306458">类比 </span><code data-lake-id="u3be3d34c" id="u3be3d34c"><span data-lake-id="u14a88527" id="u14a88527">fib 数列</span></code><span data-lake-id="u35a37f79" id="u35a37f79"> ，如何</span><code data-lake-id="uf234dda7" id="uf234dda7"><span data-lake-id="uef45255c" id="uef45255c">剪枝</span></code><span data-lake-id="udb06dc90" id="udb06dc90"> 就比较方便， 即 </span><code data-lake-id="u4229cbe4" id="u4229cbe4"><span data-lake-id="uae0c44c3" id="uae0c44c3">fib(n-1) + fib(n-2)</span></code><span data-lake-id="u217c28f3" id="u217c28f3"> ,  可参考[[999.AL.斐波那契数列]] 里的</span><code data-lake-id="u77e88a7b" id="u77e88a7b"><span data-lake-id="uad8d398d" id="uad8d398d">递归树</span></code></li></ul><ul list="ub932b697" start="2"><li fid="u0a2ce8e0" data-lake-id="ua9bf763b" id="ua9bf763b"><span data-lake-id="ubf23c42d" id="ubf23c42d">假设目标金额为 </span><code data-lake-id="u4080e5a0" id="u4080e5a0"><span data-lake-id="u89d61288" id="u89d61288">n</span></code><span data-lake-id="ue6926abd" id="ue6926abd">，给定的硬币个数为 </span><code data-lake-id="udecd6d03" id="udecd6d03"><span data-lake-id="u3b87c3c8" id="u3b87c3c8">k</span></code><span data-lake-id="uf7255f3e" id="uf7255f3e">，那么</span><code data-lake-id="ue54da077" id="ue54da077"><span data-lake-id="u632a0fd8" id="u632a0fd8">递归树</span></code><span data-lake-id="u712d02cc" id="u712d02cc">最坏情况下高度为 </span><code data-lake-id="uf4653cef" id="uf4653cef"><span data-lake-id="u22e78c24" id="u22e78c24">n</span></code><span data-lake-id="ue0e6f967" id="ue0e6f967">（</span><code data-lake-id="u794e1059" id="u794e1059"><span data-lake-id="u047188a3" id="u047188a3">全用面额为 1 的硬币</span></code><span data-lake-id="uce6bd69c" id="uce6bd69c">） 即 </span><code data-lake-id="ue998fbba" id="ue998fbba"><span data-lake-id="uf27a7d41" id="uf27a7d41">最终递归完成需要到树的最底部</span></code><span data-lake-id="ucb20f9df" id="ucb20f9df">， 然后再假设这是一 </span><code data-lake-id="u78b9050e" id="u78b9050e"><span data-lake-id="ufa2c0be4" id="ufa2c0be4">棵满k叉树</span></code><span data-lake-id="ucd37adfc" id="ucd37adfc"> ，则节点的总数在 </span><code data-lake-id="u29c86e48" id="u29c86e48"><span data-lake-id="ue7e5cbdc" id="ue7e5cbdc">k^n</span></code><span data-lake-id="u744693fe" id="u744693fe"> 这个数量级。</span></li><li fid="u0a2ce8e0" data-lake-id="u6221826d" id="u6221826d"><span data-lake-id="u1ef9159b" id="u1ef9159b">接下来看</span><code data-lake-id="uf0b3925e" id="uf0b3925e"><span data-lake-id="u6d477382" id="u6d477382">每个子问题的复杂度</span></code><span data-lake-id="u7fa76b0b" id="u7fa76b0b">，由于每次递归包含一个 for 循，复杂度为 </span><code data-lake-id="u65339671" id="u65339671"><span data-lake-id="ud78a1e28" id="ud78a1e28">O(k)</span></code><span data-lake-id="u6c4deff2" id="u6c4deff2">，相乘得到总时间复杂度为 </span><code data-lake-id="u30560563" id="u30560563"><span data-lake-id="ued616cfb" id="ued616cfb">O(k*k^n) ===&gt; O(k^n)</span></code></li></ul><p data-lake-id="u55f293c9" id="u55f293c9"><br></p><blockquote data-lake-id="u3380fda3" id="u3380fda3"><p data-lake-id="uc63d2c70" id="uc63d2c70"><span data-lake-id="u0a02ca82" id="u0a02ca82">[!info]<br /></span><span data-lake-id="u586dae79" id="u586dae79">简单总结就是： 复杂度等于 </span><code data-lake-id="u2d933791" id="u2d933791"><span data-lake-id="u13608680" id="u13608680">子问题个数 * 每个子问题的复杂度</span></code><span data-lake-id="ude9c5522" id="ude9c5522"><br /></span><span data-lake-id="u03480b07" id="u03480b07">所以，因为这个问题的</span><code data-lake-id="ue6c690b8" id="ue6c690b8"><span data-lake-id="u5ff7a9d2" id="u5ff7a9d2">子问题个数</span></code><span data-lake-id="u7cf9b146" id="u7cf9b146">就是</span><code data-lake-id="u419ecfbd" id="u419ecfbd"><span data-lake-id="ubb629915" id="ubb629915">指数级别</span></code><span data-lake-id="u1410ad79" id="u1410ad79">，所以肯定是指数级别的复杂度</span></p></blockquote><p data-lake-id="u710048c2" id="u710048c2"><br></p><blockquote data-lake-id="u408c2754" id="u408c2754"><p data-lake-id="u0567839c" id="u0567839c"><span data-lake-id="u55b8f0f6" id="u55b8f0f6">[!tip]<br /></span><span data-lake-id="u0f5a4c46" id="u0f5a4c46">注意以上代码模板的选 </span><code data-lake-id="ucd919911" id="ucd919911"><span data-lake-id="u0a79aba6" id="u0a79aba6">状态</span></code><span data-lake-id="uf993aef0" id="uf993aef0"> 与 </span><code data-lake-id="u1f39ac6c" id="u1f39ac6c"><span data-lake-id="ub2c75224" id="ub2c75224">选择</span></code></p></blockquote><p data-lake-id="u5bd86b25" id="u5bd86b25"><br></p><h2 data-lake-id="7b1a82a3" id="7b1a82a3"><span data-lake-id="u1c5e741d" id="u1c5e741d">自顶向下的</span><code data-lake-id="ua0f210c7" id="ua0f210c7"><span data-lake-id="u22b8e7f0" id="u22b8e7f0">递归</span></code><span data-lake-id="u471cc493" id="u471cc493">解法 - 带备忘录</span></h2><p data-lake-id="udd4aada2" id="udd4aada2"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%5Cnfunction%20fn(coins%2C%20amount)%20%7B%5Cn%20%20%20%20const%20memo%20%3D%20new%20Array(amount%2B1).fill(-999)%3B%5Cn%20%20%20%20function%20dp(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20base%20case%5Cn%20%20%20%20%20%20%20%20if%20(amount%20%3D%3D%3D%200)%20return%200%3B%5Cn%20%20%20%20%20%20%20%20if%20(amount%20%3C%200)%20return%20-1%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E5%B7%B2%E7%BB%8F%E8%A2%AB%E5%AD%98%E5%82%A8%E8%BF%87%E4%BA%86%EF%BC%8C%E5%B0%B1%E6%94%BE%E5%9C%A8%E8%BF%99%E5%84%BF%5Cn%20%20%20%20%20%20%20%20if%20(memo%5Bamount%5D%20!%3D%3D%20-999)%20return%20memo%5Bamount%5D%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3Ares%E4%B8%BA%E6%9C%80%E7%BB%88%E8%BF%94%E5%9B%9E%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E5%8D%B3%E6%9C%80%E5%B0%91%E5%87%A0%E6%9E%9A%E7%A1%AC%E5%B8%81%5Cn%20%20%20%20%20%20%20%20let%20res%20%3D%20Infinity%3B%5Cn%20%20%20%20%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20subProblem%20%3D%20dp(coins%2C%20amount%20-%20coin)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(subProblem%20%3D%3D%3D%20-1)%20continue%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20res%20%3D%20Math.min(res%2C%20subProblem%20%2B%201)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20memo%5Bamount%5D%20%3D%20(res%20%3D%3D%3D%20Infinity%20%3F%20-1%20%3A%20res)%3B%5Cn%20%20%20%20%20%20%20%20return%20memo%5Bamount%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp(coins%2C%20amount)%3B%5Cn%7D%5Cn%5Cnconsole.log(fn(%5B1%2C%202%2C%205%5D%2C%2010))%3B%20%20%2F%2F%202%5Cnconsole.log(fn(%5B1%2C%2024%2C%20100%5D%2C%20200))%3B%20%20%2F%2F%20%202%5Cnconsole.log(fn(%5B5%2C%2010%2C%2020%2C%2050%5D%2C%20201))%3B%20%2F%2F%20-1%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22acc7a31d%22%7D"></card><p data-lake-id="u6d7690d8" id="u6d7690d8"><br></p><p data-lake-id="ud06ec1c5" id="ud06ec1c5"><span data-lake-id="u94fb7f30" id="u94fb7f30">很显然「备忘录」大大减小了</span><code data-lake-id="u78f20d27" id="u78f20d27"><span data-lake-id="u2a71cd83" id="u2a71cd83">子问题数目</span></code><span data-lake-id="u1c6b2b5d" id="u1c6b2b5d">，完全消除了</span><code data-lake-id="u5bffea55" id="u5bffea55"><span data-lake-id="u8cc7b814" id="u8cc7b814">子问题的冗余</span></code><span data-lake-id="u61781cf5" id="u61781cf5">，所以子问题总数不会超过金额数 </span><code data-lake-id="uf4727afd" id="uf4727afd"><span data-lake-id="ud4c69dc9" id="ud4c69dc9">n</span></code><span data-lake-id="uf1ffeed0" id="uf1ffeed0">，即子问题数目为 </span><code data-lake-id="uba01a4f9" id="uba01a4f9"><span data-lake-id="u0cc33baa" id="u0cc33baa">O(n)</span></code><span data-lake-id="u3078e369" id="u3078e369">。处理一个子问题的时间不变，仍是 </span><code data-lake-id="uf8adab28" id="uf8adab28"><span data-lake-id="ube384dd2" id="ube384dd2">O(k)</span></code><span data-lake-id="ud1043e10" id="ud1043e10">，所以总的时间复杂度是 </span><code data-lake-id="ud206eb0b" id="ud206eb0b"><span data-lake-id="uc5a596ee" id="uc5a596ee">O(kn)</span></code></p><p data-lake-id="ub5e0b6c9" id="ub5e0b6c9"><br></p><h2 data-lake-id="2735cd20" id="2735cd20"><span data-lake-id="ucbf90ea2" id="ucbf90ea2">自底向上的dp 数组的迭代解法 -  dp table</span></h2><p data-lake-id="u5c237592" id="u5c237592"><br></p><ul list="u0ff18464"><li fid="u54ae0c1b" data-lake-id="u2abafe49" id="u2abafe49"><code data-lake-id="u1ca7b48f" id="u1ca7b48f"><span data-lake-id="u4d850484" id="u4d850484">dp 函数</span></code><span data-lake-id="u3edaaa26" id="u3edaaa26"> 体现在</span><code data-lake-id="u612d4476" id="u612d4476"><span data-lake-id="u17e95293" id="u17e95293">函数参数</span></code></li><li fid="u54ae0c1b" data-lake-id="u82681233" id="u82681233"><code data-lake-id="ub4899c15" id="ub4899c15"><span data-lake-id="u990af025" id="u990af025">dp 数组</span></code><span data-lake-id="u7473c755" id="u7473c755"> 体现在</span><code data-lake-id="u05596d63" id="u05596d63"><span data-lake-id="uc05a6a5d" id="uc05a6a5d">数组索引</span></code></li></ul><p data-lake-id="u734d8c16" id="u734d8c16"><br></p><p data-lake-id="u2faf8352" id="u2faf8352"><span data-lake-id="u26503e5d" id="u26503e5d">dp 数组的定义：当目标金额为 </span><code data-lake-id="ub6692db2" id="ub6692db2"><span data-lake-id="u1d8fe8e0" id="u1d8fe8e0">i</span></code><span data-lake-id="uaae7df98" id="uaae7df98"> 时，至少需要 </span><code data-lake-id="u33e20c57" id="u33e20c57"><span data-lake-id="u0bdf99bd" id="u0bdf99bd">dp[i]</span></code><span data-lake-id="u027383af" id="u027383af"> 枚硬币凑出</span></p><p data-lake-id="ube8b2a25" id="ube8b2a25"><br></p><p data-lake-id="uda1d4939" id="uda1d4939"><span data-lake-id="ue464124b" id="ue464124b">先看看模板：</span></p><p data-lake-id="u04acae66" id="u04acae66"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%23%20%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E8%BF%AD%E4%BB%A3%E7%9A%84%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%5Cn%23%20%E5%88%9D%E5%A7%8B%E5%8C%96%20base%20case%5Cndp%5B0%5D%5B0%5D%5B...%5D%20%3D%20base%20case%5Cn%23%20%E8%BF%9B%E8%A1%8C%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%5Cnfor%20%E7%8A%B6%E6%80%811%20in%20%E7%8A%B6%E6%80%811%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%96%E5%80%BC%EF%BC%9A%5Cn%20%20%20%20for%20%E7%8A%B6%E6%80%812%20in%20%E7%8A%B6%E6%80%812%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%96%E5%80%BC%EF%BC%9A%5Cn%20%20%20%20%20%20%20%20for%20...%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dp%5B%E7%8A%B6%E6%80%811%5D%5B%E7%8A%B6%E6%80%812%5D%5B...%5D%20%3D%20%E6%B1%82%E6%9C%80%E5%80%BC(%E9%80%89%E6%8B%A91%EF%BC%8C%E9%80%89%E6%8B%A92...)%5Cn%5Cn%2F%2F%20%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%5Cnfunction%20fn(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E5%88%9D%E5%A7%8B%E5%8C%96%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20dp%20%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%9A%E5%BD%93%E7%9B%AE%E6%A0%87%E9%87%91%E9%A2%9D%E4%B8%BA%20%60i%60%20%E6%97%B6%EF%BC%8C%E8%87%B3%E5%B0%91%E9%9C%80%E8%A6%81%20%60dp%5Bi%5D%60%20%E6%9E%9A%E7%A1%AC%E5%B8%81%E5%87%91%E5%87%BA%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%20amount%20%2B%201%20%E5%B0%B1%E7%9B%B8%E5%BD%93%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E6%AD%A3%E6%97%A0%E7%A9%B7%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20%E5%9B%A0%E4%B8%BA%E6%9C%80%E5%A4%9Adp%5Bamount%5D%20%E6%9C%80%E5%A4%A7%E5%8F%AA%E8%83%BD%E7%AD%89%E4%BA%8E%20amount%20%2C%E5%8D%B3%E9%83%BD%E6%89%BE%E9%9B%B6%201%20%E5%9D%97%E9%92%B1%E7%9A%84%5Cn%20%20%20%20const%20dp%20%3D%20new%20Array(amount%20%2B%201).fill(amount%20%2B%201)%3B%5Cn%5Cn%5Ct%2F%2F%20%3A%3A%3A%3A%E7%AC%AC%E4%BA%8C%E6%AD%A5%20base%20case%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E7%AC%AC%E4%B8%89%E6%AD%A5%20%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF%5Cn%20%20%20%20%2F%2F%20%E5%A4%96%E5%B1%82%20for%20%E5%BE%AA%E7%8E%AF%E5%9C%A8%E9%81%8D%E5%8E%86%E6%89%80%E6%9C%89%E7%8A%B6%E6%80%81%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%96%E5%80%BC%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20dp.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E5%86%85%E5%B1%82%20for%20%E5%BE%AA%E7%8E%AF%E5%9C%A8%E6%B1%82%E6%89%80%E6%9C%89%E9%80%89%E6%8B%A9%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%5Cn%20%20%20%20%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%E5%AD%90%E9%97%AE%E9%A2%98%E6%97%A0%E8%A7%A3%EF%BC%8C%E8%B7%B3%E8%BF%87%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(i%20-%20coin%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20Math.min(dp%5Bi%5D%2C%201%20%2B%20dp%5Bi%20-%20coin%5D)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20return%20(dp%5Bamount%5D%20%3D%3D%3D%20amount%20%2B%201)%20%3F%20-1%20%3A%20dp%5Bamount%5D%3B%5Cn%7D%5Cn%5Cnconsole.log(fn(%5B1%2C%202%2C%205%5D%2C%2010))%3B%20%20%2F%2F%202%5Cnconsole.log(fn(%5B1%2C%2024%2C%20100%5D%2C%20200))%3B%20%20%2F%2F%20%202%5Cnconsole.log(fn(%5B5%2C%2010%2C%2020%2C%2050%5D%2C%20201))%3B%20%2F%2F%20-1%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22c2c8452d%22%7D"></card><p data-lake-id="u3e6b98eb" id="u3e6b98eb"><br></p><ul list="ud736fd87"><li fid="ua4a4b2d3" data-lake-id="ud648d3c7" id="ud648d3c7"><span data-lake-id="udd5450cf" id="udd5450cf">时间复杂度看</span><code data-lake-id="u9fc47e37" id="u9fc47e37"><span data-lake-id="u82d6fc32" id="u82d6fc32">几层遍历</span></code><span data-lake-id="u6bf538ca" id="u6bf538ca">， 所以是  </span><code data-lake-id="u386b4230" id="u386b4230"><span data-lake-id="u94d5d25f" id="u94d5d25f">O(kn)</span></code><span data-lake-id="u5ca31e31" id="u5ca31e31">（假设 </span><code data-lake-id="u709041a1" id="u709041a1"><span data-lake-id="uf385be70" id="uf385be70">k</span></code><span data-lake-id="ub0aa3222" id="ub0aa3222"> 为 硬币数，</span><code data-lake-id="uf290dabf" id="uf290dabf"><span data-lake-id="u50402aad" id="u50402aad">n</span></code><span data-lake-id="uc5f85d7e" id="uc5f85d7e"> 为找零多少钱）</span></li><li fid="ua4a4b2d3" data-lake-id="u7a5d5dd6" id="u7a5d5dd6"><span data-lake-id="u17b1e09b" id="u17b1e09b">空间复杂度 </span><code data-lake-id="u0cd9881a" id="u0cd9881a"><span data-lake-id="u3ef49f18" id="u3ef49f18">O(n)</span></code></li></ul><p data-lake-id="ub00ff78a" id="ub00ff78a"><br></p><h2 data-lake-id="f8aaec24" id="f8aaec24"><span data-lake-id="ud589ef55" id="ud589ef55">最后，总结几个关键点</span></h2><p data-lake-id="u9b464421" id="u9b464421"><br></p><ul list="u97949667"><li fid="u900061f7" data-lake-id="u6cee1123" id="u6cee1123"><code data-lake-id="ue33c5c42" id="ue33c5c42"><span data-lake-id="u12bf0e18" id="u12bf0e18">dp 递归函数 - 备忘录</span></code><span data-lake-id="u430d915e" id="u430d915e">、</span><code data-lake-id="u4eef133d" id="u4eef133d"><span data-lake-id="u7cfb6f42" id="u7cfb6f42">dp 数组迭代（DP table）</span></code><span data-lake-id="uc816f349" id="uc816f349"> , 在追求“</span><code data-lake-id="ucd4dc6f6" id="ucd4dc6f6"><span data-lake-id="ude6efa7b" id="ude6efa7b">如何聪明地穷举</span></code><span data-lake-id="u666d61fc" id="u666d61fc">”。</span><code data-lake-id="u71a754ac" id="u71a754ac"><span data-lake-id="u291e597c" id="u291e597c">用空间换时间</span></code><span data-lake-id="u881138c7" id="u881138c7">的思路，是降低时间复杂度的不二法门</span></li><li fid="u900061f7" data-lake-id="uc68a3973" id="uc68a3973"><span data-lake-id="u0b516aa6" id="u0b516aa6">配合  [[999.AL.斐波那契数列]]  多理解，多动手</span></li><li fid="u900061f7" data-lake-id="u6da30a7d" id="u6da30a7d"><code data-lake-id="uce721340" id="uce721340"><span data-lake-id="uc9651bff" id="uc9651bff">自顶向下</span></code><span data-lake-id="u2f3ec898" id="u2f3ec898">和</span><code data-lake-id="u57286433" id="u57286433"><span data-lake-id="u0b7ccfab" id="u0b7ccfab">自底向上</span></code><span data-lake-id="uc9d1655a" id="uc9d1655a"> </span></li></ul><ul list="u97949667" data-lake-indent="1"><li fid="u3560023b" data-lake-id="u3d33e8dd" id="u3d33e8dd"><code data-lake-id="u2ff0c748" id="u2ff0c748"><span data-lake-id="ufca1e751" id="ufca1e751">自顶向下</span></code><span data-lake-id="u2bd0a431" id="u2bd0a431"> ，本质是递归，即&quot;顶&quot;问题，拆解为&quot;子问题&quot; 去解决，复杂度依赖于 </span><code data-lake-id="ua8667fe3" id="ua8667fe3"><span data-lake-id="u9ab41dea" id="u9ab41dea">子问题个数</span></code></li><li fid="u3560023b" data-lake-id="u4baa211c" id="u4baa211c"><code data-lake-id="u9b09b6a2" id="u9b09b6a2"><span data-lake-id="ue8b9b7fb" id="ue8b9b7fb">自底向上</span></code><span data-lake-id="u5c4044c6" id="u5c4044c6"> ，本质是数组迭代，复杂度依赖于</span><code data-lake-id="u4fd0a592" id="u4fd0a592"><span data-lake-id="u171ba1e8" id="u171ba1e8">几重迭代</span></code></li></ul><ul list="u97949667" start="4"><li fid="u900061f7" data-lake-id="u2cc99ea9" id="u2cc99ea9"><span data-lake-id="u06f5f4e3" id="u06f5f4e3">动态规划问题，核心的是写出</span><code data-lake-id="ud1d77eb3" id="ud1d77eb3"><span data-lake-id="uc99cb1fd" id="uc99cb1fd">暴力解法</span></code><span data-lake-id="u58cb986e" id="u58cb986e"> ，然后才是 </span><code data-lake-id="u7fd7d6f2" id="u7fd7d6f2"><span data-lake-id="uab0c83c7" id="uab0c83c7">空间换时间</span></code><span data-lake-id="u3603618c" id="u3603618c">的优化思路</span></li></ul><p data-lake-id="ud6ba27e7" id="ud6ba27e7"><br></p><h2 data-lake-id="d17a0f0b" id="d17a0f0b"><span data-lake-id="u05651341" id="u05651341">参考</span></h2><p data-lake-id="u4ef5a4f3" id="u4ef5a4f3"><br></p><ul list="u844b620e"><li fid="u96338c8b" data-lake-id="u4ffdd94f" id="u4ffdd94f"><a href="https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/" target="_blank" data-lake-id="u4e3bba2b" id="u4e3bba2b"><span data-lake-id="u8f341c74" id="u8f341c74">https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/</span></a></li></ul>`,body_draft_lake:`<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="ef74365d" id="ef74365d"><span data-lake-id="ufd2e0e7a" id="ufd2e0e7a">最小硬币数</span></h1><p data-lake-id="uc341bb76" id="uc341bb76"><br></p><blockquote data-lake-id="ucc87cfdc" id="ucc87cfdc"><p data-lake-id="ube561005" id="ube561005"><a href="https://leetcode.cn/problems/coin-change/" target="_blank" data-lake-id="u7c071310" id="u7c071310"><span data-lake-id="u1c73433f" id="u1c73433f">https://leetcode.cn/problems/coin-change/</span></a></p></blockquote><p data-lake-id="uc6912f1c" id="uc6912f1c"><br></p><p data-lake-id="uda05eb64" id="uda05eb64"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181621816.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A895%2C%22originHeight%22%3A822%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22zpE7D%22%7D"></card></p><p data-lake-id="uc2b14ca3" id="uc2b14ca3"><br></p><h2 data-lake-id="6bf84746" id="6bf84746"><span data-lake-id="udce0775a" id="udce0775a">动态规划的要点</span></h2><p data-lake-id="ufaf4f6bd" id="ufaf4f6bd"><br></p><p data-lake-id="u4b18bfa3" id="u4b18bfa3"><span data-lake-id="u9a1e0d4a" id="u9a1e0d4a">这是一个经典的动态规划问题，因为它具有</span><code data-lake-id="uca64b1cb" id="uca64b1cb"><span data-lake-id="u410a0a09" id="u410a0a09">「最优子结构」</span></code><span data-lake-id="u42e81142" id="u42e81142">的。即子问题间 </span><code data-lake-id="u4ac51a33" id="u4ac51a33"><span data-lake-id="ud27ca03c" id="ud27ca03c">互相独立</span></code></p><p data-lake-id="uc0946f8d" id="uc0946f8d"><br></p><ul list="u2dffe98f"><li fid="ue16b216e" data-lake-id="ua2c9e0d0" id="ua2c9e0d0"><span data-lake-id="ud131742d" id="ud131742d">动态规划问题的一般形式就是</span><code data-lake-id="u22c9bda1" id="u22c9bda1"><span data-lake-id="u0cc68982" id="u0cc68982">求最值</span></code></li><li fid="ue16b216e" data-lake-id="u66ac9a36" id="u66ac9a36"><span data-lake-id="u93d647bb" id="u93d647bb">求解动态规划的核心问题是</span><code data-lake-id="u047f9a56" id="u047f9a56"><span data-lake-id="u35526a6a" id="u35526a6a">穷举</span></code></li><li fid="ue16b216e" data-lake-id="u3d3d2264" id="u3d3d2264"><span data-lake-id="uc4dbad32" id="uc4dbad32">具备</span><code data-lake-id="u9b6a7867" id="u9b6a7867"><span data-lake-id="ua42595db" id="ua42595db">「最优子结构」</span></code><span data-lake-id="uca0530c0" id="uca0530c0">，即是否能够通过</span><code data-lake-id="u4a3361cf" id="u4a3361cf"><span data-lake-id="uf60ba0ca" id="uf60ba0ca">子问题的最值</span></code><span data-lake-id="ucdfc2ec1" id="ucdfc2ec1">得到原问题的最值</span></li><li fid="ue16b216e" data-lake-id="uf7da022d" id="uf7da022d"><span data-lake-id="u96a60dfc" id="u96a60dfc">是否 存在</span><code data-lake-id="u4b8a7049" id="u4b8a7049"><span data-lake-id="u2f5665bf" id="u2f5665bf">「重叠子问题」</span></code><span data-lake-id="u6b981ad0" id="u6b981ad0">，如果存在需要 使用</span><code data-lake-id="u0cd7bf83" id="u0cd7bf83"><span data-lake-id="uea1fde9d" id="uea1fde9d">「备忘录」</span></code><span data-lake-id="ue11aeaac" id="ue11aeaac">或者</span><code data-lake-id="u9d01b3e1" id="u9d01b3e1"><span data-lake-id="u1e6515a1" id="u1e6515a1">「DP table」</span></code><span data-lake-id="ua9af5cb7" id="ua9af5cb7">来优化穷举过程</span></li><li fid="ue16b216e" data-lake-id="u5733e402" id="u5733e402"><code data-lake-id="ub1903651" id="ub1903651"><span data-lake-id="u080eb555" id="u080eb555">重叠子问题</span></code><span data-lake-id="uff92ed5d" id="uff92ed5d">、</span><code data-lake-id="ufbff6857" id="ufbff6857"><span data-lake-id="u8fb1ac0e" id="u8fb1ac0e">最优子结构</span></code><span data-lake-id="u6a95c272" id="u6a95c272">、</span><code data-lake-id="ud945c719" id="ud945c719"><span data-lake-id="uee4880d8" id="uee4880d8">状态转移方程</span></code><span data-lake-id="u4df581de" id="u4df581de">就是 </span><strong><span data-lake-id="ub15edf1b" id="ub15edf1b">动态规划三要素</span></strong></li></ul><p data-lake-id="ud26ca6e0" id="ud26ca6e0"><br></p><h2 data-lake-id="ddc00f82" id="ddc00f82"><span data-lake-id="u075f56bd" id="u075f56bd">如何列出 </span><code data-lake-id="u361c3d42" id="u361c3d42"><span data-lake-id="uc8e080b4" id="uc8e080b4">状态转移方程</span></code></h2><p data-lake-id="ud2b58075" id="ud2b58075"><br></p><p data-lake-id="u7a6b67a0" id="u7a6b67a0"><span data-lake-id="uaacb823f" id="uaacb823f">dp 函数：</span><code data-lake-id="u70bfaf3a" id="u70bfaf3a"><span data-lake-id="u1ce8b7ad" id="u1ce8b7ad">dp(n)</span></code><span data-lake-id="u26c17abd" id="u26c17abd"> 表示，输入一个目标金额 </span><code data-lake-id="u65b6c4d8" id="u65b6c4d8"><span data-lake-id="ud2d29a2a" id="ud2d29a2a">n</span></code><span data-lake-id="uf311b26b" id="uf311b26b">，返回凑出目标金额 </span><code data-lake-id="u2fe15597" id="u2fe15597"><span data-lake-id="uaed7b907" id="uaed7b907">n</span></code><span data-lake-id="uc92a9014" id="uc92a9014"> 所需的最少硬币数量</span></p><p data-lake-id="ud32861a8" id="ud32861a8"><br></p><p data-lake-id="ub5438af6" id="ub5438af6"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303170806731.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A682%2C%22originHeight%22%3A127%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22c2JT8%22%7D"></card></p><p data-lake-id="u1033a389" id="u1033a389"><br></p><ul list="ub288e829"><li fid="ub94e2246" data-lake-id="ucf122ee4" id="ucf122ee4"><span data-lake-id="u28bd66b5" id="u28bd66b5">第一步、确定 </span><code data-lake-id="u8f325d1b" id="u8f325d1b"><span data-lake-id="u37382e18" id="u37382e18">base case</span></code><span data-lake-id="ucf9a91d9" id="ucf9a91d9">  , 比如 需要 找零  </span><code data-lake-id="u53e03b56" id="u53e03b56"><span data-lake-id="ub7e1aed2" id="ub7e1aed2">0元</span></code><span data-lake-id="u06e24b23" id="u06e24b23"> ，那么最小的硬币数就为 </span><code data-lake-id="uc24b074a" id="uc24b074a"><span data-lake-id="uf55ce670" id="uf55ce670">0</span></code></li><li fid="ub94e2246" data-lake-id="u8d77b759" id="u8d77b759"><span data-lake-id="u359f7beb" id="u359f7beb">第二步、确定</span><code data-lake-id="ua63ee000" id="ua63ee000"><span data-lake-id="ue18185c3" id="ue18185c3">状态</span></code><span data-lake-id="u5e0bc732" id="u5e0bc732">， 即</span><code data-lake-id="u735c8980" id="u735c8980"><span data-lake-id="u52158aaa" id="u52158aaa">原问题和子问题</span></code><span data-lake-id="u8fab7c01" id="u8fab7c01">中会变化的</span><code data-lake-id="u86c9f0a1" id="u86c9f0a1"><span data-lake-id="ua082e231" id="ua082e231">变量</span></code><span data-lake-id="uf02453c1" id="uf02453c1">  ， 所以，该问题的状态 为 \`找零多少钱</span></li><li fid="ub94e2246" data-lake-id="uca0e988e" id="uca0e988e"><span data-lake-id="ufb091888" id="ufb091888">第三步、确定</span><code data-lake-id="u99a7f391" id="u99a7f391"><span data-lake-id="u9e29fe5c" id="u9e29fe5c">选择</span></code><span data-lake-id="uab19b75c" id="uab19b75c">  ，即 </span><strong><span data-lake-id="u505c990a" id="u505c990a">导致 状态 变化的行为</span></strong><span data-lake-id="uf65d7d4e" id="uf65d7d4e"> ，即 </span><code data-lake-id="u6ad755e0" id="u6ad755e0"><span data-lake-id="u6df093bf" id="u6df093bf">需要找零多少钱</span></code><span data-lake-id="u9202d956" id="u9202d956"> 会变化呢？因为每次选择了一枚硬币，比如会导致 </span><code data-lake-id="u34558860" id="u34558860"><span data-lake-id="u55d7f41e" id="u55d7f41e">状态</span></code><span data-lake-id="u94aa7003" id="u94aa7003">的变化</span></li><li fid="ub94e2246" data-lake-id="u9bb86338" id="u9bb86338"><span data-lake-id="u3a35c4d1" id="u3a35c4d1">第四步、明确 </span><code data-lake-id="u726876cf" id="u726876cf"><span data-lake-id="ubd43c9b6" id="ubd43c9b6">dp函数</span></code><span data-lake-id="u53be6fea" id="u53be6fea">  或者 </span><code data-lake-id="uf21c9a50" id="uf21c9a50"><span data-lake-id="ua226b9f0" id="ua226b9f0">dp数组</span></code><span data-lake-id="u15b26c49" id="u15b26c49"> </span></li></ul><ul list="ub288e829" data-lake-indent="1"><li fid="ud15f40f4" data-lake-id="u8325ce31" id="u8325ce31"><strong><span data-lake-id="u7079ce84" id="u7079ce84">dp函数</span></strong><span data-lake-id="ub4b6d610" id="ub4b6d610">，自顶向下</span><code data-lake-id="u7174accd" id="u7174accd"><span data-lake-id="u2c142bba" id="u2c142bba">递归</span></code><span data-lake-id="u05267739" id="u05267739">的动态规划 解法 ，看下面模板</span></li><li fid="ud15f40f4" data-lake-id="u878b4ecf" id="u878b4ecf"><code data-lake-id="u6ea22a75" id="u6ea22a75"><span data-lake-id="u1cd05010" id="u1cd05010">dp数组</span></code><span data-lake-id="uabb57ec8" id="uabb57ec8"> ， 自底向上</span><code data-lake-id="ud27f3deb" id="ud27f3deb"><span data-lake-id="uc895f2b5" id="uc895f2b5">迭代</span></code><span data-lake-id="u888552ec" id="u888552ec">的动态规划，看下面模板</span></li></ul><p data-lake-id="uf07dcd11" id="uf07dcd11"><br></p><h2 data-lake-id="4782e08c" id="4782e08c"><span data-lake-id="u50491131" id="u50491131">自顶向下的</span><code data-lake-id="ue9787229" id="ue9787229"><span data-lake-id="uf9cfa325" id="uf9cfa325">递归</span></code><span data-lake-id="u64312da4" id="u64312da4">解法</span></h2><p data-lake-id="u03b04f3e" id="u03b04f3e"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E6%A8%A1%E6%9D%BF%5Cnfunction%20dp('%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9'%2C%20'%E7%8A%B6%E6%80%81%201'%2C'%E7%8A%B6%E6%80%81%202%20...')%7B%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3Abase%20case%5Cn%20%20%20%20if('%E7%8A%B6%E6%80%81'%20%3D%3D%3D%201)%20return%20'xxx'%5Cn%20%20%20%20if('%E7%8A%B6%E6%80%81'%20%3D%3D%3D%201)%20return%20'xxx'%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E9%9C%80%E8%A6%81%E8%BF%94%E5%9B%9E%E7%9A%84%E6%9C%80%E5%80%BC%5Cn%20%20%20%20let%20res%20%3D%20''%5Cn%20%20%20%20for%20(let%20'%E9%80%89%E6%8B%A9'%20of%20'%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9')%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%23%20%E6%AD%A4%E6%97%B6%E7%9A%84%E7%8A%B6%E6%80%81%E5%B7%B2%E7%BB%8F%E5%9B%A0%E4%B8%BA%E5%81%9A%E4%BA%86%E9%80%89%E6%8B%A9%E8%80%8C%E6%94%B9%E5%8F%98%5Cn%20%20%20%20%20%20%20%20res%20%3D%20%20dp('%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E9%80%89%E6%8B%A9'%2C%20'%E7%8A%B6%E6%80%81%201'%2C'%E7%8A%B6%E6%80%81%202%20...')%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%3B%5Cn%7D%5Cn%5Cn%2F%2F%20%E5%AF%B9%E5%BA%94%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BB%A3%E7%A0%81%20%5Cnfunction%20dp%20(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%2F%2F%20base%20case%5Cn%20%20%20%20if%20(amount%20%3D%3D%3D%200)%20%7B%5Cn%20%20%20%20%20%20%20%20return%200%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20if%20(amount%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%20%20return%20-1%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3Ares%E4%B8%BA%E6%9C%80%E7%BB%88%E8%BF%94%E5%9B%9E%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E5%8D%B3%E6%9C%80%E5%B0%91%E5%87%A0%E6%9E%9A%E7%A1%AC%E5%B8%81%5Cn%20%20%20%20let%20res%20%3D%20Infinity%3B%5Cn%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E5%AD%90%E9%97%AE%E9%A2%98%E7%9A%84%E7%BB%93%E6%9E%9C%5Cn%20%20%20%20%20%20%20%20let%20subProblem%20%3D%20dp(coins%2C%20amount%20-%20coin)%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%AD%90%E9%97%AE%E9%A2%98%E6%97%A0%E8%A7%A3%E5%88%99%E8%B7%B3%E8%BF%87%5Cn%20%20%20%20%20%20%20%20if%20(subProblem%20%3D%3D%3D%20-1)%20continue%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E8%83%BD%E5%88%B0%E8%BF%99%E5%84%BF%EF%BC%8C%E8%AF%B4%E6%98%8E%E8%83%BD%E5%A4%9F%E7%BB%A7%E7%BB%AD%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%E5%9C%A8%E5%AD%90%E9%97%AE%E9%A2%98%E4%B8%AD%E9%80%89%E6%8B%A9%E6%9C%80%E4%BC%98%E8%A7%A3%EF%BC%8C%E7%84%B6%E5%90%8E%E5%8A%A0%E4%B8%80%5Cn%20%20%20%20%20%20%20%20res%20%3D%20Math.min(res%2C%20subProblem%20%2B%201)%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20res%20%3D%3D%3D%20Infinity%20%3F%20-1%20%3A%20res%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%226b8258f5%22%7D"></card><p data-lake-id="u8e6cb626" id="u8e6cb626"><br></p><p data-lake-id="u4f2b48ab" id="u4f2b48ab"><span data-lake-id="uf8439e18" id="uf8439e18">分析一下时间复杂度：</span></p><p data-lake-id="uf785dce6" id="uf785dce6"><br></p><p data-lake-id="uf6871382" id="uf6871382"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181714402.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1280%2C%22originHeight%22%3A720%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22nv7Ez%22%7D"></card></p><p data-lake-id="ua27263ff" id="ua27263ff"><br></p><p data-lake-id="uedb0978d" id="uedb0978d"><span data-lake-id="uac689ccc" id="uac689ccc">下面看看算法复杂度：</span></p><p data-lake-id="u6fb142ed" id="u6fb142ed"><br></p><ul list="ub932b697"><li fid="u0a2ce8e0" data-lake-id="ufa7386ea" id="ufa7386ea"><code data-lake-id="u70f6d21c" id="u70f6d21c"><span data-lake-id="uf33b10c3" id="uf33b10c3">子问题</span></code><span data-lake-id="ua14a832a" id="ua14a832a">总数为 </span><code data-lake-id="uc4f9368d" id="uc4f9368d"><span data-lake-id="uf4071e7d" id="uf4071e7d">递归树的节点个数</span></code><span data-lake-id="ua084e6cf" id="ua084e6cf">，但是如何</span><code data-lake-id="u056fdefc" id="u056fdefc"><span data-lake-id="u813c7169" id="u813c7169">剪枝</span></code><span data-lake-id="u57c87ee3" id="u57c87ee3"> 依赖于 硬币的</span><code data-lake-id="u1e021f04" id="u1e021f04"><span data-lake-id="u59190a37" id="u59190a37">名额</span></code><span data-lake-id="u09c23c88" id="u09c23c88">，算出有多少子问题比较困难，所以我们就按照</span><code data-lake-id="uc458d77c" id="uc458d77c"><span data-lake-id="u986f020d" id="u986f020d">最坏情况</span></code><span data-lake-id="uf8944f20" id="uf8944f20">来估计复杂度，</span><code data-lake-id="ue30f5d41" id="ue30f5d41"><span data-lake-id="u25c154d3" id="u25c154d3">最坏情况</span></code><span data-lake-id="ua815d156" id="ua815d156">是</span><code data-lake-id="uf5f745a4" id="uf5f745a4"><span data-lake-id="uc030c53f" id="uc030c53f">全用面额为 1 的硬币</span></code><span data-lake-id="ua531640d" id="ua531640d"> </span></li></ul><ul list="ub932b697" data-lake-indent="1"><li fid="u31f76014" data-lake-id="uc282c592" id="uc282c592"><span data-lake-id="uae306458" id="uae306458">类比 </span><code data-lake-id="u3be3d34c" id="u3be3d34c"><span data-lake-id="u14a88527" id="u14a88527">fib 数列</span></code><span data-lake-id="u35a37f79" id="u35a37f79"> ，如何</span><code data-lake-id="uf234dda7" id="uf234dda7"><span data-lake-id="uef45255c" id="uef45255c">剪枝</span></code><span data-lake-id="udb06dc90" id="udb06dc90"> 就比较方便， 即 </span><code data-lake-id="u4229cbe4" id="u4229cbe4"><span data-lake-id="uae0c44c3" id="uae0c44c3">fib(n-1) + fib(n-2)</span></code><span data-lake-id="u217c28f3" id="u217c28f3"> ,  可参考[[999.AL.斐波那契数列]] 里的</span><code data-lake-id="u77e88a7b" id="u77e88a7b"><span data-lake-id="uad8d398d" id="uad8d398d">递归树</span></code></li></ul><ul list="ub932b697" start="2"><li fid="u0a2ce8e0" data-lake-id="ua9bf763b" id="ua9bf763b"><span data-lake-id="ubf23c42d" id="ubf23c42d">假设目标金额为 </span><code data-lake-id="u4080e5a0" id="u4080e5a0"><span data-lake-id="u89d61288" id="u89d61288">n</span></code><span data-lake-id="ue6926abd" id="ue6926abd">，给定的硬币个数为 </span><code data-lake-id="udecd6d03" id="udecd6d03"><span data-lake-id="u3b87c3c8" id="u3b87c3c8">k</span></code><span data-lake-id="uf7255f3e" id="uf7255f3e">，那么</span><code data-lake-id="ue54da077" id="ue54da077"><span data-lake-id="u632a0fd8" id="u632a0fd8">递归树</span></code><span data-lake-id="u712d02cc" id="u712d02cc">最坏情况下高度为 </span><code data-lake-id="uf4653cef" id="uf4653cef"><span data-lake-id="u22e78c24" id="u22e78c24">n</span></code><span data-lake-id="ue0e6f967" id="ue0e6f967">（</span><code data-lake-id="u794e1059" id="u794e1059"><span data-lake-id="u047188a3" id="u047188a3">全用面额为 1 的硬币</span></code><span data-lake-id="uce6bd69c" id="uce6bd69c">） 即 </span><code data-lake-id="ue998fbba" id="ue998fbba"><span data-lake-id="uf27a7d41" id="uf27a7d41">最终递归完成需要到树的最底部</span></code><span data-lake-id="ucb20f9df" id="ucb20f9df">， 然后再假设这是一 </span><code data-lake-id="u78b9050e" id="u78b9050e"><span data-lake-id="ufa2c0be4" id="ufa2c0be4">棵满k叉树</span></code><span data-lake-id="ucd37adfc" id="ucd37adfc"> ，则节点的总数在 </span><code data-lake-id="u29c86e48" id="u29c86e48"><span data-lake-id="ue7e5cbdc" id="ue7e5cbdc">k^n</span></code><span data-lake-id="u744693fe" id="u744693fe"> 这个数量级。</span></li><li fid="u0a2ce8e0" data-lake-id="u6221826d" id="u6221826d"><span data-lake-id="u1ef9159b" id="u1ef9159b">接下来看</span><code data-lake-id="uf0b3925e" id="uf0b3925e"><span data-lake-id="u6d477382" id="u6d477382">每个子问题的复杂度</span></code><span data-lake-id="u7fa76b0b" id="u7fa76b0b">，由于每次递归包含一个 for 循，复杂度为 </span><code data-lake-id="u65339671" id="u65339671"><span data-lake-id="ud78a1e28" id="ud78a1e28">O(k)</span></code><span data-lake-id="u6c4deff2" id="u6c4deff2">，相乘得到总时间复杂度为 </span><code data-lake-id="u30560563" id="u30560563"><span data-lake-id="ued616cfb" id="ued616cfb">O(k*k^n) ===&gt; O(k^n)</span></code></li></ul><p data-lake-id="u55f293c9" id="u55f293c9"><br></p><blockquote data-lake-id="u3380fda3" id="u3380fda3"><p data-lake-id="uc63d2c70" id="uc63d2c70"><span data-lake-id="u0a02ca82" id="u0a02ca82">[!info]<br /></span><span data-lake-id="u586dae79" id="u586dae79">简单总结就是： 复杂度等于 </span><code data-lake-id="u2d933791" id="u2d933791"><span data-lake-id="u13608680" id="u13608680">子问题个数 * 每个子问题的复杂度</span></code><span data-lake-id="ude9c5522" id="ude9c5522"><br /></span><span data-lake-id="u03480b07" id="u03480b07">所以，因为这个问题的</span><code data-lake-id="ue6c690b8" id="ue6c690b8"><span data-lake-id="u5ff7a9d2" id="u5ff7a9d2">子问题个数</span></code><span data-lake-id="u7cf9b146" id="u7cf9b146">就是</span><code data-lake-id="u419ecfbd" id="u419ecfbd"><span data-lake-id="ubb629915" id="ubb629915">指数级别</span></code><span data-lake-id="u1410ad79" id="u1410ad79">，所以肯定是指数级别的复杂度</span></p></blockquote><p data-lake-id="u710048c2" id="u710048c2"><br></p><blockquote data-lake-id="u408c2754" id="u408c2754"><p data-lake-id="u0567839c" id="u0567839c"><span data-lake-id="u55b8f0f6" id="u55b8f0f6">[!tip]<br /></span><span data-lake-id="u0f5a4c46" id="u0f5a4c46">注意以上代码模板的选 </span><code data-lake-id="ucd919911" id="ucd919911"><span data-lake-id="u0a79aba6" id="u0a79aba6">状态</span></code><span data-lake-id="uf993aef0" id="uf993aef0"> 与 </span><code data-lake-id="u1f39ac6c" id="u1f39ac6c"><span data-lake-id="ub2c75224" id="ub2c75224">选择</span></code></p></blockquote><p data-lake-id="u5bd86b25" id="u5bd86b25"><br></p><h2 data-lake-id="7b1a82a3" id="7b1a82a3"><span data-lake-id="u1c5e741d" id="u1c5e741d">自顶向下的</span><code data-lake-id="ua0f210c7" id="ua0f210c7"><span data-lake-id="u22b8e7f0" id="u22b8e7f0">递归</span></code><span data-lake-id="u471cc493" id="u471cc493">解法 - 带备忘录</span></h2><p data-lake-id="udd4aada2" id="udd4aada2"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%5Cnfunction%20fn(coins%2C%20amount)%20%7B%5Cn%20%20%20%20const%20memo%20%3D%20new%20Array(amount%2B1).fill(-999)%3B%5Cn%20%20%20%20function%20dp(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20base%20case%5Cn%20%20%20%20%20%20%20%20if%20(amount%20%3D%3D%3D%200)%20return%200%3B%5Cn%20%20%20%20%20%20%20%20if%20(amount%20%3C%200)%20return%20-1%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E5%B7%B2%E7%BB%8F%E8%A2%AB%E5%AD%98%E5%82%A8%E8%BF%87%E4%BA%86%EF%BC%8C%E5%B0%B1%E6%94%BE%E5%9C%A8%E8%BF%99%E5%84%BF%5Cn%20%20%20%20%20%20%20%20if%20(memo%5Bamount%5D%20!%3D%3D%20-999)%20return%20memo%5Bamount%5D%3B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3Ares%E4%B8%BA%E6%9C%80%E7%BB%88%E8%BF%94%E5%9B%9E%E7%9A%84%E7%BB%93%E6%9E%9C%EF%BC%8C%E5%8D%B3%E6%9C%80%E5%B0%91%E5%87%A0%E6%9E%9A%E7%A1%AC%E5%B8%81%5Cn%20%20%20%20%20%20%20%20let%20res%20%3D%20Infinity%3B%5Cn%20%20%20%20%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20let%20subProblem%20%3D%20dp(coins%2C%20amount%20-%20coin)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(subProblem%20%3D%3D%3D%20-1)%20continue%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20res%20%3D%20Math.min(res%2C%20subProblem%20%2B%201)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20memo%5Bamount%5D%20%3D%20(res%20%3D%3D%3D%20Infinity%20%3F%20-1%20%3A%20res)%3B%5Cn%20%20%20%20%20%20%20%20return%20memo%5Bamount%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp(coins%2C%20amount)%3B%5Cn%7D%5Cn%5Cnconsole.log(fn(%5B1%2C%202%2C%205%5D%2C%2010))%3B%20%20%2F%2F%202%5Cnconsole.log(fn(%5B1%2C%2024%2C%20100%5D%2C%20200))%3B%20%20%2F%2F%20%202%5Cnconsole.log(fn(%5B5%2C%2010%2C%2020%2C%2050%5D%2C%20201))%3B%20%2F%2F%20-1%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22acc7a31d%22%7D"></card><p data-lake-id="u6d7690d8" id="u6d7690d8"><br></p><p data-lake-id="ud06ec1c5" id="ud06ec1c5"><span data-lake-id="u94fb7f30" id="u94fb7f30">很显然「备忘录」大大减小了</span><code data-lake-id="u78f20d27" id="u78f20d27"><span data-lake-id="u2a71cd83" id="u2a71cd83">子问题数目</span></code><span data-lake-id="u1c6b2b5d" id="u1c6b2b5d">，完全消除了</span><code data-lake-id="u5bffea55" id="u5bffea55"><span data-lake-id="u8cc7b814" id="u8cc7b814">子问题的冗余</span></code><span data-lake-id="u61781cf5" id="u61781cf5">，所以子问题总数不会超过金额数 </span><code data-lake-id="uf4727afd" id="uf4727afd"><span data-lake-id="ud4c69dc9" id="ud4c69dc9">n</span></code><span data-lake-id="uf1ffeed0" id="uf1ffeed0">，即子问题数目为 </span><code data-lake-id="uba01a4f9" id="uba01a4f9"><span data-lake-id="u0cc33baa" id="u0cc33baa">O(n)</span></code><span data-lake-id="u3078e369" id="u3078e369">。处理一个子问题的时间不变，仍是 </span><code data-lake-id="uf8adab28" id="uf8adab28"><span data-lake-id="ube384dd2" id="ube384dd2">O(k)</span></code><span data-lake-id="ud1043e10" id="ud1043e10">，所以总的时间复杂度是 </span><code data-lake-id="ud206eb0b" id="ud206eb0b"><span data-lake-id="uc5a596ee" id="uc5a596ee">O(kn)</span></code></p><p data-lake-id="ub5e0b6c9" id="ub5e0b6c9"><br></p><h2 data-lake-id="2735cd20" id="2735cd20"><span data-lake-id="ucbf90ea2" id="ucbf90ea2">自底向上的dp 数组的迭代解法 -  dp table</span></h2><p data-lake-id="u5c237592" id="u5c237592"><br></p><ul list="u0ff18464"><li fid="u54ae0c1b" data-lake-id="u2abafe49" id="u2abafe49"><code data-lake-id="u1ca7b48f" id="u1ca7b48f"><span data-lake-id="u4d850484" id="u4d850484">dp 函数</span></code><span data-lake-id="u3edaaa26" id="u3edaaa26"> 体现在</span><code data-lake-id="u612d4476" id="u612d4476"><span data-lake-id="u17e95293" id="u17e95293">函数参数</span></code></li><li fid="u54ae0c1b" data-lake-id="u82681233" id="u82681233"><code data-lake-id="ub4899c15" id="ub4899c15"><span data-lake-id="u990af025" id="u990af025">dp 数组</span></code><span data-lake-id="u7473c755" id="u7473c755"> 体现在</span><code data-lake-id="u05596d63" id="u05596d63"><span data-lake-id="uc05a6a5d" id="uc05a6a5d">数组索引</span></code></li></ul><p data-lake-id="u734d8c16" id="u734d8c16"><br></p><p data-lake-id="u2faf8352" id="u2faf8352"><span data-lake-id="u26503e5d" id="u26503e5d">dp 数组的定义：当目标金额为 </span><code data-lake-id="ub6692db2" id="ub6692db2"><span data-lake-id="u1d8fe8e0" id="u1d8fe8e0">i</span></code><span data-lake-id="uaae7df98" id="uaae7df98"> 时，至少需要 </span><code data-lake-id="u33e20c57" id="u33e20c57"><span data-lake-id="u0bdf99bd" id="u0bdf99bd">dp[i]</span></code><span data-lake-id="u027383af" id="u027383af"> 枚硬币凑出</span></p><p data-lake-id="ube8b2a25" id="ube8b2a25"><br></p><p data-lake-id="uda1d4939" id="uda1d4939"><span data-lake-id="ue464124b" id="ue464124b">先看看模板：</span></p><p data-lake-id="u04acae66" id="u04acae66"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%23%20%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E8%BF%AD%E4%BB%A3%E7%9A%84%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%5Cn%23%20%E5%88%9D%E5%A7%8B%E5%8C%96%20base%20case%5Cndp%5B0%5D%5B0%5D%5B...%5D%20%3D%20base%20case%5Cn%23%20%E8%BF%9B%E8%A1%8C%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%5Cnfor%20%E7%8A%B6%E6%80%811%20in%20%E7%8A%B6%E6%80%811%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%96%E5%80%BC%EF%BC%9A%5Cn%20%20%20%20for%20%E7%8A%B6%E6%80%812%20in%20%E7%8A%B6%E6%80%812%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%96%E5%80%BC%EF%BC%9A%5Cn%20%20%20%20%20%20%20%20for%20...%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dp%5B%E7%8A%B6%E6%80%811%5D%5B%E7%8A%B6%E6%80%812%5D%5B...%5D%20%3D%20%E6%B1%82%E6%9C%80%E5%80%BC(%E9%80%89%E6%8B%A91%EF%BC%8C%E9%80%89%E6%8B%A92...)%5Cn%5Cn%2F%2F%20%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%5Cnfunction%20fn(coins%2C%20amount)%20%7B%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%9A%E5%88%9D%E5%A7%8B%E5%8C%96%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20dp%20%E6%95%B0%E7%BB%84%E7%9A%84%E5%AE%9A%E4%B9%89%EF%BC%9A%E5%BD%93%E7%9B%AE%E6%A0%87%E9%87%91%E9%A2%9D%E4%B8%BA%20%60i%60%20%E6%97%B6%EF%BC%8C%E8%87%B3%E5%B0%91%E9%9C%80%E8%A6%81%20%60dp%5Bi%5D%60%20%E6%9E%9A%E7%A1%AC%E5%B8%81%E5%87%91%E5%87%BA%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%20amount%20%2B%201%20%E5%B0%B1%E7%9B%B8%E5%BD%93%E4%BA%8E%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%E6%AD%A3%E6%97%A0%E7%A9%B7%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%20%E5%9B%A0%E4%B8%BA%E6%9C%80%E5%A4%9Adp%5Bamount%5D%20%E6%9C%80%E5%A4%A7%E5%8F%AA%E8%83%BD%E7%AD%89%E4%BA%8E%20amount%20%2C%E5%8D%B3%E9%83%BD%E6%89%BE%E9%9B%B6%201%20%E5%9D%97%E9%92%B1%E7%9A%84%5Cn%20%20%20%20const%20dp%20%3D%20new%20Array(amount%20%2B%201).fill(amount%20%2B%201)%3B%5Cn%5Cn%5Ct%2F%2F%20%3A%3A%3A%3A%E7%AC%AC%E4%BA%8C%E6%AD%A5%20base%20case%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%3B%5Cn%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E7%AC%AC%E4%B8%89%E6%AD%A5%20%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF%5Cn%20%20%20%20%2F%2F%20%E5%A4%96%E5%B1%82%20for%20%E5%BE%AA%E7%8E%AF%E5%9C%A8%E9%81%8D%E5%8E%86%E6%89%80%E6%9C%89%E7%8A%B6%E6%80%81%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%96%E5%80%BC%5Cn%20%20%20%20for%20(let%20i%20%3D%200%3B%20i%20%3C%20dp.length%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E5%86%85%E5%B1%82%20for%20%E5%BE%AA%E7%8E%AF%E5%9C%A8%E6%B1%82%E6%89%80%E6%9C%89%E9%80%89%E6%8B%A9%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%5Cn%20%20%20%20%20%20%20%20for%20(let%20coin%20of%20coins)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%20%E5%AD%90%E9%97%AE%E9%A2%98%E6%97%A0%E8%A7%A3%EF%BC%8C%E8%B7%B3%E8%BF%87%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if%20(i%20-%20coin%20%3C%200)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20Math.min(dp%5Bi%5D%2C%201%20%2B%20dp%5Bi%20-%20coin%5D)%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20return%20(dp%5Bamount%5D%20%3D%3D%3D%20amount%20%2B%201)%20%3F%20-1%20%3A%20dp%5Bamount%5D%3B%5Cn%7D%5Cn%5Cnconsole.log(fn(%5B1%2C%202%2C%205%5D%2C%2010))%3B%20%20%2F%2F%202%5Cnconsole.log(fn(%5B1%2C%2024%2C%20100%5D%2C%20200))%3B%20%20%2F%2F%20%202%5Cnconsole.log(fn(%5B5%2C%2010%2C%2020%2C%2050%5D%2C%20201))%3B%20%2F%2F%20-1%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22c2c8452d%22%7D"></card><p data-lake-id="u3e6b98eb" id="u3e6b98eb"><br></p><ul list="ud736fd87"><li fid="ua4a4b2d3" data-lake-id="ud648d3c7" id="ud648d3c7"><span data-lake-id="udd5450cf" id="udd5450cf">时间复杂度看</span><code data-lake-id="u9fc47e37" id="u9fc47e37"><span data-lake-id="u82d6fc32" id="u82d6fc32">几层遍历</span></code><span data-lake-id="u6bf538ca" id="u6bf538ca">， 所以是  </span><code data-lake-id="u386b4230" id="u386b4230"><span data-lake-id="u94d5d25f" id="u94d5d25f">O(kn)</span></code><span data-lake-id="u5ca31e31" id="u5ca31e31">（假设 </span><code data-lake-id="u709041a1" id="u709041a1"><span data-lake-id="uf385be70" id="uf385be70">k</span></code><span data-lake-id="ub0aa3222" id="ub0aa3222"> 为 硬币数，</span><code data-lake-id="uf290dabf" id="uf290dabf"><span data-lake-id="u50402aad" id="u50402aad">n</span></code><span data-lake-id="uc5f85d7e" id="uc5f85d7e"> 为找零多少钱）</span></li><li fid="ua4a4b2d3" data-lake-id="u7a5d5dd6" id="u7a5d5dd6"><span data-lake-id="u17b1e09b" id="u17b1e09b">空间复杂度 </span><code data-lake-id="u0cd9881a" id="u0cd9881a"><span data-lake-id="u3ef49f18" id="u3ef49f18">O(n)</span></code></li></ul><p data-lake-id="ub00ff78a" id="ub00ff78a"><br></p><h2 data-lake-id="f8aaec24" id="f8aaec24"><span data-lake-id="ud589ef55" id="ud589ef55">最后，总结几个关键点</span></h2><p data-lake-id="u9b464421" id="u9b464421"><br></p><ul list="u97949667"><li fid="u900061f7" data-lake-id="u6cee1123" id="u6cee1123"><code data-lake-id="ue33c5c42" id="ue33c5c42"><span data-lake-id="u12bf0e18" id="u12bf0e18">dp 递归函数 - 备忘录</span></code><span data-lake-id="u430d915e" id="u430d915e">、</span><code data-lake-id="u4eef133d" id="u4eef133d"><span data-lake-id="u7cfb6f42" id="u7cfb6f42">dp 数组迭代（DP table）</span></code><span data-lake-id="uc816f349" id="uc816f349"> , 在追求“</span><code data-lake-id="ucd4dc6f6" id="ucd4dc6f6"><span data-lake-id="ude6efa7b" id="ude6efa7b">如何聪明地穷举</span></code><span data-lake-id="u666d61fc" id="u666d61fc">”。</span><code data-lake-id="u71a754ac" id="u71a754ac"><span data-lake-id="u291e597c" id="u291e597c">用空间换时间</span></code><span data-lake-id="u881138c7" id="u881138c7">的思路，是降低时间复杂度的不二法门</span></li><li fid="u900061f7" data-lake-id="uc68a3973" id="uc68a3973"><span data-lake-id="u0b516aa6" id="u0b516aa6">配合  [[999.AL.斐波那契数列]]  多理解，多动手</span></li><li fid="u900061f7" data-lake-id="u6da30a7d" id="u6da30a7d"><code data-lake-id="uce721340" id="uce721340"><span data-lake-id="uc9651bff" id="uc9651bff">自顶向下</span></code><span data-lake-id="u2f3ec898" id="u2f3ec898">和</span><code data-lake-id="u57286433" id="u57286433"><span data-lake-id="u0b7ccfab" id="u0b7ccfab">自底向上</span></code><span data-lake-id="uc9d1655a" id="uc9d1655a"> </span></li></ul><ul list="u97949667" data-lake-indent="1"><li fid="u3560023b" data-lake-id="u3d33e8dd" id="u3d33e8dd"><code data-lake-id="u2ff0c748" id="u2ff0c748"><span data-lake-id="ufca1e751" id="ufca1e751">自顶向下</span></code><span data-lake-id="u2bd0a431" id="u2bd0a431"> ，本质是递归，即&quot;顶&quot;问题，拆解为&quot;子问题&quot; 去解决，复杂度依赖于 </span><code data-lake-id="ua8667fe3" id="ua8667fe3"><span data-lake-id="u9ab41dea" id="u9ab41dea">子问题个数</span></code></li><li fid="u3560023b" data-lake-id="u4baa211c" id="u4baa211c"><code data-lake-id="u9b09b6a2" id="u9b09b6a2"><span data-lake-id="ue8b9b7fb" id="ue8b9b7fb">自底向上</span></code><span data-lake-id="u5c4044c6" id="u5c4044c6"> ，本质是数组迭代，复杂度依赖于</span><code data-lake-id="u4fd0a592" id="u4fd0a592"><span data-lake-id="u171ba1e8" id="u171ba1e8">几重迭代</span></code></li></ul><ul list="u97949667" start="4"><li fid="u900061f7" data-lake-id="u2cc99ea9" id="u2cc99ea9"><span data-lake-id="u06f5f4e3" id="u06f5f4e3">动态规划问题，核心的是写出</span><code data-lake-id="ud1d77eb3" id="ud1d77eb3"><span data-lake-id="uc99cb1fd" id="uc99cb1fd">暴力解法</span></code><span data-lake-id="u58cb986e" id="u58cb986e"> ，然后才是 </span><code data-lake-id="u7fd7d6f2" id="u7fd7d6f2"><span data-lake-id="uab0c83c7" id="uab0c83c7">空间换时间</span></code><span data-lake-id="u3603618c" id="u3603618c">的优化思路</span></li></ul><p data-lake-id="ud6ba27e7" id="ud6ba27e7"><br></p><h2 data-lake-id="d17a0f0b" id="d17a0f0b"><span data-lake-id="u05651341" id="u05651341">参考</span></h2><p data-lake-id="u4ef5a4f3" id="u4ef5a4f3"><br></p><ul list="u844b620e"><li fid="u96338c8b" data-lake-id="u4ffdd94f" id="u4ffdd94f"><a href="https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/" target="_blank" data-lake-id="u4e3bba2b" id="u4e3bba2b"><span data-lake-id="u8f341c74" id="u8f341c74">https://labuladong.github.io/algo/di-er-zhan-a01c6/dong-tai-g-a223e/dong-tai-g-1e688/</span></a></li></ul>`,public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-19T02:59:05.000Z",deleted_at:null,created_at:"2023-03-19T02:57:07.000Z",updated_at:"2023-03-19T11:42:40.000Z",published_at:"2023-03-19T02:59:05.000Z",first_published_at:"2023-03-19T02:58:24.002Z",word_count:1840,cover:null,description:"最小硬币数https://leetcode.cn/problems/coin-change/动态规划的要点这是一个经典的动态规划问题，因为它具有「最优子结构」的。即子问题间 互相独立动态规划问题的一般形式就是求最值求解动态规划的核心问题是穷举具备「最优子结构」，即是否能够通过子问题的最值得到原...",custom_description:null,hits:2,_serializer:"v2.doc_detail"},{id:118576311,slug:"edpatyel8wbhesin",title:"0006.FE.从Vue3 框架视角来看框架设计的 核心要素",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:'<a name="14b4ff0d"></a>\n## 从Vue3 框架视角来看框架设计的 `核心要素`\n\n对于开发一个前端框架来说，有哪些核心要素呢？ 如下：\n\n<a name="7042b434"></a>\n## 1、开发体验\n\n**报错警告提示，是否能够让开发者立马定位到问题**\n\n- 比如 如何提示 `App.mount(\'#app\')` 中 `#app` 节点 不存在\n\n**开发调试是否直观？**\n\n- 比如`const obj = ref()` ，每次都是打印 `obj`的值都需要 `obj.value` ?  框架层面肯定需要提供好的 log 方式。 \n   - DevTools 提供 `custom formmaters` ，框架层面会提供 `initCustomFormatter` 的定义\n\n<a name="a17b61ef"></a>\n## 2、控制框架代码体积\n\n如何做到开发环境下更多提示，而不增加代码体积呢？\n\n需要使用 `roolup 插件` 或者 `webpack 插件` 的 `__DEV__常量`  来做到这一点，生成环境下形成  `dead code` , 在使用打包工具 `tree-shaking` 的能力，进行移除\n\n> [!tip]<br />`dead code` 即 永远不会执行的代码，如 `if(true)` 或者 `import 后没使用的模块`等\n\n\n<a name="2a8ef69b"></a>\n## 3、良好的 `tree-shaking` 机制\n\n上面说的`dead code` 很容易 被 `tree-shaking`掉，但是`副作用` 呢，因为 `proxy` 能力`只读每个属性`也可能引起`副作用`。\n\n答案是：`/*#__PURE__*/`   ， `rollup` 和 `webpack` 、`terser` 都可以识别它 ，它告诉 打包工具，`放心 tree-shaking 掉吧`\n\n<a name="c52c94d0"></a>\n## 4、多种环境下的构建产物不一样\n\n比如：\n\n- `rollup` 下，设置 `format` 为 `iife` 给 `script` 标签直接使用\n- `rollup` 下，设置 `format` 为 `esm` 给 `<script type="module">` 直接使用\n- `rollup` 下，设置 `format` 为 `cjs` 给 nodejs 环境使用 ，为了 SSR\n\n另外，如何打包给 `rollup` 或者 `webpack` 工具使用呢？ 答案是 `esm` , 但又如何 与   `<script type="module">` 区别呢？ 看 package.json  , 如下 `代码` 和 `图片`\n\n```json\n{\n	"main":"index.js",\n	"module":"dist/vue.runtime.esm-bundler.js",\n}\n```\n\n![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191018366.png#id=jwuZA&originHeight=1354&originWidth=1794&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)\n\n<a name="c310d1e4"></a>\n## 5、支持特性开关\n\n比如vue3的 `组合式 API` 和 `选项式 API`， 如果用户确定只需要使用 `组合式 API` ，那么可以通过 设置 `__VUE_OPTIONS_API__` 预定于常量来开启或者关闭.\n\n<a name="910cc6bd"></a>\n## 6、错误处理机制\n\n比如一个工具库提供一个 `fetch` 方法 ，但使用的方式必须传入回调 `fetch(callback)`，怎么容错呢？三种\n\n1. 用户自己 `try catch`，但是如果有很多方法，需要每个都 `try catch` 吗\n2. 用户自己实现一个 `handleError` 方法\n3. 工具库提一个 `utils.registerErrorHandler` 静态方法, 用户使用它注册错误处理程序。\n\n第 3 种，就是 Vue 的处理方式，`app.config.errorHandler`  , 为用户提供更好的框架层面的健壮性。\n\n<a name="0ff0beba"></a>\n## 7、Typescript 支持\n\n完善 Typescript 支持，可能比框架本身还要花精力和时间\n\n<a name="d17a0f0b"></a>\n## 参考\n\n- 《Vue.js 设计与实现》\n',body_draft:'<a name="14b4ff0d"></a>\n## 从Vue3 框架视角来看框架设计的 `核心要素`\n\n对于开发一个前端框架来说，有哪些核心要素呢？ 如下：\n\n<a name="7042b434"></a>\n## 1、开发体验\n\n**报错警告提示，是否能够让开发者立马定位到问题**\n\n- 比如 如何提示 `App.mount(\'#app\')` 中 `#app` 节点 不存在\n\n**开发调试是否直观？**\n\n- 比如`const obj = ref()` ，每次都是打印 `obj`的值都需要 `obj.value` ?  框架层面肯定需要提供好的 log 方式。 \n   - DevTools 提供 `custom formmaters` ，框架层面会提供 `initCustomFormatter` 的定义\n\n<a name="a17b61ef"></a>\n## 2、控制框架代码体积\n\n如何做到开发环境下更多提示，而不增加代码体积呢？\n\n需要使用 `roolup 插件` 或者 `webpack 插件` 的 `__DEV__常量`  来做到这一点，生成环境下形成  `dead code` , 在使用打包工具 `tree-shaking` 的能力，进行移除\n\n> [!tip]<br />`dead code` 即 永远不会执行的代码，如 `if(true)` 或者 `import 后没使用的模块`等\n\n\n<a name="2a8ef69b"></a>\n## 3、良好的 `tree-shaking` 机制\n\n上面说的`dead code` 很容易 被 `tree-shaking`掉，但是`副作用` 呢，因为 `proxy` 能力`只读每个属性`也可能引起`副作用`。\n\n答案是：`/*#__PURE__*/`   ， `rollup` 和 `webpack` 、`terser` 都可以识别它 ，它告诉 打包工具，`放心 tree-shaking 掉吧`\n\n<a name="c52c94d0"></a>\n## 4、多种环境下的构建产物不一样\n\n比如：\n\n- `rollup` 下，设置 `format` 为 `iife` 给 `script` 标签直接使用\n- `rollup` 下，设置 `format` 为 `esm` 给 `<script type="module">` 直接使用\n- `rollup` 下，设置 `format` 为 `cjs` 给 nodejs 环境使用 ，为了 SSR\n\n另外，如何打包给 `rollup` 或者 `webpack` 工具使用呢？ 答案是 `esm` , 但又如何 与   `<script type="module">` 区别呢？ 看 package.json  , 如下 `代码` 和 `图片`\n\n```json\n{\n	"main":"index.js",\n	"module":"dist/vue.runtime.esm-bundler.js",\n}\n```\n\n![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191018366.png#id=jwuZA&originHeight=1354&originWidth=1794&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)\n\n<a name="c310d1e4"></a>\n## 5、支持特性开关\n\n比如vue3的 `组合式 API` 和 `选项式 API`， 如果用户确定只需要使用 `组合式 API` ，那么可以通过 设置 `__VUE_OPTIONS_API__` 预定于常量来开启或者关闭.\n\n<a name="910cc6bd"></a>\n## 6、错误处理机制\n\n比如一个工具库提供一个 `fetch` 方法 ，但使用的方式必须传入回调 `fetch(callback)`，怎么容错呢？三种\n\n1. 用户自己 `try catch`，但是如果有很多方法，需要每个都 `try catch` 吗\n2. 用户自己实现一个 `handleError` 方法\n3. 工具库提一个 `utils.registerErrorHandler` 静态方法, 用户使用它注册错误处理程序。\n\n第 3 种，就是 Vue 的处理方式，`app.config.errorHandler`  , 为用户提供更好的框架层面的健壮性。\n\n<a name="0ff0beba"></a>\n## 7、Typescript 支持\n\n完善 Typescript 支持，可能比框架本身还要花精力和时间\n\n<a name="d17a0f0b"></a>\n## 参考\n\n- 《Vue.js 设计与实现》\n',body_html:`<!doctype html><div class="lake-content" typography="classic"><h2 id="14b4ff0d"><span class="ne-text">从Vue3 框架视角来看框架设计的 </span><code class="ne-code"><span class="ne-text">核心要素</span></code></h2><p id="u28fa2dbf" class="ne-p"><br></p><p id="u03921bdf" class="ne-p"><span class="ne-text">对于开发一个前端框架来说，有哪些核心要素呢？ 如下：</span></p><p id="u67904473" class="ne-p"><br></p><h2 id="7042b434"><span class="ne-text">1、开发体验</span></h2><p id="u98db65b0" class="ne-p"><br></p><p id="u064b51b6" class="ne-p"><strong><span class="ne-text">报错警告提示，是否能够让开发者立马定位到问题</span></strong></p><p id="u5927cf0e" class="ne-p"><br></p><ul class="ne-ul"><li id="u9b0a1e40"><span class="ne-text">比如 如何提示 </span><code class="ne-code"><span class="ne-text">App.mount('#app')</span></code><span class="ne-text"> 中 </span><code class="ne-code"><span class="ne-text">#app</span></code><span class="ne-text"> 节点 不存在</span></li></ul><p id="ua235a9a2" class="ne-p"><br></p><p id="u9d3df4a5" class="ne-p"><strong><span class="ne-text">开发调试是否直观？</span></strong></p><p id="u8fea8cf7" class="ne-p"><br></p><ul class="ne-ul"><li id="ud0928ba0"><span class="ne-text">比如</span><code class="ne-code"><span class="ne-text">const obj = ref()</span></code><span class="ne-text"> ，每次都是打印 </span><code class="ne-code"><span class="ne-text">obj</span></code><span class="ne-text">的值都需要 </span><code class="ne-code"><span class="ne-text">obj.value</span></code><span class="ne-text"> ?  框架层面肯定需要提供好的 log 方式。 </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="u45bcfec8"><span class="ne-text">DevTools 提供 </span><code class="ne-code"><span class="ne-text">custom formmaters</span></code><span class="ne-text"> ，框架层面会提供 </span><code class="ne-code"><span class="ne-text">initCustomFormatter</span></code><span class="ne-text"> 的定义</span></li></ul></ul><p id="u428e8c5c" class="ne-p"><br></p><h2 id="a17b61ef"><span class="ne-text">2、控制框架代码体积</span></h2><p id="uff3581be" class="ne-p"><br></p><p id="u283465cb" class="ne-p"><span class="ne-text">如何做到开发环境下更多提示，而不增加代码体积呢？</span></p><p id="ubddb9fed" class="ne-p"><br></p><p id="udff7e10a" class="ne-p"><span class="ne-text">需要使用 </span><code class="ne-code"><span class="ne-text">roolup 插件</span></code><span class="ne-text"> 或者 </span><code class="ne-code"><span class="ne-text">webpack 插件</span></code><span class="ne-text"> 的 </span><code class="ne-code"><span class="ne-text">__DEV__常量</span></code><span class="ne-text">  来做到这一点，生成环境下形成  </span><code class="ne-code"><span class="ne-text">dead code</span></code><span class="ne-text"> , 在使用打包工具 </span><code class="ne-code"><span class="ne-text">tree-shaking</span></code><span class="ne-text"> 的能力，进行移除</span></p><p id="uaa25f917" class="ne-p"><br></p><div class="ne-quote"><p id="uaa760624" class="ne-p"><span class="ne-text">[!tip]<br /></span><code class="ne-code"><span class="ne-text">dead code</span></code><span class="ne-text"> 即 永远不会执行的代码，如 </span><code class="ne-code"><span class="ne-text">if(true)</span></code><span class="ne-text"> 或者 </span><code class="ne-code"><span class="ne-text">import 后没使用的模块</span></code><span class="ne-text">等</span></p></div><p id="u2be53cb2" class="ne-p"><br></p><h2 id="2a8ef69b"><span class="ne-text">3、良好的 </span><code class="ne-code"><span class="ne-text">tree-shaking</span></code><span class="ne-text"> 机制</span></h2><p id="u64899c5f" class="ne-p"><br></p><p id="u4967bfc6" class="ne-p"><span class="ne-text">上面说的</span><code class="ne-code"><span class="ne-text">dead code</span></code><span class="ne-text"> 很容易 被 </span><code class="ne-code"><span class="ne-text">tree-shaking</span></code><span class="ne-text">掉，但是</span><code class="ne-code"><span class="ne-text">副作用</span></code><span class="ne-text"> 呢，因为 </span><code class="ne-code"><span class="ne-text">proxy</span></code><span class="ne-text"> 能力</span><code class="ne-code"><span class="ne-text">只读每个属性</span></code><span class="ne-text">也可能引起</span><code class="ne-code"><span class="ne-text">副作用</span></code><span class="ne-text">。</span></p><p id="ub2cefa55" class="ne-p"><br></p><p id="u532c5d3d" class="ne-p"><span class="ne-text">答案是：</span><code class="ne-code"><span class="ne-text">/*#__PURE__*/</span></code><span class="ne-text">   ， </span><code class="ne-code"><span class="ne-text">rollup</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">webpack</span></code><span class="ne-text"> 、</span><code class="ne-code"><span class="ne-text">terser</span></code><span class="ne-text"> 都可以识别它 ，它告诉 打包工具，</span><code class="ne-code"><span class="ne-text">放心 tree-shaking 掉吧</span></code></p><p id="u4aeaaf77" class="ne-p"><br></p><h2 id="c52c94d0"><span class="ne-text">4、多种环境下的构建产物不一样</span></h2><p id="ue5e7e75a" class="ne-p"><br></p><p id="u97aaaf36" class="ne-p"><span class="ne-text">比如：</span></p><p id="u6d394b8e" class="ne-p"><br></p><ul class="ne-ul"><li id="ueb399b36"><code class="ne-code"><span class="ne-text">rollup</span></code><span class="ne-text"> 下，设置 </span><code class="ne-code"><span class="ne-text">format</span></code><span class="ne-text"> 为 </span><code class="ne-code"><span class="ne-text">iife</span></code><span class="ne-text"> 给 </span><code class="ne-code"><span class="ne-text">script</span></code><span class="ne-text"> 标签直接使用</span></li><li id="u43bb8605"><code class="ne-code"><span class="ne-text">rollup</span></code><span class="ne-text"> 下，设置 </span><code class="ne-code"><span class="ne-text">format</span></code><span class="ne-text"> 为 </span><code class="ne-code"><span class="ne-text">esm</span></code><span class="ne-text"> 给 </span><code class="ne-code"><span class="ne-text">&lt;script type=&quot;module&quot;&gt;</span></code><span class="ne-text"> 直接使用</span></li><li id="uc1d2ad8c"><code class="ne-code"><span class="ne-text">rollup</span></code><span class="ne-text"> 下，设置 </span><code class="ne-code"><span class="ne-text">format</span></code><span class="ne-text"> 为 </span><code class="ne-code"><span class="ne-text">cjs</span></code><span class="ne-text"> 给 nodejs 环境使用 ，为了 SSR</span></li></ul><p id="u2c0ac16d" class="ne-p"><br></p><p id="u8925491b" class="ne-p"><span class="ne-text">另外，如何打包给 </span><code class="ne-code"><span class="ne-text">rollup</span></code><span class="ne-text"> 或者 </span><code class="ne-code"><span class="ne-text">webpack</span></code><span class="ne-text"> 工具使用呢？ 答案是 </span><code class="ne-code"><span class="ne-text">esm</span></code><span class="ne-text"> , 但又如何 与   </span><code class="ne-code"><span class="ne-text">&lt;script type=&quot;module&quot;&gt;</span></code><span class="ne-text"> 区别呢？ 看 package.json  , 如下 </span><code class="ne-code"><span class="ne-text">代码</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">图片</span></code></p><p id="ue1ef3197" class="ne-p"><br></p><pre data-language="json" id="54de4bbb" class="ne-codeblock language-json">{
	&quot;main&quot;:&quot;index.js&quot;,
	&quot;module&quot;:&quot;dist/vue.runtime.esm-bundler.js&quot;,
}</pre><p id="ucd9db66e" class="ne-p"><br></p><p id="ub8c8efe5" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303191018366.png" width="1794" id="jwuZA" class="ne-image"></p><p id="ubdff8e8c" class="ne-p"><br></p><h2 id="c310d1e4"><span class="ne-text">5、支持特性开关</span></h2><p id="u4b4f6e47" class="ne-p"><br></p><p id="ufd208b3f" class="ne-p"><span class="ne-text">比如vue3的 </span><code class="ne-code"><span class="ne-text">组合式 API</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">选项式 API</span></code><span class="ne-text">， 如果用户确定只需要使用 </span><code class="ne-code"><span class="ne-text">组合式 API</span></code><span class="ne-text"> ，那么可以通过 设置 </span><code class="ne-code"><span class="ne-text">__VUE_OPTIONS_API__</span></code><span class="ne-text"> 预定于常量来开启或者关闭.</span></p><p id="u329a1642" class="ne-p"><br></p><h2 id="910cc6bd"><span class="ne-text">6、错误处理机制</span></h2><p id="uf7ea5de5" class="ne-p"><br></p><p id="u700bb9da" class="ne-p"><span class="ne-text">比如一个工具库提供一个 </span><code class="ne-code"><span class="ne-text">fetch</span></code><span class="ne-text"> 方法 ，但使用的方式必须传入回调 </span><code class="ne-code"><span class="ne-text">fetch(callback)</span></code><span class="ne-text">，怎么容错呢？三种</span></p><p id="ub10cb1c4" class="ne-p"><br></p><ol class="ne-ol"><li id="u787aa107"><span class="ne-text">用户自己 </span><code class="ne-code"><span class="ne-text">try catch</span></code><span class="ne-text">，但是如果有很多方法，需要每个都 </span><code class="ne-code"><span class="ne-text">try catch</span></code><span class="ne-text"> 吗</span></li><li id="u361b2985"><span class="ne-text">用户自己实现一个 </span><code class="ne-code"><span class="ne-text">handleError</span></code><span class="ne-text"> 方法</span></li><li id="u9483b59a"><span class="ne-text">工具库提一个 </span><code class="ne-code"><span class="ne-text">utils.registerErrorHandler</span></code><span class="ne-text"> 静态方法, 用户使用它注册错误处理程序。</span></li></ol><p id="uda6f199d" class="ne-p"><br></p><p id="u9c1d3c21" class="ne-p"><span class="ne-text">第 3 种，就是 Vue 的处理方式，</span><code class="ne-code"><span class="ne-text">app.config.errorHandler</span></code><span class="ne-text">  , 为用户提供更好的框架层面的健壮性。</span></p><p id="u5e52c91d" class="ne-p"><br></p><h2 id="0ff0beba"><span class="ne-text">7、Typescript 支持</span></h2><p id="ud9de3a84" class="ne-p"><br></p><p id="u6515b61d" class="ne-p"><span class="ne-text">完善 Typescript 支持，可能比框架本身还要花精力和时间</span></p><p id="u00be8e3f" class="ne-p"><br></p><h2 id="d17a0f0b"><span class="ne-text">参考</span></h2><p id="u781342e7" class="ne-p"><br></p><ul class="ne-ul"><li id="uef3400ee"><span class="ne-text">《Vue.js 设计与实现》</span></li></ul></div>`,body_lake:`<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><h2 data-lake-id="14b4ff0d" id="14b4ff0d"><span data-lake-id="u406e303d" id="u406e303d">从Vue3 框架视角来看框架设计的 </span><code data-lake-id="u07b1f71d" id="u07b1f71d"><span data-lake-id="u41bc56c9" id="u41bc56c9">核心要素</span></code></h2><p data-lake-id="u28fa2dbf" id="u28fa2dbf"><br></p><p data-lake-id="u03921bdf" id="u03921bdf"><span data-lake-id="u71acd11b" id="u71acd11b">对于开发一个前端框架来说，有哪些核心要素呢？ 如下：</span></p><p data-lake-id="u67904473" id="u67904473"><br></p><h2 data-lake-id="7042b434" id="7042b434"><span data-lake-id="u5b6709a0" id="u5b6709a0">1、开发体验</span></h2><p data-lake-id="u98db65b0" id="u98db65b0"><br></p><p data-lake-id="u064b51b6" id="u064b51b6"><strong><span data-lake-id="ud56b9df7" id="ud56b9df7">报错警告提示，是否能够让开发者立马定位到问题</span></strong></p><p data-lake-id="u5927cf0e" id="u5927cf0e"><br></p><ul list="ub1623026"><li fid="u74d950ae" data-lake-id="u9b0a1e40" id="u9b0a1e40"><span data-lake-id="u1b8d44be" id="u1b8d44be">比如 如何提示 </span><code data-lake-id="u5eebca9e" id="u5eebca9e"><span data-lake-id="uae668a83" id="uae668a83">App.mount('#app')</span></code><span data-lake-id="u1e992071" id="u1e992071"> 中 </span><code data-lake-id="u24ad541a" id="u24ad541a"><span data-lake-id="u540c18f5" id="u540c18f5">#app</span></code><span data-lake-id="u72787d09" id="u72787d09"> 节点 不存在</span></li></ul><p data-lake-id="ua235a9a2" id="ua235a9a2"><br></p><p data-lake-id="u9d3df4a5" id="u9d3df4a5"><strong><span data-lake-id="u0a49b872" id="u0a49b872">开发调试是否直观？</span></strong></p><p data-lake-id="u8fea8cf7" id="u8fea8cf7"><br></p><ul list="u9a68c538"><li fid="ua71165ba" data-lake-id="ud0928ba0" id="ud0928ba0"><span data-lake-id="u9fc32f66" id="u9fc32f66">比如</span><code data-lake-id="u099d2c79" id="u099d2c79"><span data-lake-id="u2f23597e" id="u2f23597e">const obj = ref()</span></code><span data-lake-id="u9e5931c0" id="u9e5931c0"> ，每次都是打印 </span><code data-lake-id="ucb183c76" id="ucb183c76"><span data-lake-id="u8e498d15" id="u8e498d15">obj</span></code><span data-lake-id="u4f1b6a10" id="u4f1b6a10">的值都需要 </span><code data-lake-id="u82ae00ba" id="u82ae00ba"><span data-lake-id="u8d535c3d" id="u8d535c3d">obj.value</span></code><span data-lake-id="udaf49287" id="udaf49287"> ?  框架层面肯定需要提供好的 log 方式。 </span></li></ul><ul list="u9a68c538" data-lake-indent="1"><li fid="ue10f9e4d" data-lake-id="u45bcfec8" id="u45bcfec8"><span data-lake-id="u7968070a" id="u7968070a">DevTools 提供 </span><code data-lake-id="u7d6c1b48" id="u7d6c1b48"><span data-lake-id="u651d5da5" id="u651d5da5">custom formmaters</span></code><span data-lake-id="u82150dd3" id="u82150dd3"> ，框架层面会提供 </span><code data-lake-id="u564ac31f" id="u564ac31f"><span data-lake-id="ue83f4814" id="ue83f4814">initCustomFormatter</span></code><span data-lake-id="ue553a04a" id="ue553a04a"> 的定义</span></li></ul><p data-lake-id="u428e8c5c" id="u428e8c5c"><br></p><h2 data-lake-id="a17b61ef" id="a17b61ef"><span data-lake-id="u9f87015f" id="u9f87015f">2、控制框架代码体积</span></h2><p data-lake-id="uff3581be" id="uff3581be"><br></p><p data-lake-id="u283465cb" id="u283465cb"><span data-lake-id="ud755eddc" id="ud755eddc">如何做到开发环境下更多提示，而不增加代码体积呢？</span></p><p data-lake-id="ubddb9fed" id="ubddb9fed"><br></p><p data-lake-id="udff7e10a" id="udff7e10a"><span data-lake-id="u7cf119de" id="u7cf119de">需要使用 </span><code data-lake-id="u2dc787ca" id="u2dc787ca"><span data-lake-id="ud6f5fce5" id="ud6f5fce5">roolup 插件</span></code><span data-lake-id="u6e3527ba" id="u6e3527ba"> 或者 </span><code data-lake-id="u479dabee" id="u479dabee"><span data-lake-id="u9411988f" id="u9411988f">webpack 插件</span></code><span data-lake-id="u02b49820" id="u02b49820"> 的 </span><code data-lake-id="u4980be48" id="u4980be48"><span data-lake-id="u497367b9" id="u497367b9">__DEV__常量</span></code><span data-lake-id="ubab5e7a8" id="ubab5e7a8">  来做到这一点，生成环境下形成  </span><code data-lake-id="ua79b7633" id="ua79b7633"><span data-lake-id="u80011972" id="u80011972">dead code</span></code><span data-lake-id="ue76bdbfe" id="ue76bdbfe"> , 在使用打包工具 </span><code data-lake-id="u18f896ae" id="u18f896ae"><span data-lake-id="ua6b2240b" id="ua6b2240b">tree-shaking</span></code><span data-lake-id="u154809f5" id="u154809f5"> 的能力，进行移除</span></p><p data-lake-id="uaa25f917" id="uaa25f917"><br></p><blockquote data-lake-id="u87c992d1" id="u87c992d1"><p data-lake-id="uaa760624" id="uaa760624"><span data-lake-id="u3cf08665" id="u3cf08665">[!tip]<br /></span><code data-lake-id="ue453a153" id="ue453a153"><span data-lake-id="u09f52b0f" id="u09f52b0f">dead code</span></code><span data-lake-id="u2c5b3677" id="u2c5b3677"> 即 永远不会执行的代码，如 </span><code data-lake-id="u812f468a" id="u812f468a"><span data-lake-id="u58851211" id="u58851211">if(true)</span></code><span data-lake-id="ucba06b22" id="ucba06b22"> 或者 </span><code data-lake-id="u508d3715" id="u508d3715"><span data-lake-id="u2bcc7b6c" id="u2bcc7b6c">import 后没使用的模块</span></code><span data-lake-id="u18645b32" id="u18645b32">等</span></p></blockquote><p data-lake-id="u2be53cb2" id="u2be53cb2"><br></p><h2 data-lake-id="2a8ef69b" id="2a8ef69b"><span data-lake-id="u763317fc" id="u763317fc">3、良好的 </span><code data-lake-id="u12f8db19" id="u12f8db19"><span data-lake-id="ubf4d6eff" id="ubf4d6eff">tree-shaking</span></code><span data-lake-id="uecc3d862" id="uecc3d862"> 机制</span></h2><p data-lake-id="u64899c5f" id="u64899c5f"><br></p><p data-lake-id="u4967bfc6" id="u4967bfc6"><span data-lake-id="ud4146ba1" id="ud4146ba1">上面说的</span><code data-lake-id="uc47c9539" id="uc47c9539"><span data-lake-id="uc4236a62" id="uc4236a62">dead code</span></code><span data-lake-id="u7d5ec1b6" id="u7d5ec1b6"> 很容易 被 </span><code data-lake-id="u284611c8" id="u284611c8"><span data-lake-id="u61f603a4" id="u61f603a4">tree-shaking</span></code><span data-lake-id="u39513c53" id="u39513c53">掉，但是</span><code data-lake-id="u1a903d53" id="u1a903d53"><span data-lake-id="ud4b56445" id="ud4b56445">副作用</span></code><span data-lake-id="u4d790357" id="u4d790357"> 呢，因为 </span><code data-lake-id="uf5e6338f" id="uf5e6338f"><span data-lake-id="u5c64e450" id="u5c64e450">proxy</span></code><span data-lake-id="u0772baa8" id="u0772baa8"> 能力</span><code data-lake-id="u519aab55" id="u519aab55"><span data-lake-id="u14bbf01a" id="u14bbf01a">只读每个属性</span></code><span data-lake-id="u2349f1d0" id="u2349f1d0">也可能引起</span><code data-lake-id="uca164fab" id="uca164fab"><span data-lake-id="ub007d0b5" id="ub007d0b5">副作用</span></code><span data-lake-id="ua8af3653" id="ua8af3653">。</span></p><p data-lake-id="ub2cefa55" id="ub2cefa55"><br></p><p data-lake-id="u532c5d3d" id="u532c5d3d"><span data-lake-id="ufe870ac6" id="ufe870ac6">答案是：</span><code data-lake-id="u239571f5" id="u239571f5"><span data-lake-id="u8ade5269" id="u8ade5269">/*#__PURE__*/</span></code><span data-lake-id="u463a42f6" id="u463a42f6">   ， </span><code data-lake-id="u4bdfb9a3" id="u4bdfb9a3"><span data-lake-id="u82882c83" id="u82882c83">rollup</span></code><span data-lake-id="u06a1c45f" id="u06a1c45f"> 和 </span><code data-lake-id="ub11e61a0" id="ub11e61a0"><span data-lake-id="u6ba66084" id="u6ba66084">webpack</span></code><span data-lake-id="u11433649" id="u11433649"> 、</span><code data-lake-id="ufc84c796" id="ufc84c796"><span data-lake-id="u5b0be3a2" id="u5b0be3a2">terser</span></code><span data-lake-id="ub0cd8222" id="ub0cd8222"> 都可以识别它 ，它告诉 打包工具，</span><code data-lake-id="u820f02de" id="u820f02de"><span data-lake-id="u41412353" id="u41412353">放心 tree-shaking 掉吧</span></code></p><p data-lake-id="u4aeaaf77" id="u4aeaaf77"><br></p><h2 data-lake-id="c52c94d0" id="c52c94d0"><span data-lake-id="u5fef1046" id="u5fef1046">4、多种环境下的构建产物不一样</span></h2><p data-lake-id="ue5e7e75a" id="ue5e7e75a"><br></p><p data-lake-id="u97aaaf36" id="u97aaaf36"><span data-lake-id="u96eca157" id="u96eca157">比如：</span></p><p data-lake-id="u6d394b8e" id="u6d394b8e"><br></p><ul list="uff56f1c3"><li fid="u61f2b110" data-lake-id="ueb399b36" id="ueb399b36"><code data-lake-id="u6ab7ff2f" id="u6ab7ff2f"><span data-lake-id="u589b5e4f" id="u589b5e4f">rollup</span></code><span data-lake-id="u898ee1b5" id="u898ee1b5"> 下，设置 </span><code data-lake-id="u8eaf5ae4" id="u8eaf5ae4"><span data-lake-id="u9b9f1759" id="u9b9f1759">format</span></code><span data-lake-id="u72a310a9" id="u72a310a9"> 为 </span><code data-lake-id="u495af857" id="u495af857"><span data-lake-id="u3f228442" id="u3f228442">iife</span></code><span data-lake-id="uc3b31499" id="uc3b31499"> 给 </span><code data-lake-id="u2c6e9e89" id="u2c6e9e89"><span data-lake-id="ud8e1db0e" id="ud8e1db0e">script</span></code><span data-lake-id="u471cd6b1" id="u471cd6b1"> 标签直接使用</span></li><li fid="u61f2b110" data-lake-id="u43bb8605" id="u43bb8605"><code data-lake-id="u50ede69a" id="u50ede69a"><span data-lake-id="u2116efdf" id="u2116efdf">rollup</span></code><span data-lake-id="ud51be1ab" id="ud51be1ab"> 下，设置 </span><code data-lake-id="uc452f9f6" id="uc452f9f6"><span data-lake-id="u6c858252" id="u6c858252">format</span></code><span data-lake-id="u42a9bec7" id="u42a9bec7"> 为 </span><code data-lake-id="u3c0490ab" id="u3c0490ab"><span data-lake-id="u0c1cd211" id="u0c1cd211">esm</span></code><span data-lake-id="u48ba8ab0" id="u48ba8ab0"> 给 </span><code data-lake-id="uf83a00fc" id="uf83a00fc"><span data-lake-id="u5c25bae3" id="u5c25bae3">&lt;script type=&quot;module&quot;&gt;</span></code><span data-lake-id="u9b1a645e" id="u9b1a645e"> 直接使用</span></li><li fid="u61f2b110" data-lake-id="uc1d2ad8c" id="uc1d2ad8c"><code data-lake-id="u1c7fddfa" id="u1c7fddfa"><span data-lake-id="u421c68a0" id="u421c68a0">rollup</span></code><span data-lake-id="u8993f939" id="u8993f939"> 下，设置 </span><code data-lake-id="u0d5ce314" id="u0d5ce314"><span data-lake-id="u2bde8250" id="u2bde8250">format</span></code><span data-lake-id="u43cdf506" id="u43cdf506"> 为 </span><code data-lake-id="ufb960137" id="ufb960137"><span data-lake-id="ubdbe80c7" id="ubdbe80c7">cjs</span></code><span data-lake-id="u0e4a84aa" id="u0e4a84aa"> 给 nodejs 环境使用 ，为了 SSR</span></li></ul><p data-lake-id="u2c0ac16d" id="u2c0ac16d"><br></p><p data-lake-id="u8925491b" id="u8925491b"><span data-lake-id="u7025b675" id="u7025b675">另外，如何打包给 </span><code data-lake-id="u8580c5e3" id="u8580c5e3"><span data-lake-id="ude028b68" id="ude028b68">rollup</span></code><span data-lake-id="u7239b316" id="u7239b316"> 或者 </span><code data-lake-id="u48f898c0" id="u48f898c0"><span data-lake-id="u9e723c32" id="u9e723c32">webpack</span></code><span data-lake-id="ub6c8b672" id="ub6c8b672"> 工具使用呢？ 答案是 </span><code data-lake-id="u24b5bcbe" id="u24b5bcbe"><span data-lake-id="u9847e063" id="u9847e063">esm</span></code><span data-lake-id="u26561762" id="u26561762"> , 但又如何 与   </span><code data-lake-id="u968f4022" id="u968f4022"><span data-lake-id="uba34a2e1" id="uba34a2e1">&lt;script type=&quot;module&quot;&gt;</span></code><span data-lake-id="udbc6ba87" id="udbc6ba87"> 区别呢？ 看 package.json  , 如下 </span><code data-lake-id="uf4a051b3" id="uf4a051b3"><span data-lake-id="ue0b81c00" id="ue0b81c00">代码</span></code><span data-lake-id="uf18db26c" id="uf18db26c"> 和 </span><code data-lake-id="uf58ec299" id="uf58ec299"><span data-lake-id="uace67655" id="uace67655">图片</span></code></p><p data-lake-id="ue1ef3197" id="ue1ef3197"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%5Ct%5C%22main%5C%22%3A%5C%22index.js%5C%22%2C%5Cn%5Ct%5C%22module%5C%22%3A%5C%22dist%2Fvue.runtime.esm-bundler.js%5C%22%2C%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2254de4bbb%22%7D"></card><p data-lake-id="ucd9db66e" id="ucd9db66e"><br></p><p data-lake-id="ub8c8efe5" id="ub8c8efe5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191018366.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1794%2C%22originHeight%22%3A1354%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22jwuZA%22%7D"></card></p><p data-lake-id="ubdff8e8c" id="ubdff8e8c"><br></p><h2 data-lake-id="c310d1e4" id="c310d1e4"><span data-lake-id="ue5195ffc" id="ue5195ffc">5、支持特性开关</span></h2><p data-lake-id="u4b4f6e47" id="u4b4f6e47"><br></p><p data-lake-id="ufd208b3f" id="ufd208b3f"><span data-lake-id="u25c0e9e0" id="u25c0e9e0">比如vue3的 </span><code data-lake-id="ue8ae9555" id="ue8ae9555"><span data-lake-id="uef0c64e8" id="uef0c64e8">组合式 API</span></code><span data-lake-id="u28ff9854" id="u28ff9854"> 和 </span><code data-lake-id="ub62541f7" id="ub62541f7"><span data-lake-id="uff87b8dd" id="uff87b8dd">选项式 API</span></code><span data-lake-id="u94db114f" id="u94db114f">， 如果用户确定只需要使用 </span><code data-lake-id="u653a7980" id="u653a7980"><span data-lake-id="uc82b8772" id="uc82b8772">组合式 API</span></code><span data-lake-id="ueb3c687f" id="ueb3c687f"> ，那么可以通过 设置 </span><code data-lake-id="u6ce2de8c" id="u6ce2de8c"><span data-lake-id="ua53fa550" id="ua53fa550">__VUE_OPTIONS_API__</span></code><span data-lake-id="u7ed9e257" id="u7ed9e257"> 预定于常量来开启或者关闭.</span></p><p data-lake-id="u329a1642" id="u329a1642"><br></p><h2 data-lake-id="910cc6bd" id="910cc6bd"><span data-lake-id="u207eeba8" id="u207eeba8">6、错误处理机制</span></h2><p data-lake-id="uf7ea5de5" id="uf7ea5de5"><br></p><p data-lake-id="u700bb9da" id="u700bb9da"><span data-lake-id="u47608211" id="u47608211">比如一个工具库提供一个 </span><code data-lake-id="ucd4ae9f9" id="ucd4ae9f9"><span data-lake-id="u644d0c09" id="u644d0c09">fetch</span></code><span data-lake-id="u51b267ac" id="u51b267ac"> 方法 ，但使用的方式必须传入回调 </span><code data-lake-id="uce0e9ae9" id="uce0e9ae9"><span data-lake-id="u95d50c6d" id="u95d50c6d">fetch(callback)</span></code><span data-lake-id="u5299e0ba" id="u5299e0ba">，怎么容错呢？三种</span></p><p data-lake-id="ub10cb1c4" id="ub10cb1c4"><br></p><ol list="u71597765"><li fid="u30779ee6" data-lake-id="u787aa107" id="u787aa107"><span data-lake-id="uc4c29811" id="uc4c29811">用户自己 </span><code data-lake-id="u04fb2e6e" id="u04fb2e6e"><span data-lake-id="u49a80c1f" id="u49a80c1f">try catch</span></code><span data-lake-id="uac950639" id="uac950639">，但是如果有很多方法，需要每个都 </span><code data-lake-id="ud2b58950" id="ud2b58950"><span data-lake-id="ufad8917b" id="ufad8917b">try catch</span></code><span data-lake-id="u9cb4a50b" id="u9cb4a50b"> 吗</span></li><li fid="u30779ee6" data-lake-id="u361b2985" id="u361b2985"><span data-lake-id="u8dfd6b7d" id="u8dfd6b7d">用户自己实现一个 </span><code data-lake-id="ud4f94f20" id="ud4f94f20"><span data-lake-id="udfcf086f" id="udfcf086f">handleError</span></code><span data-lake-id="u926c06de" id="u926c06de"> 方法</span></li><li fid="u30779ee6" data-lake-id="u9483b59a" id="u9483b59a"><span data-lake-id="uf5690c50" id="uf5690c50">工具库提一个 </span><code data-lake-id="u74d8a459" id="u74d8a459"><span data-lake-id="u1d57b723" id="u1d57b723">utils.registerErrorHandler</span></code><span data-lake-id="u16976944" id="u16976944"> 静态方法, 用户使用它注册错误处理程序。</span></li></ol><p data-lake-id="uda6f199d" id="uda6f199d"><br></p><p data-lake-id="u9c1d3c21" id="u9c1d3c21"><span data-lake-id="u55ed2016" id="u55ed2016">第 3 种，就是 Vue 的处理方式，</span><code data-lake-id="ua26afe6e" id="ua26afe6e"><span data-lake-id="u9d74cb8b" id="u9d74cb8b">app.config.errorHandler</span></code><span data-lake-id="uc411c391" id="uc411c391">  , 为用户提供更好的框架层面的健壮性。</span></p><p data-lake-id="u5e52c91d" id="u5e52c91d"><br></p><h2 data-lake-id="0ff0beba" id="0ff0beba"><span data-lake-id="uff14288d" id="uff14288d">7、Typescript 支持</span></h2><p data-lake-id="ud9de3a84" id="ud9de3a84"><br></p><p data-lake-id="u6515b61d" id="u6515b61d"><span data-lake-id="u34984373" id="u34984373">完善 Typescript 支持，可能比框架本身还要花精力和时间</span></p><p data-lake-id="u00be8e3f" id="u00be8e3f"><br></p><h2 data-lake-id="d17a0f0b" id="d17a0f0b"><span data-lake-id="uc22d1f59" id="uc22d1f59">参考</span></h2><p data-lake-id="u781342e7" id="u781342e7"><br></p><ul list="u7ad24dcf"><li fid="u73b06222" data-lake-id="uef3400ee" id="uef3400ee"><span data-lake-id="ub5ea2fec" id="ub5ea2fec">《Vue.js 设计与实现》</span></li></ul>`,body_draft_lake:`<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><h2 data-lake-id="14b4ff0d" id="14b4ff0d"><span data-lake-id="u406e303d" id="u406e303d">从Vue3 框架视角来看框架设计的 </span><code data-lake-id="u07b1f71d" id="u07b1f71d"><span data-lake-id="u41bc56c9" id="u41bc56c9">核心要素</span></code></h2><p data-lake-id="u28fa2dbf" id="u28fa2dbf"><br></p><p data-lake-id="u03921bdf" id="u03921bdf"><span data-lake-id="u71acd11b" id="u71acd11b">对于开发一个前端框架来说，有哪些核心要素呢？ 如下：</span></p><p data-lake-id="u67904473" id="u67904473"><br></p><h2 data-lake-id="7042b434" id="7042b434"><span data-lake-id="u5b6709a0" id="u5b6709a0">1、开发体验</span></h2><p data-lake-id="u98db65b0" id="u98db65b0"><br></p><p data-lake-id="u064b51b6" id="u064b51b6"><strong><span data-lake-id="ud56b9df7" id="ud56b9df7">报错警告提示，是否能够让开发者立马定位到问题</span></strong></p><p data-lake-id="u5927cf0e" id="u5927cf0e"><br></p><ul list="ub1623026"><li fid="u74d950ae" data-lake-id="u9b0a1e40" id="u9b0a1e40"><span data-lake-id="u1b8d44be" id="u1b8d44be">比如 如何提示 </span><code data-lake-id="u5eebca9e" id="u5eebca9e"><span data-lake-id="uae668a83" id="uae668a83">App.mount('#app')</span></code><span data-lake-id="u1e992071" id="u1e992071"> 中 </span><code data-lake-id="u24ad541a" id="u24ad541a"><span data-lake-id="u540c18f5" id="u540c18f5">#app</span></code><span data-lake-id="u72787d09" id="u72787d09"> 节点 不存在</span></li></ul><p data-lake-id="ua235a9a2" id="ua235a9a2"><br></p><p data-lake-id="u9d3df4a5" id="u9d3df4a5"><strong><span data-lake-id="u0a49b872" id="u0a49b872">开发调试是否直观？</span></strong></p><p data-lake-id="u8fea8cf7" id="u8fea8cf7"><br></p><ul list="u9a68c538"><li fid="ua71165ba" data-lake-id="ud0928ba0" id="ud0928ba0"><span data-lake-id="u9fc32f66" id="u9fc32f66">比如</span><code data-lake-id="u099d2c79" id="u099d2c79"><span data-lake-id="u2f23597e" id="u2f23597e">const obj = ref()</span></code><span data-lake-id="u9e5931c0" id="u9e5931c0"> ，每次都是打印 </span><code data-lake-id="ucb183c76" id="ucb183c76"><span data-lake-id="u8e498d15" id="u8e498d15">obj</span></code><span data-lake-id="u4f1b6a10" id="u4f1b6a10">的值都需要 </span><code data-lake-id="u82ae00ba" id="u82ae00ba"><span data-lake-id="u8d535c3d" id="u8d535c3d">obj.value</span></code><span data-lake-id="udaf49287" id="udaf49287"> ?  框架层面肯定需要提供好的 log 方式。 </span></li></ul><ul list="u9a68c538" data-lake-indent="1"><li fid="ue10f9e4d" data-lake-id="u45bcfec8" id="u45bcfec8"><span data-lake-id="u7968070a" id="u7968070a">DevTools 提供 </span><code data-lake-id="u7d6c1b48" id="u7d6c1b48"><span data-lake-id="u651d5da5" id="u651d5da5">custom formmaters</span></code><span data-lake-id="u82150dd3" id="u82150dd3"> ，框架层面会提供 </span><code data-lake-id="u564ac31f" id="u564ac31f"><span data-lake-id="ue83f4814" id="ue83f4814">initCustomFormatter</span></code><span data-lake-id="ue553a04a" id="ue553a04a"> 的定义</span></li></ul><p data-lake-id="u428e8c5c" id="u428e8c5c"><br></p><h2 data-lake-id="a17b61ef" id="a17b61ef"><span data-lake-id="u9f87015f" id="u9f87015f">2、控制框架代码体积</span></h2><p data-lake-id="uff3581be" id="uff3581be"><br></p><p data-lake-id="u283465cb" id="u283465cb"><span data-lake-id="ud755eddc" id="ud755eddc">如何做到开发环境下更多提示，而不增加代码体积呢？</span></p><p data-lake-id="ubddb9fed" id="ubddb9fed"><br></p><p data-lake-id="udff7e10a" id="udff7e10a"><span data-lake-id="u7cf119de" id="u7cf119de">需要使用 </span><code data-lake-id="u2dc787ca" id="u2dc787ca"><span data-lake-id="ud6f5fce5" id="ud6f5fce5">roolup 插件</span></code><span data-lake-id="u6e3527ba" id="u6e3527ba"> 或者 </span><code data-lake-id="u479dabee" id="u479dabee"><span data-lake-id="u9411988f" id="u9411988f">webpack 插件</span></code><span data-lake-id="u02b49820" id="u02b49820"> 的 </span><code data-lake-id="u4980be48" id="u4980be48"><span data-lake-id="u497367b9" id="u497367b9">__DEV__常量</span></code><span data-lake-id="ubab5e7a8" id="ubab5e7a8">  来做到这一点，生成环境下形成  </span><code data-lake-id="ua79b7633" id="ua79b7633"><span data-lake-id="u80011972" id="u80011972">dead code</span></code><span data-lake-id="ue76bdbfe" id="ue76bdbfe"> , 在使用打包工具 </span><code data-lake-id="u18f896ae" id="u18f896ae"><span data-lake-id="ua6b2240b" id="ua6b2240b">tree-shaking</span></code><span data-lake-id="u154809f5" id="u154809f5"> 的能力，进行移除</span></p><p data-lake-id="uaa25f917" id="uaa25f917"><br></p><blockquote data-lake-id="u87c992d1" id="u87c992d1"><p data-lake-id="uaa760624" id="uaa760624"><span data-lake-id="u3cf08665" id="u3cf08665">[!tip]<br /></span><code data-lake-id="ue453a153" id="ue453a153"><span data-lake-id="u09f52b0f" id="u09f52b0f">dead code</span></code><span data-lake-id="u2c5b3677" id="u2c5b3677"> 即 永远不会执行的代码，如 </span><code data-lake-id="u812f468a" id="u812f468a"><span data-lake-id="u58851211" id="u58851211">if(true)</span></code><span data-lake-id="ucba06b22" id="ucba06b22"> 或者 </span><code data-lake-id="u508d3715" id="u508d3715"><span data-lake-id="u2bcc7b6c" id="u2bcc7b6c">import 后没使用的模块</span></code><span data-lake-id="u18645b32" id="u18645b32">等</span></p></blockquote><p data-lake-id="u2be53cb2" id="u2be53cb2"><br></p><h2 data-lake-id="2a8ef69b" id="2a8ef69b"><span data-lake-id="u763317fc" id="u763317fc">3、良好的 </span><code data-lake-id="u12f8db19" id="u12f8db19"><span data-lake-id="ubf4d6eff" id="ubf4d6eff">tree-shaking</span></code><span data-lake-id="uecc3d862" id="uecc3d862"> 机制</span></h2><p data-lake-id="u64899c5f" id="u64899c5f"><br></p><p data-lake-id="u4967bfc6" id="u4967bfc6"><span data-lake-id="ud4146ba1" id="ud4146ba1">上面说的</span><code data-lake-id="uc47c9539" id="uc47c9539"><span data-lake-id="uc4236a62" id="uc4236a62">dead code</span></code><span data-lake-id="u7d5ec1b6" id="u7d5ec1b6"> 很容易 被 </span><code data-lake-id="u284611c8" id="u284611c8"><span data-lake-id="u61f603a4" id="u61f603a4">tree-shaking</span></code><span data-lake-id="u39513c53" id="u39513c53">掉，但是</span><code data-lake-id="u1a903d53" id="u1a903d53"><span data-lake-id="ud4b56445" id="ud4b56445">副作用</span></code><span data-lake-id="u4d790357" id="u4d790357"> 呢，因为 </span><code data-lake-id="uf5e6338f" id="uf5e6338f"><span data-lake-id="u5c64e450" id="u5c64e450">proxy</span></code><span data-lake-id="u0772baa8" id="u0772baa8"> 能力</span><code data-lake-id="u519aab55" id="u519aab55"><span data-lake-id="u14bbf01a" id="u14bbf01a">只读每个属性</span></code><span data-lake-id="u2349f1d0" id="u2349f1d0">也可能引起</span><code data-lake-id="uca164fab" id="uca164fab"><span data-lake-id="ub007d0b5" id="ub007d0b5">副作用</span></code><span data-lake-id="ua8af3653" id="ua8af3653">。</span></p><p data-lake-id="ub2cefa55" id="ub2cefa55"><br></p><p data-lake-id="u532c5d3d" id="u532c5d3d"><span data-lake-id="ufe870ac6" id="ufe870ac6">答案是：</span><code data-lake-id="u239571f5" id="u239571f5"><span data-lake-id="u8ade5269" id="u8ade5269">/*#__PURE__*/</span></code><span data-lake-id="u463a42f6" id="u463a42f6">   ， </span><code data-lake-id="u4bdfb9a3" id="u4bdfb9a3"><span data-lake-id="u82882c83" id="u82882c83">rollup</span></code><span data-lake-id="u06a1c45f" id="u06a1c45f"> 和 </span><code data-lake-id="ub11e61a0" id="ub11e61a0"><span data-lake-id="u6ba66084" id="u6ba66084">webpack</span></code><span data-lake-id="u11433649" id="u11433649"> 、</span><code data-lake-id="ufc84c796" id="ufc84c796"><span data-lake-id="u5b0be3a2" id="u5b0be3a2">terser</span></code><span data-lake-id="ub0cd8222" id="ub0cd8222"> 都可以识别它 ，它告诉 打包工具，</span><code data-lake-id="u820f02de" id="u820f02de"><span data-lake-id="u41412353" id="u41412353">放心 tree-shaking 掉吧</span></code></p><p data-lake-id="u4aeaaf77" id="u4aeaaf77"><br></p><h2 data-lake-id="c52c94d0" id="c52c94d0"><span data-lake-id="u5fef1046" id="u5fef1046">4、多种环境下的构建产物不一样</span></h2><p data-lake-id="ue5e7e75a" id="ue5e7e75a"><br></p><p data-lake-id="u97aaaf36" id="u97aaaf36"><span data-lake-id="u96eca157" id="u96eca157">比如：</span></p><p data-lake-id="u6d394b8e" id="u6d394b8e"><br></p><ul list="uff56f1c3"><li fid="u61f2b110" data-lake-id="ueb399b36" id="ueb399b36"><code data-lake-id="u6ab7ff2f" id="u6ab7ff2f"><span data-lake-id="u589b5e4f" id="u589b5e4f">rollup</span></code><span data-lake-id="u898ee1b5" id="u898ee1b5"> 下，设置 </span><code data-lake-id="u8eaf5ae4" id="u8eaf5ae4"><span data-lake-id="u9b9f1759" id="u9b9f1759">format</span></code><span data-lake-id="u72a310a9" id="u72a310a9"> 为 </span><code data-lake-id="u495af857" id="u495af857"><span data-lake-id="u3f228442" id="u3f228442">iife</span></code><span data-lake-id="uc3b31499" id="uc3b31499"> 给 </span><code data-lake-id="u2c6e9e89" id="u2c6e9e89"><span data-lake-id="ud8e1db0e" id="ud8e1db0e">script</span></code><span data-lake-id="u471cd6b1" id="u471cd6b1"> 标签直接使用</span></li><li fid="u61f2b110" data-lake-id="u43bb8605" id="u43bb8605"><code data-lake-id="u50ede69a" id="u50ede69a"><span data-lake-id="u2116efdf" id="u2116efdf">rollup</span></code><span data-lake-id="ud51be1ab" id="ud51be1ab"> 下，设置 </span><code data-lake-id="uc452f9f6" id="uc452f9f6"><span data-lake-id="u6c858252" id="u6c858252">format</span></code><span data-lake-id="u42a9bec7" id="u42a9bec7"> 为 </span><code data-lake-id="u3c0490ab" id="u3c0490ab"><span data-lake-id="u0c1cd211" id="u0c1cd211">esm</span></code><span data-lake-id="u48ba8ab0" id="u48ba8ab0"> 给 </span><code data-lake-id="uf83a00fc" id="uf83a00fc"><span data-lake-id="u5c25bae3" id="u5c25bae3">&lt;script type=&quot;module&quot;&gt;</span></code><span data-lake-id="u9b1a645e" id="u9b1a645e"> 直接使用</span></li><li fid="u61f2b110" data-lake-id="uc1d2ad8c" id="uc1d2ad8c"><code data-lake-id="u1c7fddfa" id="u1c7fddfa"><span data-lake-id="u421c68a0" id="u421c68a0">rollup</span></code><span data-lake-id="u8993f939" id="u8993f939"> 下，设置 </span><code data-lake-id="u0d5ce314" id="u0d5ce314"><span data-lake-id="u2bde8250" id="u2bde8250">format</span></code><span data-lake-id="u43cdf506" id="u43cdf506"> 为 </span><code data-lake-id="ufb960137" id="ufb960137"><span data-lake-id="ubdbe80c7" id="ubdbe80c7">cjs</span></code><span data-lake-id="u0e4a84aa" id="u0e4a84aa"> 给 nodejs 环境使用 ，为了 SSR</span></li></ul><p data-lake-id="u2c0ac16d" id="u2c0ac16d"><br></p><p data-lake-id="u8925491b" id="u8925491b"><span data-lake-id="u7025b675" id="u7025b675">另外，如何打包给 </span><code data-lake-id="u8580c5e3" id="u8580c5e3"><span data-lake-id="ude028b68" id="ude028b68">rollup</span></code><span data-lake-id="u7239b316" id="u7239b316"> 或者 </span><code data-lake-id="u48f898c0" id="u48f898c0"><span data-lake-id="u9e723c32" id="u9e723c32">webpack</span></code><span data-lake-id="ub6c8b672" id="ub6c8b672"> 工具使用呢？ 答案是 </span><code data-lake-id="u24b5bcbe" id="u24b5bcbe"><span data-lake-id="u9847e063" id="u9847e063">esm</span></code><span data-lake-id="u26561762" id="u26561762"> , 但又如何 与   </span><code data-lake-id="u968f4022" id="u968f4022"><span data-lake-id="uba34a2e1" id="uba34a2e1">&lt;script type=&quot;module&quot;&gt;</span></code><span data-lake-id="udbc6ba87" id="udbc6ba87"> 区别呢？ 看 package.json  , 如下 </span><code data-lake-id="uf4a051b3" id="uf4a051b3"><span data-lake-id="ue0b81c00" id="ue0b81c00">代码</span></code><span data-lake-id="uf18db26c" id="uf18db26c"> 和 </span><code data-lake-id="uf58ec299" id="uf58ec299"><span data-lake-id="uace67655" id="uace67655">图片</span></code></p><p data-lake-id="ue1ef3197" id="ue1ef3197"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%5Ct%5C%22main%5C%22%3A%5C%22index.js%5C%22%2C%5Cn%5Ct%5C%22module%5C%22%3A%5C%22dist%2Fvue.runtime.esm-bundler.js%5C%22%2C%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2254de4bbb%22%7D"></card><p data-lake-id="ucd9db66e" id="ucd9db66e"><br></p><p data-lake-id="ub8c8efe5" id="ub8c8efe5"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303191018366.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1794%2C%22originHeight%22%3A1354%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22jwuZA%22%7D"></card></p><p data-lake-id="ubdff8e8c" id="ubdff8e8c"><br></p><h2 data-lake-id="c310d1e4" id="c310d1e4"><span data-lake-id="ue5195ffc" id="ue5195ffc">5、支持特性开关</span></h2><p data-lake-id="u4b4f6e47" id="u4b4f6e47"><br></p><p data-lake-id="ufd208b3f" id="ufd208b3f"><span data-lake-id="u25c0e9e0" id="u25c0e9e0">比如vue3的 </span><code data-lake-id="ue8ae9555" id="ue8ae9555"><span data-lake-id="uef0c64e8" id="uef0c64e8">组合式 API</span></code><span data-lake-id="u28ff9854" id="u28ff9854"> 和 </span><code data-lake-id="ub62541f7" id="ub62541f7"><span data-lake-id="uff87b8dd" id="uff87b8dd">选项式 API</span></code><span data-lake-id="u94db114f" id="u94db114f">， 如果用户确定只需要使用 </span><code data-lake-id="u653a7980" id="u653a7980"><span data-lake-id="uc82b8772" id="uc82b8772">组合式 API</span></code><span data-lake-id="ueb3c687f" id="ueb3c687f"> ，那么可以通过 设置 </span><code data-lake-id="u6ce2de8c" id="u6ce2de8c"><span data-lake-id="ua53fa550" id="ua53fa550">__VUE_OPTIONS_API__</span></code><span data-lake-id="u7ed9e257" id="u7ed9e257"> 预定于常量来开启或者关闭.</span></p><p data-lake-id="u329a1642" id="u329a1642"><br></p><h2 data-lake-id="910cc6bd" id="910cc6bd"><span data-lake-id="u207eeba8" id="u207eeba8">6、错误处理机制</span></h2><p data-lake-id="uf7ea5de5" id="uf7ea5de5"><br></p><p data-lake-id="u700bb9da" id="u700bb9da"><span data-lake-id="u47608211" id="u47608211">比如一个工具库提供一个 </span><code data-lake-id="ucd4ae9f9" id="ucd4ae9f9"><span data-lake-id="u644d0c09" id="u644d0c09">fetch</span></code><span data-lake-id="u51b267ac" id="u51b267ac"> 方法 ，但使用的方式必须传入回调 </span><code data-lake-id="uce0e9ae9" id="uce0e9ae9"><span data-lake-id="u95d50c6d" id="u95d50c6d">fetch(callback)</span></code><span data-lake-id="u5299e0ba" id="u5299e0ba">，怎么容错呢？三种</span></p><p data-lake-id="ub10cb1c4" id="ub10cb1c4"><br></p><ol list="u71597765"><li fid="u30779ee6" data-lake-id="u787aa107" id="u787aa107"><span data-lake-id="uc4c29811" id="uc4c29811">用户自己 </span><code data-lake-id="u04fb2e6e" id="u04fb2e6e"><span data-lake-id="u49a80c1f" id="u49a80c1f">try catch</span></code><span data-lake-id="uac950639" id="uac950639">，但是如果有很多方法，需要每个都 </span><code data-lake-id="ud2b58950" id="ud2b58950"><span data-lake-id="ufad8917b" id="ufad8917b">try catch</span></code><span data-lake-id="u9cb4a50b" id="u9cb4a50b"> 吗</span></li><li fid="u30779ee6" data-lake-id="u361b2985" id="u361b2985"><span data-lake-id="u8dfd6b7d" id="u8dfd6b7d">用户自己实现一个 </span><code data-lake-id="ud4f94f20" id="ud4f94f20"><span data-lake-id="udfcf086f" id="udfcf086f">handleError</span></code><span data-lake-id="u926c06de" id="u926c06de"> 方法</span></li><li fid="u30779ee6" data-lake-id="u9483b59a" id="u9483b59a"><span data-lake-id="uf5690c50" id="uf5690c50">工具库提一个 </span><code data-lake-id="u74d8a459" id="u74d8a459"><span data-lake-id="u1d57b723" id="u1d57b723">utils.registerErrorHandler</span></code><span data-lake-id="u16976944" id="u16976944"> 静态方法, 用户使用它注册错误处理程序。</span></li></ol><p data-lake-id="uda6f199d" id="uda6f199d"><br></p><p data-lake-id="u9c1d3c21" id="u9c1d3c21"><span data-lake-id="u55ed2016" id="u55ed2016">第 3 种，就是 Vue 的处理方式，</span><code data-lake-id="ua26afe6e" id="ua26afe6e"><span data-lake-id="u9d74cb8b" id="u9d74cb8b">app.config.errorHandler</span></code><span data-lake-id="uc411c391" id="uc411c391">  , 为用户提供更好的框架层面的健壮性。</span></p><p data-lake-id="u5e52c91d" id="u5e52c91d"><br></p><h2 data-lake-id="0ff0beba" id="0ff0beba"><span data-lake-id="uff14288d" id="uff14288d">7、Typescript 支持</span></h2><p data-lake-id="ud9de3a84" id="ud9de3a84"><br></p><p data-lake-id="u6515b61d" id="u6515b61d"><span data-lake-id="u34984373" id="u34984373">完善 Typescript 支持，可能比框架本身还要花精力和时间</span></p><p data-lake-id="u00be8e3f" id="u00be8e3f"><br></p><h2 data-lake-id="d17a0f0b" id="d17a0f0b"><span data-lake-id="uc22d1f59" id="uc22d1f59">参考</span></h2><p data-lake-id="u781342e7" id="u781342e7"><br></p><ul list="u7ad24dcf"><li fid="u73b06222" data-lake-id="uef3400ee" id="uef3400ee"><span data-lake-id="ub5ea2fec" id="ub5ea2fec">《Vue.js 设计与实现》</span></li></ul>`,public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-19T02:56:44.000Z",deleted_at:null,created_at:"2023-03-19T02:56:07.000Z",updated_at:"2023-03-19T11:42:31.000Z",published_at:"2023-03-19T02:56:44.000Z",first_published_at:"2023-03-19T02:56:43.958Z",word_count:686,cover:null,description:"从Vue3 框架视角来看框架设计的 核心要素对于开发一个前端框架来说，有哪些核心要素呢？ 如下：1、开发体验报错警告提示，是否能够让开发者立马定位到问题比如 如何提示 App.mount('#app') 中 #app 节点 不存在开发调试是否直观？比如const obj = ref() ，每次...",custom_description:null,hits:0,_serializer:"v2.doc_detail"},{id:118493258,slug:"fz57fyiev1ugyqmc",title:"0005.FE.再说说回流及重绘",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:'#fe #渲染  #css\n<a name="ODzV6"></a>\n# 再说说回流及重绘\n<a name="ab266e49"></a>\n## 先看定义\n\n`回流`：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置\n\n`重绘`：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制\n\n`重绘`不一定导致`重排`，但`重排`一定会导致`重绘`  ，如下图：\n\n![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181222365.png#id=GKCEs&originHeight=744&originWidth=1854&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)\n\n<a name="9227c401"></a>\n## 导致`回流`的场景\n\n- 页面`首次渲染`\n- 浏览器`窗口大小`发生改变\n- 元素`尺寸或位置`发生改变\n- 元素内容变化（`文字数量`或`图片大小`等等）\n- 元素`字体大小`变化\n- `添加或者删除`可见的DOM元素\n- 激活CSS伪类（例如：`:hover`）\n- `calc()` 本身不会引起 `回流`，但是因为需要重新计算布局的属性，比如父元素的宽度改变了，那必然会导致子元素的一个 `回流`\n- `查询某些属性`或`调用某些方法` \n   - `dom.style.width/height` ，只能取`行内样式的宽和高`，`style` 中 `link` 外链取不到。可写，修改时会导致`重排`\n   - `window.getComputedStyle(dom).width/height`，指定`第二参数`指定一个要匹配的伪元素的字符串。必须对普通元素省略（`或null`） ， \n      - 读取的样式是`最终样式`，包括了内联样式、嵌入样式和外部样式\n      - 比如`getComputedStyle(h3, \'::after\').content`\n      - 会导致`回流` 因为它需要获取祖先节点的一些信息进行计算（譬如宽高等），为求一个`“即时性”`和`“准确性”`。\n   - `dom.getBoundingClientRect().width/height 、top/left/right/bottom`  得到`渲染后的宽和高`，及`相对于视窗的上下左右`的距离\n   - 获取`布局信息`时，会导致`重排`。相关的方法属性如 `offsetTop`   `getComputedStyle` 等\n   - `scrollIntoView()`、`scrollIntoViewIfNeeded()` 、 `scrollTo()` 滚动时，会导致`重排`\n\n> [!info]<br />总之， `查询某些属性`或`调用某些方法` 是否会导致重排，关键需要看  `只读了` ，还是有`写入`操作<br />``\n\n\n> [!warning]<br />另外一些容易被忽略的操作：如 getComputedStyle，  offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight 这些属性有一个共性，就是需要通过**即时计算**得到。因此浏览器为了获取这些值，也会进行`回流`\n\n\n<a name="6c5a2aaa"></a>\n## opacity、display 和 visibility\n\n- 修改 `opacity` 和 `visibility` 属性通常只会触发`重绘`，而不会触发`回流`\n- 而修改 `display` 属性则可能会触发`回流和重绘`\n\n![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181135472.png#id=EE28t&originHeight=236&originWidth=1320&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)\n\n<a name="d2dc9a84"></a>\n## 修改  `left` 和 `right`\n\n一般情况下，如果只是修改 `left` 和 `right`  的值，不会导致 `回流`，因为脱离文档流，但同时改变其他属性值，会导致 `重排`\n\n<a name="2eeaffd1"></a>\n## 一些建议\n\n- `transform` 代替 `top/left`\n- `position: absolute、fixed`  脱离文档流，以避免对其他元素布局的影响。\n- 避免使用 `table` 布局\n- 避免多次回流，尽量`批量操作` \n   - 使用`documentFragment` 一次性插入文档中\n   - `classList.add/remove/toggle` 来切换样式，而不是直接修改 style 属性\n- 避免使用`CSS表达式`（如：`calc()`）\n- 使用`css3硬件加速`，`可以让transform`、`opacity`、`filters` 这些动画不会引起`回流重绘`\n- `离线操作思路` ，及设置 `display:none`  ，其实也是 批量操作的一种思路\n',body_draft:'#fe #渲染  #css\n<a name="ODzV6"></a>\n# 再说说回流及重绘\n<a name="ab266e49"></a>\n## 先看定义\n\n`回流`：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置\n\n`重绘`：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制\n\n`重绘`不一定导致`重排`，但`重排`一定会导致`重绘`  ，如下图：\n\n![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181222365.png#id=GKCEs&originHeight=744&originWidth=1854&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)\n\n<a name="9227c401"></a>\n## 导致`回流`的场景\n\n- 页面`首次渲染`\n- 浏览器`窗口大小`发生改变\n- 元素`尺寸或位置`发生改变\n- 元素内容变化（`文字数量`或`图片大小`等等）\n- 元素`字体大小`变化\n- `添加或者删除`可见的DOM元素\n- 激活CSS伪类（例如：`:hover`）\n- `calc()` 本身不会引起 `回流`，但是因为需要重新计算布局的属性，比如父元素的宽度改变了，那必然会导致子元素的一个 `回流`\n- `查询某些属性`或`调用某些方法` \n   - `dom.style.width/height` ，只能取`行内样式的宽和高`，`style` 中 `link` 外链取不到。可写，修改时会导致`重排`\n   - `window.getComputedStyle(dom).width/height`，指定`第二参数`指定一个要匹配的伪元素的字符串。必须对普通元素省略（`或null`） ， \n      - 读取的样式是`最终样式`，包括了内联样式、嵌入样式和外部样式\n      - 比如`getComputedStyle(h3, \'::after\').content`\n      - 会导致`回流` 因为它需要获取祖先节点的一些信息进行计算（譬如宽高等），为求一个`“即时性”`和`“准确性”`。\n   - `dom.getBoundingClientRect().width/height 、top/left/right/bottom`  得到`渲染后的宽和高`，及`相对于视窗的上下左右`的距离\n   - 获取`布局信息`时，会导致`重排`。相关的方法属性如 `offsetTop`   `getComputedStyle` 等\n   - `scrollIntoView()`、`scrollIntoViewIfNeeded()` 、 `scrollTo()` 滚动时，会导致`重排`\n\n> [!info]<br />总之， `查询某些属性`或`调用某些方法` 是否会导致重排，关键需要看  `只读了` ，还是有`写入`操作<br />``\n\n\n> [!warning]<br />另外一些容易被忽略的操作：如 getComputedStyle，  offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight 这些属性有一个共性，就是需要通过**即时计算**得到。因此浏览器为了获取这些值，也会进行`回流`\n\n\n<a name="6c5a2aaa"></a>\n## opacity、display 和 visibility\n\n- 修改 `opacity` 和 `visibility` 属性通常只会触发`重绘`，而不会触发`回流`\n- 而修改 `display` 属性则可能会触发`回流和重绘`\n\n![](https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181135472.png#id=EE28t&originHeight=236&originWidth=1320&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=)\n\n<a name="d2dc9a84"></a>\n## 修改  `left` 和 `right`\n\n一般情况下，如果只是修改 `left` 和 `right`  的值，不会导致 `回流`，因为脱离文档流，但同时改变其他属性值，会导致 `重排`\n\n<a name="2eeaffd1"></a>\n## 一些建议\n\n- `transform` 代替 `top/left`\n- `position: absolute、fixed`  脱离文档流，以避免对其他元素布局的影响。\n- 避免使用 `table` 布局\n- 避免多次回流，尽量`批量操作` \n   - 使用`documentFragment` 一次性插入文档中\n   - `classList.add/remove/toggle` 来切换样式，而不是直接修改 style 属性\n- 避免使用`CSS表达式`（如：`calc()`）\n- 使用`css3硬件加速`，`可以让transform`、`opacity`、`filters` 这些动画不会引起`回流重绘`\n- `离线操作思路` ，及设置 `display:none`  ，其实也是 批量操作的一种思路\n',body_html:'<!doctype html><div class="lake-content" typography="classic"><p id="u393c70e6" class="ne-p"><span class="ne-text">#fe #渲染  #css</span></p><h1 id="ODzV6"><span class="ne-text">再说说回流及重绘</span></h1><h2 id="ab266e49"><span class="ne-text">先看定义</span></h2><p id="ub38e5db9" class="ne-p"><br></p><p id="u5b59227a" class="ne-p"><code class="ne-code"><span class="ne-text">回流</span></code><span class="ne-text">：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置</span></p><p id="ufab8e55b" class="ne-p"><br></p><p id="u64334e2a" class="ne-p"><code class="ne-code"><span class="ne-text">重绘</span></code><span class="ne-text">：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制</span></p><p id="ufff30a4b" class="ne-p"><br></p><p id="u57afb47d" class="ne-p"><code class="ne-code"><span class="ne-text">重绘</span></code><span class="ne-text">不一定导致</span><code class="ne-code"><span class="ne-text">重排</span></code><span class="ne-text">，但</span><code class="ne-code"><span class="ne-text">重排</span></code><span class="ne-text">一定会导致</span><code class="ne-code"><span class="ne-text">重绘</span></code><span class="ne-text">  ，如下图：</span></p><p id="u6969188a" class="ne-p"><br></p><p id="u0aa32300" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181222365.png" width="1854" id="GKCEs" class="ne-image"></p><p id="ue7815c78" class="ne-p"><br></p><h2 id="9227c401"><span class="ne-text">导致</span><code class="ne-code"><span class="ne-text">回流</span></code><span class="ne-text">的场景</span></h2><p id="u28f16f22" class="ne-p"><br></p><ul class="ne-ul"><li id="u88b3d658"><span class="ne-text">页面</span><code class="ne-code"><span class="ne-text">首次渲染</span></code></li><li id="u4e8cdab9"><span class="ne-text">浏览器</span><code class="ne-code"><span class="ne-text">窗口大小</span></code><span class="ne-text">发生改变</span></li><li id="ue4dfb2fe"><span class="ne-text">元素</span><code class="ne-code"><span class="ne-text">尺寸或位置</span></code><span class="ne-text">发生改变</span></li><li id="ufd4a93d0"><span class="ne-text">元素内容变化（</span><code class="ne-code"><span class="ne-text">文字数量</span></code><span class="ne-text">或</span><code class="ne-code"><span class="ne-text">图片大小</span></code><span class="ne-text">等等）</span></li><li id="uf555fba2"><span class="ne-text">元素</span><code class="ne-code"><span class="ne-text">字体大小</span></code><span class="ne-text">变化</span></li><li id="ued1f0424"><code class="ne-code"><span class="ne-text">添加或者删除</span></code><span class="ne-text">可见的DOM元素</span></li><li id="u53fa732e"><span class="ne-text">激活CSS伪类（例如：</span><code class="ne-code"><span class="ne-text">:hover</span></code><span class="ne-text">）</span></li><li id="u763663b2"><code class="ne-code"><span class="ne-text">calc()</span></code><span class="ne-text"> 本身不会引起 </span><code class="ne-code"><span class="ne-text">回流</span></code><span class="ne-text">，但是因为需要重新计算布局的属性，比如父元素的宽度改变了，那必然会导致子元素的一个 </span><code class="ne-code"><span class="ne-text">回流</span></code></li><li id="uafd1f135"><code class="ne-code"><span class="ne-text">查询某些属性</span></code><span class="ne-text">或</span><code class="ne-code"><span class="ne-text">调用某些方法</span></code><span class="ne-text"> </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="ua2fc7c81"><code class="ne-code"><span class="ne-text">dom.style.width/height</span></code><span class="ne-text"> ，只能取</span><code class="ne-code"><span class="ne-text">行内样式的宽和高</span></code><span class="ne-text">，</span><code class="ne-code"><span class="ne-text">style</span></code><span class="ne-text"> 中 </span><code class="ne-code"><span class="ne-text">link</span></code><span class="ne-text"> 外链取不到。可写，修改时会导致</span><code class="ne-code"><span class="ne-text">重排</span></code></li><li id="u482788b1"><code class="ne-code"><span class="ne-text">window.getComputedStyle(dom).width/height</span></code><span class="ne-text">，指定</span><code class="ne-code"><span class="ne-text">第二参数</span></code><span class="ne-text">指定一个要匹配的伪元素的字符串。必须对普通元素省略（</span><code class="ne-code"><span class="ne-text">或null</span></code><span class="ne-text">） ， </span></li></ul></ul><ul class="ne-list-wrap"><ul class="ne-list-wrap"><ul ne-level="2" class="ne-ul"><li id="u1b80f82e"><span class="ne-text">读取的样式是</span><code class="ne-code"><span class="ne-text">最终样式</span></code><span class="ne-text">，包括了内联样式、嵌入样式和外部样式</span></li><li id="ucbc9d9e2"><span class="ne-text">比如</span><code class="ne-code"><span class="ne-text">getComputedStyle(h3, \'::after\').content</span></code></li><li id="uf274cf08"><span class="ne-text">会导致</span><code class="ne-code"><span class="ne-text">回流</span></code><span class="ne-text"> 因为它需要获取祖先节点的一些信息进行计算（譬如宽高等），为求一个</span><code class="ne-code"><span class="ne-text">“即时性”</span></code><span class="ne-text">和</span><code class="ne-code"><span class="ne-text">“准确性”</span></code><span class="ne-text">。</span></li></ul></ul></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="uc4546325"><code class="ne-code"><span class="ne-text">dom.getBoundingClientRect().width/height 、top/left/right/bottom</span></code><span class="ne-text">  得到</span><code class="ne-code"><span class="ne-text">渲染后的宽和高</span></code><span class="ne-text">，及</span><code class="ne-code"><span class="ne-text">相对于视窗的上下左右</span></code><span class="ne-text">的距离</span></li><li id="u80511970"><span class="ne-text">获取</span><code class="ne-code"><span class="ne-text">布局信息</span></code><span class="ne-text">时，会导致</span><code class="ne-code"><span class="ne-text">重排</span></code><span class="ne-text">。相关的方法属性如 </span><code class="ne-code"><span class="ne-text">offsetTop</span></code><span class="ne-text">   </span><code class="ne-code"><span class="ne-text">getComputedStyle</span></code><span class="ne-text"> 等</span></li><li id="u5afa689d"><code class="ne-code"><span class="ne-text">scrollIntoView()</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">scrollIntoViewIfNeeded()</span></code><span class="ne-text"> 、 </span><code class="ne-code"><span class="ne-text">scrollTo()</span></code><span class="ne-text"> 滚动时，会导致</span><code class="ne-code"><span class="ne-text">重排</span></code></li></ul></ul><p id="ua29fecc8" class="ne-p"><br></p><div class="ne-quote"><p id="ucf974fad" class="ne-p"><span class="ne-text">[!info]<br /></span><span class="ne-text">总之， </span><code class="ne-code"><span class="ne-text">查询某些属性</span></code><span class="ne-text">或</span><code class="ne-code"><span class="ne-text">调用某些方法</span></code><span class="ne-text"> 是否会导致重排，关键需要看  </span><code class="ne-code"><span class="ne-text">只读了</span></code><span class="ne-text"> ，还是有</span><code class="ne-code"><span class="ne-text">写入</span></code><span class="ne-text">操作<br /></span><span class="ne-text">``</span></p></div><p id="u72c83205" class="ne-p"><br></p><div class="ne-quote"><p id="ue56824fd" class="ne-p"><span class="ne-text">[!warning]<br /></span><span class="ne-text">另外一些容易被忽略的操作：如 getComputedStyle，  offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight 这些属性有一个共性，就是需要通过</span><strong><span class="ne-text">即时计算</span></strong><span class="ne-text">得到。因此浏览器为了获取这些值，也会进行</span><code class="ne-code"><span class="ne-text">回流</span></code></p></div><p id="ubb924186" class="ne-p"><br></p><h2 id="6c5a2aaa"><span class="ne-text">opacity、display 和 visibility</span></h2><p id="ude54eac7" class="ne-p"><br></p><ul class="ne-ul"><li id="u231c62b7"><span class="ne-text">修改 </span><code class="ne-code"><span class="ne-text">opacity</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">visibility</span></code><span class="ne-text"> 属性通常只会触发</span><code class="ne-code"><span class="ne-text">重绘</span></code><span class="ne-text">，而不会触发</span><code class="ne-code"><span class="ne-text">回流</span></code></li><li id="ue7ae47bd"><span class="ne-text">而修改 </span><code class="ne-code"><span class="ne-text">display</span></code><span class="ne-text"> 属性则可能会触发</span><code class="ne-code"><span class="ne-text">回流和重绘</span></code></li></ul><p id="ucf334627" class="ne-p"><br></p><p id="u7e458799" class="ne-p"><img src="https://od-1310531898.cos.ap-beijing.myqcloud.com/202303181135472.png" width="1320" id="EE28t" class="ne-image"></p><p id="ua0e7ed43" class="ne-p"><br></p><h2 id="d2dc9a84"><span class="ne-text">修改  </span><code class="ne-code"><span class="ne-text">left</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">right</span></code></h2><p id="ue14e9792" class="ne-p"><br></p><p id="u3e4fb55b" class="ne-p"><span class="ne-text">一般情况下，如果只是修改 </span><code class="ne-code"><span class="ne-text">left</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">right</span></code><span class="ne-text">  的值，不会导致 </span><code class="ne-code"><span class="ne-text">回流</span></code><span class="ne-text">，因为脱离文档流，但同时改变其他属性值，会导致 </span><code class="ne-code"><span class="ne-text">重排</span></code></p><p id="u93d1d1b5" class="ne-p"><br></p><h2 id="2eeaffd1"><span class="ne-text">一些建议</span></h2><p id="u49484824" class="ne-p"><br></p><ul class="ne-ul"><li id="uc1e8f4a1"><code class="ne-code"><span class="ne-text">transform</span></code><span class="ne-text"> 代替 </span><code class="ne-code"><span class="ne-text">top/left</span></code></li><li id="ueaf7255c"><code class="ne-code"><span class="ne-text">position: absolute、fixed</span></code><span class="ne-text">  脱离文档流，以避免对其他元素布局的影响。</span></li><li id="uc06564af"><span class="ne-text">避免使用 </span><code class="ne-code"><span class="ne-text">table</span></code><span class="ne-text"> 布局</span></li><li id="u37b47ffe"><span class="ne-text">避免多次回流，尽量</span><code class="ne-code"><span class="ne-text">批量操作</span></code><span class="ne-text"> </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="u75e7314b"><span class="ne-text">使用</span><code class="ne-code"><span class="ne-text">documentFragment</span></code><span class="ne-text"> 一次性插入文档中</span></li><li id="u0912c588"><code class="ne-code"><span class="ne-text">classList.add/remove/toggle</span></code><span class="ne-text"> 来切换样式，而不是直接修改 style 属性</span></li></ul></ul><ul class="ne-ul"><li id="ua904141d"><span class="ne-text">避免使用</span><code class="ne-code"><span class="ne-text">CSS表达式</span></code><span class="ne-text">（如：</span><code class="ne-code"><span class="ne-text">calc()</span></code><span class="ne-text">）</span></li><li id="u53bc40dd"><span class="ne-text">使用</span><code class="ne-code"><span class="ne-text">css3硬件加速</span></code><span class="ne-text">，</span><code class="ne-code"><span class="ne-text">可以让transform</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">opacity</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">filters</span></code><span class="ne-text"> 这些动画不会引起</span><code class="ne-code"><span class="ne-text">回流重绘</span></code></li><li id="u341fd323"><code class="ne-code"><span class="ne-text">离线操作思路</span></code><span class="ne-text"> ，及设置 </span><code class="ne-code"><span class="ne-text">display:none</span></code><span class="ne-text">  ，其实也是 批量操作的一种思路</span></li></ul></div>',body_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><p data-lake-id="u393c70e6" id="u393c70e6"><span data-lake-id="ufefbfd0b" id="ufefbfd0b">#fe #渲染  #css</span></p><h1 data-lake-id="ODzV6" id="ODzV6"><span data-lake-id="u7629f70c" id="u7629f70c">再说说回流及重绘</span></h1><h2 data-lake-id="ab266e49" id="ab266e49"><span data-lake-id="u6ae87d11" id="u6ae87d11">先看定义</span></h2><p data-lake-id="ub38e5db9" id="ub38e5db9"><br></p><p data-lake-id="u5b59227a" id="u5b59227a"><code data-lake-id="ufdfdeddf" id="ufdfdeddf"><span data-lake-id="u273468c3" id="u273468c3">回流</span></code><span data-lake-id="ufab54dff" id="ufab54dff">：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置</span></p><p data-lake-id="ufab8e55b" id="ufab8e55b"><br></p><p data-lake-id="u64334e2a" id="u64334e2a"><code data-lake-id="u116fd241" id="u116fd241"><span data-lake-id="uf0d0115d" id="uf0d0115d">重绘</span></code><span data-lake-id="u82c2b13f" id="u82c2b13f">：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制</span></p><p data-lake-id="ufff30a4b" id="ufff30a4b"><br></p><p data-lake-id="u57afb47d" id="u57afb47d"><code data-lake-id="u97b45565" id="u97b45565"><span data-lake-id="u262a16ed" id="u262a16ed">重绘</span></code><span data-lake-id="u4b4c4aa9" id="u4b4c4aa9">不一定导致</span><code data-lake-id="uae144e93" id="uae144e93"><span data-lake-id="u5878c7ea" id="u5878c7ea">重排</span></code><span data-lake-id="uded278bd" id="uded278bd">，但</span><code data-lake-id="u277c1a53" id="u277c1a53"><span data-lake-id="uc376ecba" id="uc376ecba">重排</span></code><span data-lake-id="ub56c08cd" id="ub56c08cd">一定会导致</span><code data-lake-id="u37bbc400" id="u37bbc400"><span data-lake-id="u464997ec" id="u464997ec">重绘</span></code><span data-lake-id="u2632392b" id="u2632392b">  ，如下图：</span></p><p data-lake-id="u6969188a" id="u6969188a"><br></p><p data-lake-id="u0aa32300" id="u0aa32300"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181222365.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1854%2C%22originHeight%22%3A744%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22GKCEs%22%7D"></card></p><p data-lake-id="ue7815c78" id="ue7815c78"><br></p><h2 data-lake-id="9227c401" id="9227c401"><span data-lake-id="u445b0eac" id="u445b0eac">导致</span><code data-lake-id="uc9abf3d7" id="uc9abf3d7"><span data-lake-id="ua002a091" id="ua002a091">回流</span></code><span data-lake-id="ua129d342" id="ua129d342">的场景</span></h2><p data-lake-id="u28f16f22" id="u28f16f22"><br></p><ul list="u2b76dd8a"><li fid="u6cd9aef6" data-lake-id="u88b3d658" id="u88b3d658"><span data-lake-id="ub55e1ef9" id="ub55e1ef9">页面</span><code data-lake-id="u96fe86e3" id="u96fe86e3"><span data-lake-id="u0e77c5cb" id="u0e77c5cb">首次渲染</span></code></li><li fid="u6cd9aef6" data-lake-id="u4e8cdab9" id="u4e8cdab9"><span data-lake-id="ud847d2d9" id="ud847d2d9">浏览器</span><code data-lake-id="u292b9307" id="u292b9307"><span data-lake-id="u406933d0" id="u406933d0">窗口大小</span></code><span data-lake-id="u731b50ac" id="u731b50ac">发生改变</span></li><li fid="u6cd9aef6" data-lake-id="ue4dfb2fe" id="ue4dfb2fe"><span data-lake-id="u28d41bbc" id="u28d41bbc">元素</span><code data-lake-id="u2abaf8ff" id="u2abaf8ff"><span data-lake-id="ud5f654c5" id="ud5f654c5">尺寸或位置</span></code><span data-lake-id="ued5082eb" id="ued5082eb">发生改变</span></li><li fid="u6cd9aef6" data-lake-id="ufd4a93d0" id="ufd4a93d0"><span data-lake-id="u08385157" id="u08385157">元素内容变化（</span><code data-lake-id="u21b9d389" id="u21b9d389"><span data-lake-id="uf06f2daa" id="uf06f2daa">文字数量</span></code><span data-lake-id="u32814f73" id="u32814f73">或</span><code data-lake-id="u918fb0d6" id="u918fb0d6"><span data-lake-id="uc4470ff9" id="uc4470ff9">图片大小</span></code><span data-lake-id="ueda2e64c" id="ueda2e64c">等等）</span></li><li fid="u6cd9aef6" data-lake-id="uf555fba2" id="uf555fba2"><span data-lake-id="ub2af2cbf" id="ub2af2cbf">元素</span><code data-lake-id="u76d8b3bc" id="u76d8b3bc"><span data-lake-id="uf61671fa" id="uf61671fa">字体大小</span></code><span data-lake-id="u59280639" id="u59280639">变化</span></li><li fid="u6cd9aef6" data-lake-id="ued1f0424" id="ued1f0424"><code data-lake-id="uc56bda2b" id="uc56bda2b"><span data-lake-id="uf867c24a" id="uf867c24a">添加或者删除</span></code><span data-lake-id="ue4729b53" id="ue4729b53">可见的DOM元素</span></li><li fid="u6cd9aef6" data-lake-id="u53fa732e" id="u53fa732e"><span data-lake-id="u0840646e" id="u0840646e">激活CSS伪类（例如：</span><code data-lake-id="ub2f55a15" id="ub2f55a15"><span data-lake-id="ua0e303b6" id="ua0e303b6">:hover</span></code><span data-lake-id="uf7b225c3" id="uf7b225c3">）</span></li><li fid="u6cd9aef6" data-lake-id="u763663b2" id="u763663b2"><code data-lake-id="u5077d5a9" id="u5077d5a9"><span data-lake-id="ua7cf41ba" id="ua7cf41ba">calc()</span></code><span data-lake-id="u978d2c79" id="u978d2c79"> 本身不会引起 </span><code data-lake-id="uc6532680" id="uc6532680"><span data-lake-id="u67eee52f" id="u67eee52f">回流</span></code><span data-lake-id="u0b724b37" id="u0b724b37">，但是因为需要重新计算布局的属性，比如父元素的宽度改变了，那必然会导致子元素的一个 </span><code data-lake-id="u05944c0f" id="u05944c0f"><span data-lake-id="u2a2e5837" id="u2a2e5837">回流</span></code></li><li fid="u6cd9aef6" data-lake-id="uafd1f135" id="uafd1f135"><code data-lake-id="uf80a5fbc" id="uf80a5fbc"><span data-lake-id="udaa82e70" id="udaa82e70">查询某些属性</span></code><span data-lake-id="u0d9c862e" id="u0d9c862e">或</span><code data-lake-id="u22f2e587" id="u22f2e587"><span data-lake-id="ue7e5e971" id="ue7e5e971">调用某些方法</span></code><span data-lake-id="ub40e9f1f" id="ub40e9f1f"> </span></li></ul><ul list="u2b76dd8a" data-lake-indent="1"><li fid="ub8ff8404" data-lake-id="ua2fc7c81" id="ua2fc7c81"><code data-lake-id="uba5a3e5d" id="uba5a3e5d"><span data-lake-id="u78692518" id="u78692518">dom.style.width/height</span></code><span data-lake-id="ud359f52a" id="ud359f52a"> ，只能取</span><code data-lake-id="u9302d5c3" id="u9302d5c3"><span data-lake-id="ud45889bd" id="ud45889bd">行内样式的宽和高</span></code><span data-lake-id="ub78b11f4" id="ub78b11f4">，</span><code data-lake-id="u300cb1ab" id="u300cb1ab"><span data-lake-id="uc7e887c0" id="uc7e887c0">style</span></code><span data-lake-id="ua45dd185" id="ua45dd185"> 中 </span><code data-lake-id="u6636416e" id="u6636416e"><span data-lake-id="u19936b9a" id="u19936b9a">link</span></code><span data-lake-id="udc72acbb" id="udc72acbb"> 外链取不到。可写，修改时会导致</span><code data-lake-id="u11da970e" id="u11da970e"><span data-lake-id="u9ed0af26" id="u9ed0af26">重排</span></code></li><li fid="ub8ff8404" data-lake-id="u482788b1" id="u482788b1"><code data-lake-id="ua5241384" id="ua5241384"><span data-lake-id="uea679ff3" id="uea679ff3">window.getComputedStyle(dom).width/height</span></code><span data-lake-id="u51b7f018" id="u51b7f018">，指定</span><code data-lake-id="u4f4835bc" id="u4f4835bc"><span data-lake-id="u818ca4ac" id="u818ca4ac">第二参数</span></code><span data-lake-id="u6d15669d" id="u6d15669d">指定一个要匹配的伪元素的字符串。必须对普通元素省略（</span><code data-lake-id="u04c73fb3" id="u04c73fb3"><span data-lake-id="u73409401" id="u73409401">或null</span></code><span data-lake-id="ua4da8adf" id="ua4da8adf">） ， </span></li></ul><ul list="u2b76dd8a" data-lake-indent="2"><li fid="ua27835d0" data-lake-id="u1b80f82e" id="u1b80f82e"><span data-lake-id="u712dab1a" id="u712dab1a">读取的样式是</span><code data-lake-id="uc7b10d41" id="uc7b10d41"><span data-lake-id="ube8ff595" id="ube8ff595">最终样式</span></code><span data-lake-id="u662f980c" id="u662f980c">，包括了内联样式、嵌入样式和外部样式</span></li><li fid="ua27835d0" data-lake-id="ucbc9d9e2" id="ucbc9d9e2"><span data-lake-id="u4f28d72d" id="u4f28d72d">比如</span><code data-lake-id="u9a467030" id="u9a467030"><span data-lake-id="u94de66dc" id="u94de66dc">getComputedStyle(h3, \'::after\').content</span></code></li><li fid="ua27835d0" data-lake-id="uf274cf08" id="uf274cf08"><span data-lake-id="u119bb07b" id="u119bb07b">会导致</span><code data-lake-id="u973d94a6" id="u973d94a6"><span data-lake-id="udb3a3c44" id="udb3a3c44">回流</span></code><span data-lake-id="u1db5c098" id="u1db5c098"> 因为它需要获取祖先节点的一些信息进行计算（譬如宽高等），为求一个</span><code data-lake-id="u1cafaad2" id="u1cafaad2"><span data-lake-id="ubd4c7956" id="ubd4c7956">“即时性”</span></code><span data-lake-id="u857c0d4f" id="u857c0d4f">和</span><code data-lake-id="u523fa784" id="u523fa784"><span data-lake-id="u06fd676b" id="u06fd676b">“准确性”</span></code><span data-lake-id="u9cebc1cb" id="u9cebc1cb">。</span></li></ul><ul list="u2b76dd8a" start="3" data-lake-indent="1"><li fid="ub8ff8404" data-lake-id="uc4546325" id="uc4546325"><code data-lake-id="ucc9bda3b" id="ucc9bda3b"><span data-lake-id="u1dea4e7a" id="u1dea4e7a">dom.getBoundingClientRect().width/height 、top/left/right/bottom</span></code><span data-lake-id="ud20a7882" id="ud20a7882">  得到</span><code data-lake-id="ue832df5b" id="ue832df5b"><span data-lake-id="ua4bdf90e" id="ua4bdf90e">渲染后的宽和高</span></code><span data-lake-id="u5cab2402" id="u5cab2402">，及</span><code data-lake-id="uf9c77e3e" id="uf9c77e3e"><span data-lake-id="u38d77b7f" id="u38d77b7f">相对于视窗的上下左右</span></code><span data-lake-id="u406dfd26" id="u406dfd26">的距离</span></li><li fid="ub8ff8404" data-lake-id="u80511970" id="u80511970"><span data-lake-id="ud45111b2" id="ud45111b2">获取</span><code data-lake-id="u28843fcb" id="u28843fcb"><span data-lake-id="u9cd576f7" id="u9cd576f7">布局信息</span></code><span data-lake-id="u375e606f" id="u375e606f">时，会导致</span><code data-lake-id="u14fd133b" id="u14fd133b"><span data-lake-id="u1ca27290" id="u1ca27290">重排</span></code><span data-lake-id="u584084cd" id="u584084cd">。相关的方法属性如 </span><code data-lake-id="u75fe922b" id="u75fe922b"><span data-lake-id="u2e3bfc1c" id="u2e3bfc1c">offsetTop</span></code><span data-lake-id="uab01938b" id="uab01938b">   </span><code data-lake-id="u05bf5656" id="u05bf5656"><span data-lake-id="u5b8707fc" id="u5b8707fc">getComputedStyle</span></code><span data-lake-id="ubfd746cb" id="ubfd746cb"> 等</span></li><li fid="ub8ff8404" data-lake-id="u5afa689d" id="u5afa689d"><code data-lake-id="u85ab5968" id="u85ab5968"><span data-lake-id="u2014032c" id="u2014032c">scrollIntoView()</span></code><span data-lake-id="u48748961" id="u48748961">、</span><code data-lake-id="u02bed8d9" id="u02bed8d9"><span data-lake-id="u21632fd7" id="u21632fd7">scrollIntoViewIfNeeded()</span></code><span data-lake-id="u241d7b3f" id="u241d7b3f"> 、 </span><code data-lake-id="u7e1b9384" id="u7e1b9384"><span data-lake-id="ucd218816" id="ucd218816">scrollTo()</span></code><span data-lake-id="u07ec1767" id="u07ec1767"> 滚动时，会导致</span><code data-lake-id="u35ed16ea" id="u35ed16ea"><span data-lake-id="uf0b2bc4d" id="uf0b2bc4d">重排</span></code></li></ul><p data-lake-id="ua29fecc8" id="ua29fecc8"><br></p><blockquote data-lake-id="u05677e15" id="u05677e15"><p data-lake-id="ucf974fad" id="ucf974fad"><span data-lake-id="u5e78807d" id="u5e78807d">[!info]<br /></span><span data-lake-id="u4005d2a7" id="u4005d2a7">总之， </span><code data-lake-id="u00c08417" id="u00c08417"><span data-lake-id="u68ebe798" id="u68ebe798">查询某些属性</span></code><span data-lake-id="ued0204a2" id="ued0204a2">或</span><code data-lake-id="u376e65a5" id="u376e65a5"><span data-lake-id="ud7c178c1" id="ud7c178c1">调用某些方法</span></code><span data-lake-id="u889618fb" id="u889618fb"> 是否会导致重排，关键需要看  </span><code data-lake-id="u5e0d5ec3" id="u5e0d5ec3"><span data-lake-id="ubc292261" id="ubc292261">只读了</span></code><span data-lake-id="u53185d83" id="u53185d83"> ，还是有</span><code data-lake-id="ub08eb524" id="ub08eb524"><span data-lake-id="u3480577c" id="u3480577c">写入</span></code><span data-lake-id="u7eb316fd" id="u7eb316fd">操作<br /></span><span data-lake-id="u2c6d1094" id="u2c6d1094">``</span></p></blockquote><p data-lake-id="u72c83205" id="u72c83205"><br></p><blockquote data-lake-id="uca634333" id="uca634333"><p data-lake-id="ue56824fd" id="ue56824fd"><span data-lake-id="ue2247346" id="ue2247346">[!warning]<br /></span><span data-lake-id="u579077cc" id="u579077cc">另外一些容易被忽略的操作：如 getComputedStyle，  offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight 这些属性有一个共性，就是需要通过</span><strong><span data-lake-id="ub3010587" id="ub3010587">即时计算</span></strong><span data-lake-id="ud90b8e08" id="ud90b8e08">得到。因此浏览器为了获取这些值，也会进行</span><code data-lake-id="u77efc3ed" id="u77efc3ed"><span data-lake-id="u8d9ed03c" id="u8d9ed03c">回流</span></code></p></blockquote><p data-lake-id="ubb924186" id="ubb924186"><br></p><h2 data-lake-id="6c5a2aaa" id="6c5a2aaa"><span data-lake-id="uc716ad1b" id="uc716ad1b">opacity、display 和 visibility</span></h2><p data-lake-id="ude54eac7" id="ude54eac7"><br></p><ul list="u9a3e209c"><li fid="u611c945a" data-lake-id="u231c62b7" id="u231c62b7"><span data-lake-id="u793e2d3a" id="u793e2d3a">修改 </span><code data-lake-id="u3fe330f1" id="u3fe330f1"><span data-lake-id="u8de0d31f" id="u8de0d31f">opacity</span></code><span data-lake-id="u9569ed44" id="u9569ed44"> 和 </span><code data-lake-id="u73894040" id="u73894040"><span data-lake-id="u9d186de2" id="u9d186de2">visibility</span></code><span data-lake-id="u2703c91b" id="u2703c91b"> 属性通常只会触发</span><code data-lake-id="u9582cccf" id="u9582cccf"><span data-lake-id="uad6b84e8" id="uad6b84e8">重绘</span></code><span data-lake-id="uf775cd80" id="uf775cd80">，而不会触发</span><code data-lake-id="uc2332b5a" id="uc2332b5a"><span data-lake-id="u79d5fcfd" id="u79d5fcfd">回流</span></code></li><li fid="u611c945a" data-lake-id="ue7ae47bd" id="ue7ae47bd"><span data-lake-id="u5c5aac6a" id="u5c5aac6a">而修改 </span><code data-lake-id="uf8c04192" id="uf8c04192"><span data-lake-id="u27cbc6ba" id="u27cbc6ba">display</span></code><span data-lake-id="uabe3fb9c" id="uabe3fb9c"> 属性则可能会触发</span><code data-lake-id="u1a7afc63" id="u1a7afc63"><span data-lake-id="ue569d03a" id="ue569d03a">回流和重绘</span></code></li></ul><p data-lake-id="ucf334627" id="ucf334627"><br></p><p data-lake-id="u7e458799" id="u7e458799"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181135472.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1320%2C%22originHeight%22%3A236%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22EE28t%22%7D"></card></p><p data-lake-id="ua0e7ed43" id="ua0e7ed43"><br></p><h2 data-lake-id="d2dc9a84" id="d2dc9a84"><span data-lake-id="u6a63061d" id="u6a63061d">修改  </span><code data-lake-id="u9595d3d2" id="u9595d3d2"><span data-lake-id="ubec115ea" id="ubec115ea">left</span></code><span data-lake-id="uee02b792" id="uee02b792"> 和 </span><code data-lake-id="u9ef5a4e8" id="u9ef5a4e8"><span data-lake-id="ub513fcb2" id="ub513fcb2">right</span></code></h2><p data-lake-id="ue14e9792" id="ue14e9792"><br></p><p data-lake-id="u3e4fb55b" id="u3e4fb55b"><span data-lake-id="uc19ea282" id="uc19ea282">一般情况下，如果只是修改 </span><code data-lake-id="ue2ef690e" id="ue2ef690e"><span data-lake-id="u6ef3b926" id="u6ef3b926">left</span></code><span data-lake-id="u4bc30432" id="u4bc30432"> 和 </span><code data-lake-id="u4f824c76" id="u4f824c76"><span data-lake-id="uf9a414ab" id="uf9a414ab">right</span></code><span data-lake-id="u8d367e50" id="u8d367e50">  的值，不会导致 </span><code data-lake-id="u1f824f72" id="u1f824f72"><span data-lake-id="u36576716" id="u36576716">回流</span></code><span data-lake-id="uf256d6a1" id="uf256d6a1">，因为脱离文档流，但同时改变其他属性值，会导致 </span><code data-lake-id="ub1477b4c" id="ub1477b4c"><span data-lake-id="u20f22081" id="u20f22081">重排</span></code></p><p data-lake-id="u93d1d1b5" id="u93d1d1b5"><br></p><h2 data-lake-id="2eeaffd1" id="2eeaffd1"><span data-lake-id="uc14ef704" id="uc14ef704">一些建议</span></h2><p data-lake-id="u49484824" id="u49484824"><br></p><ul list="u4661bf3d"><li fid="u193f81e2" data-lake-id="uc1e8f4a1" id="uc1e8f4a1"><code data-lake-id="ue0042055" id="ue0042055"><span data-lake-id="uc04368c1" id="uc04368c1">transform</span></code><span data-lake-id="u3e629bf7" id="u3e629bf7"> 代替 </span><code data-lake-id="u1a12c04b" id="u1a12c04b"><span data-lake-id="ub15acd0b" id="ub15acd0b">top/left</span></code></li><li fid="u193f81e2" data-lake-id="ueaf7255c" id="ueaf7255c"><code data-lake-id="u81d341f7" id="u81d341f7"><span data-lake-id="u843e78cc" id="u843e78cc">position: absolute、fixed</span></code><span data-lake-id="ue43e1f69" id="ue43e1f69">  脱离文档流，以避免对其他元素布局的影响。</span></li><li fid="u193f81e2" data-lake-id="uc06564af" id="uc06564af"><span data-lake-id="u44ca246e" id="u44ca246e">避免使用 </span><code data-lake-id="u0607be91" id="u0607be91"><span data-lake-id="u9a58f536" id="u9a58f536">table</span></code><span data-lake-id="ubc924dfe" id="ubc924dfe"> 布局</span></li><li fid="u193f81e2" data-lake-id="u37b47ffe" id="u37b47ffe"><span data-lake-id="u09fbdc55" id="u09fbdc55">避免多次回流，尽量</span><code data-lake-id="u10fffe1d" id="u10fffe1d"><span data-lake-id="ud338d3bd" id="ud338d3bd">批量操作</span></code><span data-lake-id="u97ba3fdf" id="u97ba3fdf"> </span></li></ul><ul list="u4661bf3d" data-lake-indent="1"><li fid="uf09e7427" data-lake-id="u75e7314b" id="u75e7314b"><span data-lake-id="uaed0a700" id="uaed0a700">使用</span><code data-lake-id="uf17d90be" id="uf17d90be"><span data-lake-id="u61a79ca2" id="u61a79ca2">documentFragment</span></code><span data-lake-id="u10ab8db1" id="u10ab8db1"> 一次性插入文档中</span></li><li fid="uf09e7427" data-lake-id="u0912c588" id="u0912c588"><code data-lake-id="ufc4e1edc" id="ufc4e1edc"><span data-lake-id="u4db25d04" id="u4db25d04">classList.add/remove/toggle</span></code><span data-lake-id="ub5e07e06" id="ub5e07e06"> 来切换样式，而不是直接修改 style 属性</span></li></ul><ul list="u4661bf3d" start="5"><li fid="u193f81e2" data-lake-id="ua904141d" id="ua904141d"><span data-lake-id="u453e4e21" id="u453e4e21">避免使用</span><code data-lake-id="u805505f7" id="u805505f7"><span data-lake-id="u844725ba" id="u844725ba">CSS表达式</span></code><span data-lake-id="u56cbc53b" id="u56cbc53b">（如：</span><code data-lake-id="ueefbb2a6" id="ueefbb2a6"><span data-lake-id="u236343d1" id="u236343d1">calc()</span></code><span data-lake-id="udd935747" id="udd935747">）</span></li><li fid="u193f81e2" data-lake-id="u53bc40dd" id="u53bc40dd"><span data-lake-id="u4c1719cb" id="u4c1719cb">使用</span><code data-lake-id="ub473cf0e" id="ub473cf0e"><span data-lake-id="u8136ed49" id="u8136ed49">css3硬件加速</span></code><span data-lake-id="u90207255" id="u90207255">，</span><code data-lake-id="u0c72f4af" id="u0c72f4af"><span data-lake-id="u01d258d9" id="u01d258d9">可以让transform</span></code><span data-lake-id="uadbf079e" id="uadbf079e">、</span><code data-lake-id="uc5dc3ebb" id="uc5dc3ebb"><span data-lake-id="u616b62a8" id="u616b62a8">opacity</span></code><span data-lake-id="u063ae362" id="u063ae362">、</span><code data-lake-id="u74c5de48" id="u74c5de48"><span data-lake-id="uffd2ff87" id="uffd2ff87">filters</span></code><span data-lake-id="uaa127ea7" id="uaa127ea7"> 这些动画不会引起</span><code data-lake-id="u5e470ba9" id="u5e470ba9"><span data-lake-id="uf46a9d93" id="uf46a9d93">回流重绘</span></code></li><li fid="u193f81e2" data-lake-id="u341fd323" id="u341fd323"><code data-lake-id="u5322c625" id="u5322c625"><span data-lake-id="u3e5957d8" id="u3e5957d8">离线操作思路</span></code><span data-lake-id="ua83dba6b" id="ua83dba6b"> ，及设置 </span><code data-lake-id="ub53fee5e" id="ub53fee5e"><span data-lake-id="uada9a0bb" id="uada9a0bb">display:none</span></code><span data-lake-id="uf4aae7ea" id="uf4aae7ea">  ，其实也是 批量操作的一种思路</span></li></ul>',body_draft_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><p data-lake-id="u393c70e6" id="u393c70e6"><span data-lake-id="ufefbfd0b" id="ufefbfd0b">#fe #渲染  #css</span></p><h1 data-lake-id="ODzV6" id="ODzV6"><span data-lake-id="u7629f70c" id="u7629f70c">再说说回流及重绘</span></h1><h2 data-lake-id="ab266e49" id="ab266e49"><span data-lake-id="u6ae87d11" id="u6ae87d11">先看定义</span></h2><p data-lake-id="ub38e5db9" id="ub38e5db9"><br></p><p data-lake-id="u5b59227a" id="u5b59227a"><code data-lake-id="ufdfdeddf" id="ufdfdeddf"><span data-lake-id="u273468c3" id="u273468c3">回流</span></code><span data-lake-id="ufab54dff" id="ufab54dff">：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置</span></p><p data-lake-id="ufab8e55b" id="ufab8e55b"><br></p><p data-lake-id="u64334e2a" id="u64334e2a"><code data-lake-id="u116fd241" id="u116fd241"><span data-lake-id="uf0d0115d" id="uf0d0115d">重绘</span></code><span data-lake-id="u82c2b13f" id="u82c2b13f">：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制</span></p><p data-lake-id="ufff30a4b" id="ufff30a4b"><br></p><p data-lake-id="u57afb47d" id="u57afb47d"><code data-lake-id="u97b45565" id="u97b45565"><span data-lake-id="u262a16ed" id="u262a16ed">重绘</span></code><span data-lake-id="u4b4c4aa9" id="u4b4c4aa9">不一定导致</span><code data-lake-id="uae144e93" id="uae144e93"><span data-lake-id="u5878c7ea" id="u5878c7ea">重排</span></code><span data-lake-id="uded278bd" id="uded278bd">，但</span><code data-lake-id="u277c1a53" id="u277c1a53"><span data-lake-id="uc376ecba" id="uc376ecba">重排</span></code><span data-lake-id="ub56c08cd" id="ub56c08cd">一定会导致</span><code data-lake-id="u37bbc400" id="u37bbc400"><span data-lake-id="u464997ec" id="u464997ec">重绘</span></code><span data-lake-id="u2632392b" id="u2632392b">  ，如下图：</span></p><p data-lake-id="u6969188a" id="u6969188a"><br></p><p data-lake-id="u0aa32300" id="u0aa32300"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181222365.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1854%2C%22originHeight%22%3A744%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22GKCEs%22%7D"></card></p><p data-lake-id="ue7815c78" id="ue7815c78"><br></p><h2 data-lake-id="9227c401" id="9227c401"><span data-lake-id="u445b0eac" id="u445b0eac">导致</span><code data-lake-id="uc9abf3d7" id="uc9abf3d7"><span data-lake-id="ua002a091" id="ua002a091">回流</span></code><span data-lake-id="ua129d342" id="ua129d342">的场景</span></h2><p data-lake-id="u28f16f22" id="u28f16f22"><br></p><ul list="u2b76dd8a"><li fid="u6cd9aef6" data-lake-id="u88b3d658" id="u88b3d658"><span data-lake-id="ub55e1ef9" id="ub55e1ef9">页面</span><code data-lake-id="u96fe86e3" id="u96fe86e3"><span data-lake-id="u0e77c5cb" id="u0e77c5cb">首次渲染</span></code></li><li fid="u6cd9aef6" data-lake-id="u4e8cdab9" id="u4e8cdab9"><span data-lake-id="ud847d2d9" id="ud847d2d9">浏览器</span><code data-lake-id="u292b9307" id="u292b9307"><span data-lake-id="u406933d0" id="u406933d0">窗口大小</span></code><span data-lake-id="u731b50ac" id="u731b50ac">发生改变</span></li><li fid="u6cd9aef6" data-lake-id="ue4dfb2fe" id="ue4dfb2fe"><span data-lake-id="u28d41bbc" id="u28d41bbc">元素</span><code data-lake-id="u2abaf8ff" id="u2abaf8ff"><span data-lake-id="ud5f654c5" id="ud5f654c5">尺寸或位置</span></code><span data-lake-id="ued5082eb" id="ued5082eb">发生改变</span></li><li fid="u6cd9aef6" data-lake-id="ufd4a93d0" id="ufd4a93d0"><span data-lake-id="u08385157" id="u08385157">元素内容变化（</span><code data-lake-id="u21b9d389" id="u21b9d389"><span data-lake-id="uf06f2daa" id="uf06f2daa">文字数量</span></code><span data-lake-id="u32814f73" id="u32814f73">或</span><code data-lake-id="u918fb0d6" id="u918fb0d6"><span data-lake-id="uc4470ff9" id="uc4470ff9">图片大小</span></code><span data-lake-id="ueda2e64c" id="ueda2e64c">等等）</span></li><li fid="u6cd9aef6" data-lake-id="uf555fba2" id="uf555fba2"><span data-lake-id="ub2af2cbf" id="ub2af2cbf">元素</span><code data-lake-id="u76d8b3bc" id="u76d8b3bc"><span data-lake-id="uf61671fa" id="uf61671fa">字体大小</span></code><span data-lake-id="u59280639" id="u59280639">变化</span></li><li fid="u6cd9aef6" data-lake-id="ued1f0424" id="ued1f0424"><code data-lake-id="uc56bda2b" id="uc56bda2b"><span data-lake-id="uf867c24a" id="uf867c24a">添加或者删除</span></code><span data-lake-id="ue4729b53" id="ue4729b53">可见的DOM元素</span></li><li fid="u6cd9aef6" data-lake-id="u53fa732e" id="u53fa732e"><span data-lake-id="u0840646e" id="u0840646e">激活CSS伪类（例如：</span><code data-lake-id="ub2f55a15" id="ub2f55a15"><span data-lake-id="ua0e303b6" id="ua0e303b6">:hover</span></code><span data-lake-id="uf7b225c3" id="uf7b225c3">）</span></li><li fid="u6cd9aef6" data-lake-id="u763663b2" id="u763663b2"><code data-lake-id="u5077d5a9" id="u5077d5a9"><span data-lake-id="ua7cf41ba" id="ua7cf41ba">calc()</span></code><span data-lake-id="u978d2c79" id="u978d2c79"> 本身不会引起 </span><code data-lake-id="uc6532680" id="uc6532680"><span data-lake-id="u67eee52f" id="u67eee52f">回流</span></code><span data-lake-id="u0b724b37" id="u0b724b37">，但是因为需要重新计算布局的属性，比如父元素的宽度改变了，那必然会导致子元素的一个 </span><code data-lake-id="u05944c0f" id="u05944c0f"><span data-lake-id="u2a2e5837" id="u2a2e5837">回流</span></code></li><li fid="u6cd9aef6" data-lake-id="uafd1f135" id="uafd1f135"><code data-lake-id="uf80a5fbc" id="uf80a5fbc"><span data-lake-id="udaa82e70" id="udaa82e70">查询某些属性</span></code><span data-lake-id="u0d9c862e" id="u0d9c862e">或</span><code data-lake-id="u22f2e587" id="u22f2e587"><span data-lake-id="ue7e5e971" id="ue7e5e971">调用某些方法</span></code><span data-lake-id="ub40e9f1f" id="ub40e9f1f"> </span></li></ul><ul list="u2b76dd8a" data-lake-indent="1"><li fid="ub8ff8404" data-lake-id="ua2fc7c81" id="ua2fc7c81"><code data-lake-id="uba5a3e5d" id="uba5a3e5d"><span data-lake-id="u78692518" id="u78692518">dom.style.width/height</span></code><span data-lake-id="ud359f52a" id="ud359f52a"> ，只能取</span><code data-lake-id="u9302d5c3" id="u9302d5c3"><span data-lake-id="ud45889bd" id="ud45889bd">行内样式的宽和高</span></code><span data-lake-id="ub78b11f4" id="ub78b11f4">，</span><code data-lake-id="u300cb1ab" id="u300cb1ab"><span data-lake-id="uc7e887c0" id="uc7e887c0">style</span></code><span data-lake-id="ua45dd185" id="ua45dd185"> 中 </span><code data-lake-id="u6636416e" id="u6636416e"><span data-lake-id="u19936b9a" id="u19936b9a">link</span></code><span data-lake-id="udc72acbb" id="udc72acbb"> 外链取不到。可写，修改时会导致</span><code data-lake-id="u11da970e" id="u11da970e"><span data-lake-id="u9ed0af26" id="u9ed0af26">重排</span></code></li><li fid="ub8ff8404" data-lake-id="u482788b1" id="u482788b1"><code data-lake-id="ua5241384" id="ua5241384"><span data-lake-id="uea679ff3" id="uea679ff3">window.getComputedStyle(dom).width/height</span></code><span data-lake-id="u51b7f018" id="u51b7f018">，指定</span><code data-lake-id="u4f4835bc" id="u4f4835bc"><span data-lake-id="u818ca4ac" id="u818ca4ac">第二参数</span></code><span data-lake-id="u6d15669d" id="u6d15669d">指定一个要匹配的伪元素的字符串。必须对普通元素省略（</span><code data-lake-id="u04c73fb3" id="u04c73fb3"><span data-lake-id="u73409401" id="u73409401">或null</span></code><span data-lake-id="ua4da8adf" id="ua4da8adf">） ， </span></li></ul><ul list="u2b76dd8a" data-lake-indent="2"><li fid="ua27835d0" data-lake-id="u1b80f82e" id="u1b80f82e"><span data-lake-id="u712dab1a" id="u712dab1a">读取的样式是</span><code data-lake-id="uc7b10d41" id="uc7b10d41"><span data-lake-id="ube8ff595" id="ube8ff595">最终样式</span></code><span data-lake-id="u662f980c" id="u662f980c">，包括了内联样式、嵌入样式和外部样式</span></li><li fid="ua27835d0" data-lake-id="ucbc9d9e2" id="ucbc9d9e2"><span data-lake-id="u4f28d72d" id="u4f28d72d">比如</span><code data-lake-id="u9a467030" id="u9a467030"><span data-lake-id="u94de66dc" id="u94de66dc">getComputedStyle(h3, \'::after\').content</span></code></li><li fid="ua27835d0" data-lake-id="uf274cf08" id="uf274cf08"><span data-lake-id="u119bb07b" id="u119bb07b">会导致</span><code data-lake-id="u973d94a6" id="u973d94a6"><span data-lake-id="udb3a3c44" id="udb3a3c44">回流</span></code><span data-lake-id="u1db5c098" id="u1db5c098"> 因为它需要获取祖先节点的一些信息进行计算（譬如宽高等），为求一个</span><code data-lake-id="u1cafaad2" id="u1cafaad2"><span data-lake-id="ubd4c7956" id="ubd4c7956">“即时性”</span></code><span data-lake-id="u857c0d4f" id="u857c0d4f">和</span><code data-lake-id="u523fa784" id="u523fa784"><span data-lake-id="u06fd676b" id="u06fd676b">“准确性”</span></code><span data-lake-id="u9cebc1cb" id="u9cebc1cb">。</span></li></ul><ul list="u2b76dd8a" start="3" data-lake-indent="1"><li fid="ub8ff8404" data-lake-id="uc4546325" id="uc4546325"><code data-lake-id="ucc9bda3b" id="ucc9bda3b"><span data-lake-id="u1dea4e7a" id="u1dea4e7a">dom.getBoundingClientRect().width/height 、top/left/right/bottom</span></code><span data-lake-id="ud20a7882" id="ud20a7882">  得到</span><code data-lake-id="ue832df5b" id="ue832df5b"><span data-lake-id="ua4bdf90e" id="ua4bdf90e">渲染后的宽和高</span></code><span data-lake-id="u5cab2402" id="u5cab2402">，及</span><code data-lake-id="uf9c77e3e" id="uf9c77e3e"><span data-lake-id="u38d77b7f" id="u38d77b7f">相对于视窗的上下左右</span></code><span data-lake-id="u406dfd26" id="u406dfd26">的距离</span></li><li fid="ub8ff8404" data-lake-id="u80511970" id="u80511970"><span data-lake-id="ud45111b2" id="ud45111b2">获取</span><code data-lake-id="u28843fcb" id="u28843fcb"><span data-lake-id="u9cd576f7" id="u9cd576f7">布局信息</span></code><span data-lake-id="u375e606f" id="u375e606f">时，会导致</span><code data-lake-id="u14fd133b" id="u14fd133b"><span data-lake-id="u1ca27290" id="u1ca27290">重排</span></code><span data-lake-id="u584084cd" id="u584084cd">。相关的方法属性如 </span><code data-lake-id="u75fe922b" id="u75fe922b"><span data-lake-id="u2e3bfc1c" id="u2e3bfc1c">offsetTop</span></code><span data-lake-id="uab01938b" id="uab01938b">   </span><code data-lake-id="u05bf5656" id="u05bf5656"><span data-lake-id="u5b8707fc" id="u5b8707fc">getComputedStyle</span></code><span data-lake-id="ubfd746cb" id="ubfd746cb"> 等</span></li><li fid="ub8ff8404" data-lake-id="u5afa689d" id="u5afa689d"><code data-lake-id="u85ab5968" id="u85ab5968"><span data-lake-id="u2014032c" id="u2014032c">scrollIntoView()</span></code><span data-lake-id="u48748961" id="u48748961">、</span><code data-lake-id="u02bed8d9" id="u02bed8d9"><span data-lake-id="u21632fd7" id="u21632fd7">scrollIntoViewIfNeeded()</span></code><span data-lake-id="u241d7b3f" id="u241d7b3f"> 、 </span><code data-lake-id="u7e1b9384" id="u7e1b9384"><span data-lake-id="ucd218816" id="ucd218816">scrollTo()</span></code><span data-lake-id="u07ec1767" id="u07ec1767"> 滚动时，会导致</span><code data-lake-id="u35ed16ea" id="u35ed16ea"><span data-lake-id="uf0b2bc4d" id="uf0b2bc4d">重排</span></code></li></ul><p data-lake-id="ua29fecc8" id="ua29fecc8"><br></p><blockquote data-lake-id="u05677e15" id="u05677e15"><p data-lake-id="ucf974fad" id="ucf974fad"><span data-lake-id="u5e78807d" id="u5e78807d">[!info]<br /></span><span data-lake-id="u4005d2a7" id="u4005d2a7">总之， </span><code data-lake-id="u00c08417" id="u00c08417"><span data-lake-id="u68ebe798" id="u68ebe798">查询某些属性</span></code><span data-lake-id="ued0204a2" id="ued0204a2">或</span><code data-lake-id="u376e65a5" id="u376e65a5"><span data-lake-id="ud7c178c1" id="ud7c178c1">调用某些方法</span></code><span data-lake-id="u889618fb" id="u889618fb"> 是否会导致重排，关键需要看  </span><code data-lake-id="u5e0d5ec3" id="u5e0d5ec3"><span data-lake-id="ubc292261" id="ubc292261">只读了</span></code><span data-lake-id="u53185d83" id="u53185d83"> ，还是有</span><code data-lake-id="ub08eb524" id="ub08eb524"><span data-lake-id="u3480577c" id="u3480577c">写入</span></code><span data-lake-id="u7eb316fd" id="u7eb316fd">操作<br /></span><span data-lake-id="u2c6d1094" id="u2c6d1094">``</span></p></blockquote><p data-lake-id="u72c83205" id="u72c83205"><br></p><blockquote data-lake-id="uca634333" id="uca634333"><p data-lake-id="ue56824fd" id="ue56824fd"><span data-lake-id="ue2247346" id="ue2247346">[!warning]<br /></span><span data-lake-id="u579077cc" id="u579077cc">另外一些容易被忽略的操作：如 getComputedStyle，  offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight 这些属性有一个共性，就是需要通过</span><strong><span data-lake-id="ub3010587" id="ub3010587">即时计算</span></strong><span data-lake-id="ud90b8e08" id="ud90b8e08">得到。因此浏览器为了获取这些值，也会进行</span><code data-lake-id="u77efc3ed" id="u77efc3ed"><span data-lake-id="u8d9ed03c" id="u8d9ed03c">回流</span></code></p></blockquote><p data-lake-id="ubb924186" id="ubb924186"><br></p><h2 data-lake-id="6c5a2aaa" id="6c5a2aaa"><span data-lake-id="uc716ad1b" id="uc716ad1b">opacity、display 和 visibility</span></h2><p data-lake-id="ude54eac7" id="ude54eac7"><br></p><ul list="u9a3e209c"><li fid="u611c945a" data-lake-id="u231c62b7" id="u231c62b7"><span data-lake-id="u793e2d3a" id="u793e2d3a">修改 </span><code data-lake-id="u3fe330f1" id="u3fe330f1"><span data-lake-id="u8de0d31f" id="u8de0d31f">opacity</span></code><span data-lake-id="u9569ed44" id="u9569ed44"> 和 </span><code data-lake-id="u73894040" id="u73894040"><span data-lake-id="u9d186de2" id="u9d186de2">visibility</span></code><span data-lake-id="u2703c91b" id="u2703c91b"> 属性通常只会触发</span><code data-lake-id="u9582cccf" id="u9582cccf"><span data-lake-id="uad6b84e8" id="uad6b84e8">重绘</span></code><span data-lake-id="uf775cd80" id="uf775cd80">，而不会触发</span><code data-lake-id="uc2332b5a" id="uc2332b5a"><span data-lake-id="u79d5fcfd" id="u79d5fcfd">回流</span></code></li><li fid="u611c945a" data-lake-id="ue7ae47bd" id="ue7ae47bd"><span data-lake-id="u5c5aac6a" id="u5c5aac6a">而修改 </span><code data-lake-id="uf8c04192" id="uf8c04192"><span data-lake-id="u27cbc6ba" id="u27cbc6ba">display</span></code><span data-lake-id="uabe3fb9c" id="uabe3fb9c"> 属性则可能会触发</span><code data-lake-id="u1a7afc63" id="u1a7afc63"><span data-lake-id="ue569d03a" id="ue569d03a">回流和重绘</span></code></li></ul><p data-lake-id="ucf334627" id="ucf334627"><br></p><p data-lake-id="u7e458799" id="u7e458799"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fod-1310531898.cos.ap-beijing.myqcloud.com%2F202303181135472.png%22%2C%22originalType%22%3A%22binary%22%2C%22linkTarget%22%3A%22%22%2C%22originWidth%22%3A1320%2C%22originHeight%22%3A236%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22EE28t%22%7D"></card></p><p data-lake-id="ua0e7ed43" id="ua0e7ed43"><br></p><h2 data-lake-id="d2dc9a84" id="d2dc9a84"><span data-lake-id="u6a63061d" id="u6a63061d">修改  </span><code data-lake-id="u9595d3d2" id="u9595d3d2"><span data-lake-id="ubec115ea" id="ubec115ea">left</span></code><span data-lake-id="uee02b792" id="uee02b792"> 和 </span><code data-lake-id="u9ef5a4e8" id="u9ef5a4e8"><span data-lake-id="ub513fcb2" id="ub513fcb2">right</span></code></h2><p data-lake-id="ue14e9792" id="ue14e9792"><br></p><p data-lake-id="u3e4fb55b" id="u3e4fb55b"><span data-lake-id="uc19ea282" id="uc19ea282">一般情况下，如果只是修改 </span><code data-lake-id="ue2ef690e" id="ue2ef690e"><span data-lake-id="u6ef3b926" id="u6ef3b926">left</span></code><span data-lake-id="u4bc30432" id="u4bc30432"> 和 </span><code data-lake-id="u4f824c76" id="u4f824c76"><span data-lake-id="uf9a414ab" id="uf9a414ab">right</span></code><span data-lake-id="u8d367e50" id="u8d367e50">  的值，不会导致 </span><code data-lake-id="u1f824f72" id="u1f824f72"><span data-lake-id="u36576716" id="u36576716">回流</span></code><span data-lake-id="uf256d6a1" id="uf256d6a1">，因为脱离文档流，但同时改变其他属性值，会导致 </span><code data-lake-id="ub1477b4c" id="ub1477b4c"><span data-lake-id="u20f22081" id="u20f22081">重排</span></code></p><p data-lake-id="u93d1d1b5" id="u93d1d1b5"><br></p><h2 data-lake-id="2eeaffd1" id="2eeaffd1"><span data-lake-id="uc14ef704" id="uc14ef704">一些建议</span></h2><p data-lake-id="u49484824" id="u49484824"><br></p><ul list="u4661bf3d"><li fid="u193f81e2" data-lake-id="uc1e8f4a1" id="uc1e8f4a1"><code data-lake-id="ue0042055" id="ue0042055"><span data-lake-id="uc04368c1" id="uc04368c1">transform</span></code><span data-lake-id="u3e629bf7" id="u3e629bf7"> 代替 </span><code data-lake-id="u1a12c04b" id="u1a12c04b"><span data-lake-id="ub15acd0b" id="ub15acd0b">top/left</span></code></li><li fid="u193f81e2" data-lake-id="ueaf7255c" id="ueaf7255c"><code data-lake-id="u81d341f7" id="u81d341f7"><span data-lake-id="u843e78cc" id="u843e78cc">position: absolute、fixed</span></code><span data-lake-id="ue43e1f69" id="ue43e1f69">  脱离文档流，以避免对其他元素布局的影响。</span></li><li fid="u193f81e2" data-lake-id="uc06564af" id="uc06564af"><span data-lake-id="u44ca246e" id="u44ca246e">避免使用 </span><code data-lake-id="u0607be91" id="u0607be91"><span data-lake-id="u9a58f536" id="u9a58f536">table</span></code><span data-lake-id="ubc924dfe" id="ubc924dfe"> 布局</span></li><li fid="u193f81e2" data-lake-id="u37b47ffe" id="u37b47ffe"><span data-lake-id="u09fbdc55" id="u09fbdc55">避免多次回流，尽量</span><code data-lake-id="u10fffe1d" id="u10fffe1d"><span data-lake-id="ud338d3bd" id="ud338d3bd">批量操作</span></code><span data-lake-id="u97ba3fdf" id="u97ba3fdf"> </span></li></ul><ul list="u4661bf3d" data-lake-indent="1"><li fid="uf09e7427" data-lake-id="u75e7314b" id="u75e7314b"><span data-lake-id="uaed0a700" id="uaed0a700">使用</span><code data-lake-id="uf17d90be" id="uf17d90be"><span data-lake-id="u61a79ca2" id="u61a79ca2">documentFragment</span></code><span data-lake-id="u10ab8db1" id="u10ab8db1"> 一次性插入文档中</span></li><li fid="uf09e7427" data-lake-id="u0912c588" id="u0912c588"><code data-lake-id="ufc4e1edc" id="ufc4e1edc"><span data-lake-id="u4db25d04" id="u4db25d04">classList.add/remove/toggle</span></code><span data-lake-id="ub5e07e06" id="ub5e07e06"> 来切换样式，而不是直接修改 style 属性</span></li></ul><ul list="u4661bf3d" start="5"><li fid="u193f81e2" data-lake-id="ua904141d" id="ua904141d"><span data-lake-id="u453e4e21" id="u453e4e21">避免使用</span><code data-lake-id="u805505f7" id="u805505f7"><span data-lake-id="u844725ba" id="u844725ba">CSS表达式</span></code><span data-lake-id="u56cbc53b" id="u56cbc53b">（如：</span><code data-lake-id="ueefbb2a6" id="ueefbb2a6"><span data-lake-id="u236343d1" id="u236343d1">calc()</span></code><span data-lake-id="udd935747" id="udd935747">）</span></li><li fid="u193f81e2" data-lake-id="u53bc40dd" id="u53bc40dd"><span data-lake-id="u4c1719cb" id="u4c1719cb">使用</span><code data-lake-id="ub473cf0e" id="ub473cf0e"><span data-lake-id="u8136ed49" id="u8136ed49">css3硬件加速</span></code><span data-lake-id="u90207255" id="u90207255">，</span><code data-lake-id="u0c72f4af" id="u0c72f4af"><span data-lake-id="u01d258d9" id="u01d258d9">可以让transform</span></code><span data-lake-id="uadbf079e" id="uadbf079e">、</span><code data-lake-id="uc5dc3ebb" id="uc5dc3ebb"><span data-lake-id="u616b62a8" id="u616b62a8">opacity</span></code><span data-lake-id="u063ae362" id="u063ae362">、</span><code data-lake-id="u74c5de48" id="u74c5de48"><span data-lake-id="uffd2ff87" id="uffd2ff87">filters</span></code><span data-lake-id="uaa127ea7" id="uaa127ea7"> 这些动画不会引起</span><code data-lake-id="u5e470ba9" id="u5e470ba9"><span data-lake-id="uf46a9d93" id="uf46a9d93">回流重绘</span></code></li><li fid="u193f81e2" data-lake-id="u341fd323" id="u341fd323"><code data-lake-id="u5322c625" id="u5322c625"><span data-lake-id="u3e5957d8" id="u3e5957d8">离线操作思路</span></code><span data-lake-id="ua83dba6b" id="ua83dba6b"> ，及设置 </span><code data-lake-id="ub53fee5e" id="ub53fee5e"><span data-lake-id="uada9a0bb" id="uada9a0bb">display:none</span></code><span data-lake-id="uf4aae7ea" id="uf4aae7ea">  ，其实也是 批量操作的一种思路</span></li></ul>',public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-18T04:35:56.000Z",deleted_at:null,created_at:"2023-03-18T04:33:19.000Z",updated_at:"2023-03-19T11:42:21.000Z",published_at:"2023-03-18T04:35:56.000Z",first_published_at:"2023-03-18T04:33:54.273Z",word_count:848,cover:null,description:"#fe #渲染  #css再说说回流及重绘先看定义回流：布局引擎会根据各种样式计算每个盒子在页面上的大小与位置重绘：当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制重绘不一定导致重排，但重排一定会导致重绘  ，如下图：导致回流的场景页面首次渲染浏览器窗口大小发生改变元素尺...",custom_description:null,hits:0,_serializer:"v2.doc_detail"},{id:118493173,slug:"zdmncapdl1pol595",title:"0004.FE.长列表渲染优化的一些思路",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:'#fe  #前端性能\n<a name="103be461"></a>\n# 长列表渲染优化的一些思路\n\n<a name="7b4ab061"></a>\n## 先说导致长列表性能及体现不佳的原因\n\n需要 `渲染大量的DOM节点` 及 `频繁的DOM操作` ，展开说就是 每个节点都需要浏览器 进行`计算`、`布局`和`绘制` 等。 如果总结，那么其实就是 所谓的 **CPU的瓶颈**\n\n另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就是所谓的 **IO的瓶颈** （这里主要指`网络IO`）\n\n<a name="89b6d95a"></a>\n## 一些常见的优化思路\n\n<a name="2b2470c2"></a>\n### 1、分页\n\n最简单且见效的方法，但需要与 `用户体验` 做平衡\n\n<a name="c7123451"></a>\n### 2、虚拟滚动、虚拟列表\n\n比较常见且大规模应用的思路，具体的一些`要点`：\n\n- `可视区域`： 做`绝对定位`，left、right、top 设置为 0\n- `滚动区域`：用于`形成滚动条`，做绝对定位，`left、right、top` 设置为 0，`z-index:-1`\n- `真实渲染区域`：滚动时使用`translate3d(x,y,z)`\n\n具体步骤：\n\n1. 计算当前可见区域起始数据的 `startIndex`\n2. 计算当前可见区域结束数据的 `endIndex`\n3. 计算当前可见区域的数据，并渲染到页面中\n4. 计算 `startIndex` 对应的数据在整个列表中的偏移位置 `startOffset`，并设置到列表上\n5. 在滚动的时候，修改`真实渲染区域`的 `transform: translate3d(0, y, 0)`\n\n下面是一段示例代码：\n\n```javascript\nupdateVisibleData(scrollTop) {\n  scrollTop = scrollTop || 0;\n  // 取得可见区域的可见列表项数量\n  const visibleCount = Math.ceil(this.$el.clientHeight / this.itemHeight); \n  // 取得可见区域的起始数据索引\n  const start = Math.floor(scrollTop / this.itemHeight); \n  // 取得可见区域的结束数据索引\n  const end = start + visibleCount; \n  // 计算出可见区域对应的数据，让 Vue.js 更新\n  this.visibleData = this.data.slice(start, end); \n  // 把可见区域的 top 设置为起始元素在整个列表中的位置（使用 transform 是为了更好的性能）\n  this.$refs.content.style.webkitTransform = `translate3d(0, ${ start * this.itemHeight }px, 0)`; \n}\n```\n\n`动态高度`的场景：需要在渲染时`动态计算`每个列表项的高度，并根据`实际高度`进行渲染，下面是`updateVisibleData` 的一个思路。\n\n```javascript\nupdateVisibleData(scrollTop) {\n  scrollTop = scrollTop || 0;\n  const start = this.findNearestItemIndex(scrollTop);\n  const end = this.findNearestItemIndex(scrollTop + this.$el.clientHeight);\n  this.visibleData = this.data.slice(start, Math.min(end + 1, this.data.length));\n  // 通过具体方法来设计\n  this.$refs.content.style.webkitTransform = `translate3d(0, ${ this.getItemSizeAndOffset(start).offset }px, 0)`;\n}\n```\n\n一个细节，`ios` 没法实时 触发 `scroll` 的问题？\n\n- 使用 `iscroll` 或者   `better-scroll` 等成熟的第三方库\n- `ontouchmove` 来兼容下\n- `-webkit-overflow-scrolling:touch` 设置有`回弹效果` \n   - `auto`: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。\n   - `touch` , 有回弹效果\n\n其他的一些细节优化点：\n\n- 使用`骨架片`优化白屏\n- 使用新的API，提高性能 \n   - `scroll` 时，使用 `requestAnimationFrame` 来包装回调\n   - 或者做下`节流`\n- 使用`缓存`，需要把`尺寸、偏移`等信息进行一个`缓存`\n- 图片`懒加载`\n\n<a name="a1922248"></a>\n## 3、其他的思路\n\n- 使用`缓存` ，包括数据缓存，也包括重复利用节点等\n- `懒加载` 与 `预加载`\n- 减少DOM操作 ，精简 DOM 结构\n- 使用`Web Worker`  将页面的`渲染`和`计算逻辑`分离开来\n- 服务器端渲染 ， `SSR`\n- CSS布局优化，减少`回流`等\n- CSS3硬件加速\n- 优化渲染性能，比如`CSS样式优化`和 `JS性能优化`\n- 图片优化 ， `懒加载`和`预加载` 及 `压缩` ，`缩略图` ， 图片格式比如 `WebP` 更小，`jpg` 更快渲染等\n- 使用渐进式渲染 ，先渲染关键内容\n- 新 API 使用，比如 `requestIdleCallback` 空闲时间再执行\n- `HTTP`请求优化等\n\n> [!tip]<br />JPEG 格式不支持透明度设置\n\n\n<a name="9415a826"></a>\n## 最后\n\n还是需要根据`实际情况` 选择 `ROI` 最大的方案，找 主要矛盾。\n',body_draft:'#fe  #前端性能\n<a name="103be461"></a>\n# 长列表渲染优化的一些思路\n\n<a name="7b4ab061"></a>\n## 先说导致长列表性能及体现不佳的原因\n\n需要 `渲染大量的DOM节点` 及 `频繁的DOM操作` ，展开说就是 每个节点都需要浏览器 进行`计算`、`布局`和`绘制` 等。 如果总结，那么其实就是 所谓的 **CPU的瓶颈**\n\n另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就是所谓的 **IO的瓶颈** （这里主要指`网络IO`）\n\n<a name="89b6d95a"></a>\n## 一些常见的优化思路\n\n<a name="2b2470c2"></a>\n### 1、分页\n\n最简单且见效的方法，但需要与 `用户体验` 做平衡\n\n<a name="c7123451"></a>\n### 2、虚拟滚动、虚拟列表\n\n比较常见且大规模应用的思路，具体的一些`要点`：\n\n- `可视区域`： 做`绝对定位`，left、right、top 设置为 0\n- `滚动区域`：用于`形成滚动条`，做绝对定位，`left、right、top` 设置为 0，`z-index:-1`\n- `真实渲染区域`：滚动时使用`translate3d(x,y,z)`\n\n具体步骤：\n\n1. 计算当前可见区域起始数据的 `startIndex`\n2. 计算当前可见区域结束数据的 `endIndex`\n3. 计算当前可见区域的数据，并渲染到页面中\n4. 计算 `startIndex` 对应的数据在整个列表中的偏移位置 `startOffset`，并设置到列表上\n5. 在滚动的时候，修改`真实渲染区域`的 `transform: translate3d(0, y, 0)`\n\n下面是一段示例代码：\n\n```javascript\nupdateVisibleData(scrollTop) {\n  scrollTop = scrollTop || 0;\n  // 取得可见区域的可见列表项数量\n  const visibleCount = Math.ceil(this.$el.clientHeight / this.itemHeight); \n  // 取得可见区域的起始数据索引\n  const start = Math.floor(scrollTop / this.itemHeight); \n  // 取得可见区域的结束数据索引\n  const end = start + visibleCount; \n  // 计算出可见区域对应的数据，让 Vue.js 更新\n  this.visibleData = this.data.slice(start, end); \n  // 把可见区域的 top 设置为起始元素在整个列表中的位置（使用 transform 是为了更好的性能）\n  this.$refs.content.style.webkitTransform = `translate3d(0, ${ start * this.itemHeight }px, 0)`; \n}\n```\n\n`动态高度`的场景：需要在渲染时`动态计算`每个列表项的高度，并根据`实际高度`进行渲染，下面是`updateVisibleData` 的一个思路。\n\n```javascript\nupdateVisibleData(scrollTop) {\n  scrollTop = scrollTop || 0;\n  const start = this.findNearestItemIndex(scrollTop);\n  const end = this.findNearestItemIndex(scrollTop + this.$el.clientHeight);\n  this.visibleData = this.data.slice(start, Math.min(end + 1, this.data.length));\n  // 通过具体方法来设计\n  this.$refs.content.style.webkitTransform = `translate3d(0, ${ this.getItemSizeAndOffset(start).offset }px, 0)`;\n}\n```\n\n一个细节，`ios` 没法实时 触发 `scroll` 的问题？\n\n- 使用 `iscroll` 或者   `better-scroll` 等成熟的第三方库\n- `ontouchmove` 来兼容下\n- `-webkit-overflow-scrolling:touch` 设置有`回弹效果` \n   - `auto`: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。\n   - `touch` , 有回弹效果\n\n其他的一些细节优化点：\n\n- 使用`骨架片`优化白屏\n- 使用新的API，提高性能 \n   - `scroll` 时，使用 `requestAnimationFrame` 来包装回调\n   - 或者做下`节流`\n- 使用`缓存`，需要把`尺寸、偏移`等信息进行一个`缓存`\n- 图片`懒加载`\n\n<a name="a1922248"></a>\n## 3、其他的思路\n\n- 使用`缓存` ，包括数据缓存，也包括重复利用节点等\n- `懒加载` 与 `预加载`\n- 减少DOM操作 ，精简 DOM 结构\n- 使用`Web Worker`  将页面的`渲染`和`计算逻辑`分离开来\n- 服务器端渲染 ， `SSR`\n- CSS布局优化，减少`回流`等\n- CSS3硬件加速\n- 优化渲染性能，比如`CSS样式优化`和 `JS性能优化`\n- 图片优化 ， `懒加载`和`预加载` 及 `压缩` ，`缩略图` ， 图片格式比如 `WebP` 更小，`jpg` 更快渲染等\n- 使用渐进式渲染 ，先渲染关键内容\n- 新 API 使用，比如 `requestIdleCallback` 空闲时间再执行\n- `HTTP`请求优化等\n\n> [!tip]<br />JPEG 格式不支持透明度设置\n\n\n<a name="9415a826"></a>\n## 最后\n\n还是需要根据`实际情况` 选择 `ROI` 最大的方案，找 主要矛盾。\n',body_html:`<!doctype html><div class="lake-content" typography="classic"><p id="u21ee6653" class="ne-p"><span class="ne-text">#fe  #前端性能</span></p><h1 id="103be461"><span class="ne-text">长列表渲染优化的一些思路</span></h1><p id="uf2215eac" class="ne-p"><br></p><h2 id="7b4ab061"><span class="ne-text">先说导致长列表性能及体现不佳的原因</span></h2><p id="ud41bad08" class="ne-p"><br></p><p id="u697c6777" class="ne-p"><span class="ne-text">需要 </span><code class="ne-code"><span class="ne-text">渲染大量的DOM节点</span></code><span class="ne-text"> 及 </span><code class="ne-code"><span class="ne-text">频繁的DOM操作</span></code><span class="ne-text"> ，展开说就是 每个节点都需要浏览器 进行</span><code class="ne-code"><span class="ne-text">计算</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">布局</span></code><span class="ne-text">和</span><code class="ne-code"><span class="ne-text">绘制</span></code><span class="ne-text"> 等。 如果总结，那么其实就是 所谓的 </span><strong><span class="ne-text">CPU的瓶颈</span></strong></p><p id="u7dff0cf5" class="ne-p"><br></p><p id="u46d3b7d7" class="ne-p"><span class="ne-text">另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就是所谓的 </span><strong><span class="ne-text">IO的瓶颈</span></strong><span class="ne-text"> （这里主要指</span><code class="ne-code"><span class="ne-text">网络IO</span></code><span class="ne-text">）</span></p><p id="ueeed47d0" class="ne-p"><br></p><h2 id="89b6d95a"><span class="ne-text">一些常见的优化思路</span></h2><p id="u6854bc90" class="ne-p"><br></p><h3 id="2b2470c2"><span class="ne-text">1、分页</span></h3><p id="ub7bec919" class="ne-p"><br></p><p id="ud642b3f4" class="ne-p"><span class="ne-text">最简单且见效的方法，但需要与 </span><code class="ne-code"><span class="ne-text">用户体验</span></code><span class="ne-text"> 做平衡</span></p><p id="u2579c27a" class="ne-p"><br></p><h3 id="c7123451"><span class="ne-text">2、虚拟滚动、虚拟列表</span></h3><p id="u8e451515" class="ne-p"><br></p><p id="u0fe7a359" class="ne-p"><span class="ne-text">比较常见且大规模应用的思路，具体的一些</span><code class="ne-code"><span class="ne-text">要点</span></code><span class="ne-text">：</span></p><p id="uc885cff0" class="ne-p"><br></p><ul class="ne-ul"><li id="u37bf4f37"><code class="ne-code"><span class="ne-text">可视区域</span></code><span class="ne-text">： 做</span><code class="ne-code"><span class="ne-text">绝对定位</span></code><span class="ne-text">，left、right、top 设置为 0</span></li><li id="ue687535d"><code class="ne-code"><span class="ne-text">滚动区域</span></code><span class="ne-text">：用于</span><code class="ne-code"><span class="ne-text">形成滚动条</span></code><span class="ne-text">，做绝对定位，</span><code class="ne-code"><span class="ne-text">left、right、top</span></code><span class="ne-text"> 设置为 0，</span><code class="ne-code"><span class="ne-text">z-index:-1</span></code></li><li id="ua9b68d96"><code class="ne-code"><span class="ne-text">真实渲染区域</span></code><span class="ne-text">：滚动时使用</span><code class="ne-code"><span class="ne-text">translate3d(x,y,z)</span></code></li></ul><p id="ue4aacef2" class="ne-p"><br></p><p id="uac3ae1b8" class="ne-p"><span class="ne-text">具体步骤：</span></p><p id="ub1904f9b" class="ne-p"><br></p><ol class="ne-ol"><li id="u4e4b34e8"><span class="ne-text">计算当前可见区域起始数据的 </span><code class="ne-code"><span class="ne-text">startIndex</span></code></li><li id="u445be381"><span class="ne-text">计算当前可见区域结束数据的 </span><code class="ne-code"><span class="ne-text">endIndex</span></code></li><li id="ue81a954c"><span class="ne-text">计算当前可见区域的数据，并渲染到页面中</span></li><li id="u1b6e019a"><span class="ne-text">计算 </span><code class="ne-code"><span class="ne-text">startIndex</span></code><span class="ne-text"> 对应的数据在整个列表中的偏移位置 </span><code class="ne-code"><span class="ne-text">startOffset</span></code><span class="ne-text">，并设置到列表上</span></li><li id="ud15786ad"><span class="ne-text">在滚动的时候，修改</span><code class="ne-code"><span class="ne-text">真实渲染区域</span></code><span class="ne-text">的 </span><code class="ne-code"><span class="ne-text">transform: translate3d(0, y, 0)</span></code></li></ol><p id="u4e15e8c2" class="ne-p"><br></p><p id="uca465b75" class="ne-p"><span class="ne-text">下面是一段示例代码：</span></p><p id="u3461ba96" class="ne-p"><br></p><pre data-language="javascript" id="60842c43" class="ne-codeblock language-javascript">updateVisibleData(scrollTop) {
  scrollTop = scrollTop || 0;
  // 取得可见区域的可见列表项数量
  const visibleCount = Math.ceil(this.$el.clientHeight / this.itemHeight); 
  // 取得可见区域的起始数据索引
  const start = Math.floor(scrollTop / this.itemHeight); 
  // 取得可见区域的结束数据索引
  const end = start + visibleCount; 
  // 计算出可见区域对应的数据，让 Vue.js 更新
  this.visibleData = this.data.slice(start, end); 
  // 把可见区域的 top 设置为起始元素在整个列表中的位置（使用 transform 是为了更好的性能）
  this.$refs.content.style.webkitTransform = \`translate3d(0, \${ start * this.itemHeight }px, 0)\`; 
}</pre><p id="ub97d1f69" class="ne-p"><br></p><p id="u5fe95c4e" class="ne-p"><code class="ne-code"><span class="ne-text">动态高度</span></code><span class="ne-text">的场景：需要在渲染时</span><code class="ne-code"><span class="ne-text">动态计算</span></code><span class="ne-text">每个列表项的高度，并根据</span><code class="ne-code"><span class="ne-text">实际高度</span></code><span class="ne-text">进行渲染，下面是</span><code class="ne-code"><span class="ne-text">updateVisibleData</span></code><span class="ne-text"> 的一个思路。</span></p><p id="uce9efd9b" class="ne-p"><br></p><pre data-language="javascript" id="a51a3bdc" class="ne-codeblock language-javascript">updateVisibleData(scrollTop) {
  scrollTop = scrollTop || 0;
  const start = this.findNearestItemIndex(scrollTop);
  const end = this.findNearestItemIndex(scrollTop + this.$el.clientHeight);
  this.visibleData = this.data.slice(start, Math.min(end + 1, this.data.length));
  // 通过具体方法来设计
  this.$refs.content.style.webkitTransform = \`translate3d(0, \${ this.getItemSizeAndOffset(start).offset }px, 0)\`;
}</pre><p id="u8847bdc0" class="ne-p"><br></p><p id="ue7b19ca5" class="ne-p"><span class="ne-text">一个细节，</span><code class="ne-code"><span class="ne-text">ios</span></code><span class="ne-text"> 没法实时 触发 </span><code class="ne-code"><span class="ne-text">scroll</span></code><span class="ne-text"> 的问题？</span></p><p id="u4a277f73" class="ne-p"><br></p><ul class="ne-ul"><li id="uedc59753"><span class="ne-text">使用 </span><code class="ne-code"><span class="ne-text">iscroll</span></code><span class="ne-text"> 或者   </span><code class="ne-code"><span class="ne-text">better-scroll</span></code><span class="ne-text"> 等成熟的第三方库</span></li><li id="ucb584ca8"><code class="ne-code"><span class="ne-text">ontouchmove</span></code><span class="ne-text"> 来兼容下</span></li><li id="u2a14b80e"><code class="ne-code"><span class="ne-text">-webkit-overflow-scrolling:touch</span></code><span class="ne-text"> 设置有</span><code class="ne-code"><span class="ne-text">回弹效果</span></code><span class="ne-text"> </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="u23530591"><code class="ne-code"><span class="ne-text">auto</span></code><span class="ne-text">: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。</span></li><li id="u9ad11b73"><code class="ne-code"><span class="ne-text">touch</span></code><span class="ne-text"> , 有回弹效果</span></li></ul></ul><p id="u9e4be34d" class="ne-p"><br></p><p id="u4f5dabd8" class="ne-p"><span class="ne-text">其他的一些细节优化点：</span></p><p id="ue2470b8b" class="ne-p"><br></p><ul class="ne-ul"><li id="ua39f2a9b"><span class="ne-text">使用</span><code class="ne-code"><span class="ne-text">骨架片</span></code><span class="ne-text">优化白屏</span></li><li id="ubbdc3b2e"><span class="ne-text">使用新的API，提高性能 </span></li></ul><ul class="ne-list-wrap"><ul ne-level="1" class="ne-ul"><li id="u2f32f81b"><code class="ne-code"><span class="ne-text">scroll</span></code><span class="ne-text"> 时，使用 </span><code class="ne-code"><span class="ne-text">requestAnimationFrame</span></code><span class="ne-text"> 来包装回调</span></li><li id="ub7a635fb"><span class="ne-text">或者做下</span><code class="ne-code"><span class="ne-text">节流</span></code></li></ul></ul><ul class="ne-ul"><li id="u45ed41e8"><span class="ne-text">使用</span><code class="ne-code"><span class="ne-text">缓存</span></code><span class="ne-text">，需要把</span><code class="ne-code"><span class="ne-text">尺寸、偏移</span></code><span class="ne-text">等信息进行一个</span><code class="ne-code"><span class="ne-text">缓存</span></code></li><li id="u126d9afe"><span class="ne-text">图片</span><code class="ne-code"><span class="ne-text">懒加载</span></code></li></ul><p id="u2e94c5de" class="ne-p"><br></p><h2 id="a1922248"><span class="ne-text">3、其他的思路</span></h2><p id="u00b584e4" class="ne-p"><br></p><ul class="ne-ul"><li id="u0009865a"><span class="ne-text">使用</span><code class="ne-code"><span class="ne-text">缓存</span></code><span class="ne-text"> ，包括数据缓存，也包括重复利用节点等</span></li><li id="u3bef18ef"><code class="ne-code"><span class="ne-text">懒加载</span></code><span class="ne-text"> 与 </span><code class="ne-code"><span class="ne-text">预加载</span></code></li><li id="u18390bd3"><span class="ne-text">减少DOM操作 ，精简 DOM 结构</span></li><li id="u17437337"><span class="ne-text">使用</span><code class="ne-code"><span class="ne-text">Web Worker</span></code><span class="ne-text">  将页面的</span><code class="ne-code"><span class="ne-text">渲染</span></code><span class="ne-text">和</span><code class="ne-code"><span class="ne-text">计算逻辑</span></code><span class="ne-text">分离开来</span></li><li id="u45e52d50"><span class="ne-text">服务器端渲染 ， </span><code class="ne-code"><span class="ne-text">SSR</span></code></li><li id="u5f842a1c"><span class="ne-text">CSS布局优化，减少</span><code class="ne-code"><span class="ne-text">回流</span></code><span class="ne-text">等</span></li><li id="ud0a5f0fe"><span class="ne-text">CSS3硬件加速</span></li><li id="u890284bd"><span class="ne-text">优化渲染性能，比如</span><code class="ne-code"><span class="ne-text">CSS样式优化</span></code><span class="ne-text">和 </span><code class="ne-code"><span class="ne-text">JS性能优化</span></code></li><li id="u6fb80be9"><span class="ne-text">图片优化 ， </span><code class="ne-code"><span class="ne-text">懒加载</span></code><span class="ne-text">和</span><code class="ne-code"><span class="ne-text">预加载</span></code><span class="ne-text"> 及 </span><code class="ne-code"><span class="ne-text">压缩</span></code><span class="ne-text"> ，</span><code class="ne-code"><span class="ne-text">缩略图</span></code><span class="ne-text"> ， 图片格式比如 </span><code class="ne-code"><span class="ne-text">WebP</span></code><span class="ne-text"> 更小，</span><code class="ne-code"><span class="ne-text">jpg</span></code><span class="ne-text"> 更快渲染等</span></li><li id="ube8c967c"><span class="ne-text">使用渐进式渲染 ，先渲染关键内容</span></li><li id="u96e93338"><span class="ne-text">新 API 使用，比如 </span><code class="ne-code"><span class="ne-text">requestIdleCallback</span></code><span class="ne-text"> 空闲时间再执行</span></li><li id="u2318431f"><code class="ne-code"><span class="ne-text">HTTP</span></code><span class="ne-text">请求优化等</span></li></ul><p id="u2651e689" class="ne-p"><br></p><div class="ne-quote"><p id="ue1cd4b42" class="ne-p"><span class="ne-text">[!tip]<br /></span><span class="ne-text">JPEG 格式不支持透明度设置</span></p></div><p id="u7823e22d" class="ne-p"><br></p><h2 id="9415a826"><span class="ne-text">最后</span></h2><p id="u098f34d3" class="ne-p"><br></p><p id="ud5a8c9dc" class="ne-p"><span class="ne-text">还是需要根据</span><code class="ne-code"><span class="ne-text">实际情况</span></code><span class="ne-text"> 选择 </span><code class="ne-code"><span class="ne-text">ROI</span></code><span class="ne-text"> 最大的方案，找 主要矛盾。</span></p></div>`,body_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><p data-lake-id="u21ee6653" id="u21ee6653"><span data-lake-id="uaf6ca3fe" id="uaf6ca3fe">#fe  #前端性能</span></p><h1 data-lake-id="103be461" id="103be461"><span data-lake-id="uaa6d25e8" id="uaa6d25e8">长列表渲染优化的一些思路</span></h1><p data-lake-id="uf2215eac" id="uf2215eac"><br></p><h2 data-lake-id="7b4ab061" id="7b4ab061"><span data-lake-id="u067477e9" id="u067477e9">先说导致长列表性能及体现不佳的原因</span></h2><p data-lake-id="ud41bad08" id="ud41bad08"><br></p><p data-lake-id="u697c6777" id="u697c6777"><span data-lake-id="u83030188" id="u83030188">需要 </span><code data-lake-id="u70756772" id="u70756772"><span data-lake-id="ude3a66dc" id="ude3a66dc">渲染大量的DOM节点</span></code><span data-lake-id="u1c49ed38" id="u1c49ed38"> 及 </span><code data-lake-id="u2534a395" id="u2534a395"><span data-lake-id="ua358ad5f" id="ua358ad5f">频繁的DOM操作</span></code><span data-lake-id="u27859089" id="u27859089"> ，展开说就是 每个节点都需要浏览器 进行</span><code data-lake-id="u956da5ca" id="u956da5ca"><span data-lake-id="u3ca1dd43" id="u3ca1dd43">计算</span></code><span data-lake-id="uc7a72708" id="uc7a72708">、</span><code data-lake-id="u7effc076" id="u7effc076"><span data-lake-id="u5434f8f6" id="u5434f8f6">布局</span></code><span data-lake-id="u226524ea" id="u226524ea">和</span><code data-lake-id="uf37995cc" id="uf37995cc"><span data-lake-id="u20e9b229" id="u20e9b229">绘制</span></code><span data-lake-id="u877f05e7" id="u877f05e7"> 等。 如果总结，那么其实就是 所谓的 </span><strong><span data-lake-id="u479cc1b1" id="u479cc1b1">CPU的瓶颈</span></strong></p><p data-lake-id="u7dff0cf5" id="u7dff0cf5"><br></p><p data-lake-id="u46d3b7d7" id="u46d3b7d7"><span data-lake-id="uf66dcc7a" id="uf66dcc7a">另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就是所谓的 </span><strong><span data-lake-id="u6c1222fb" id="u6c1222fb">IO的瓶颈</span></strong><span data-lake-id="u8bca0a17" id="u8bca0a17"> （这里主要指</span><code data-lake-id="u0cd33845" id="u0cd33845"><span data-lake-id="u13a90320" id="u13a90320">网络IO</span></code><span data-lake-id="u9c90f8fb" id="u9c90f8fb">）</span></p><p data-lake-id="ueeed47d0" id="ueeed47d0"><br></p><h2 data-lake-id="89b6d95a" id="89b6d95a"><span data-lake-id="ubb0411f4" id="ubb0411f4">一些常见的优化思路</span></h2><p data-lake-id="u6854bc90" id="u6854bc90"><br></p><h3 data-lake-id="2b2470c2" id="2b2470c2"><span data-lake-id="ue74709f0" id="ue74709f0">1、分页</span></h3><p data-lake-id="ub7bec919" id="ub7bec919"><br></p><p data-lake-id="ud642b3f4" id="ud642b3f4"><span data-lake-id="uda794322" id="uda794322">最简单且见效的方法，但需要与 </span><code data-lake-id="ucde59ea0" id="ucde59ea0"><span data-lake-id="u89673fd0" id="u89673fd0">用户体验</span></code><span data-lake-id="uf4acb1ef" id="uf4acb1ef"> 做平衡</span></p><p data-lake-id="u2579c27a" id="u2579c27a"><br></p><h3 data-lake-id="c7123451" id="c7123451"><span data-lake-id="u5fc4d6d2" id="u5fc4d6d2">2、虚拟滚动、虚拟列表</span></h3><p data-lake-id="u8e451515" id="u8e451515"><br></p><p data-lake-id="u0fe7a359" id="u0fe7a359"><span data-lake-id="u3a52eddb" id="u3a52eddb">比较常见且大规模应用的思路，具体的一些</span><code data-lake-id="ua27b7724" id="ua27b7724"><span data-lake-id="u1f106f44" id="u1f106f44">要点</span></code><span data-lake-id="u72f56ebc" id="u72f56ebc">：</span></p><p data-lake-id="uc885cff0" id="uc885cff0"><br></p><ul list="uc41ed4e8"><li fid="u41fcc621" data-lake-id="u37bf4f37" id="u37bf4f37"><code data-lake-id="u10bb2290" id="u10bb2290"><span data-lake-id="u8f69ab7f" id="u8f69ab7f">可视区域</span></code><span data-lake-id="uf575c4ae" id="uf575c4ae">： 做</span><code data-lake-id="u3f1b0d36" id="u3f1b0d36"><span data-lake-id="u6cc67fb1" id="u6cc67fb1">绝对定位</span></code><span data-lake-id="ucccdd225" id="ucccdd225">，left、right、top 设置为 0</span></li><li fid="u41fcc621" data-lake-id="ue687535d" id="ue687535d"><code data-lake-id="u884445d1" id="u884445d1"><span data-lake-id="u81f8ec22" id="u81f8ec22">滚动区域</span></code><span data-lake-id="u00c686e0" id="u00c686e0">：用于</span><code data-lake-id="u51b3ddb0" id="u51b3ddb0"><span data-lake-id="uae0988bd" id="uae0988bd">形成滚动条</span></code><span data-lake-id="uaadf1a2c" id="uaadf1a2c">，做绝对定位，</span><code data-lake-id="u25a43068" id="u25a43068"><span data-lake-id="u601ba7a1" id="u601ba7a1">left、right、top</span></code><span data-lake-id="u7ef1481c" id="u7ef1481c"> 设置为 0，</span><code data-lake-id="u91cb1dfe" id="u91cb1dfe"><span data-lake-id="u2f0ade20" id="u2f0ade20">z-index:-1</span></code></li><li fid="u41fcc621" data-lake-id="ua9b68d96" id="ua9b68d96"><code data-lake-id="u0ac5f1ad" id="u0ac5f1ad"><span data-lake-id="ue6e794f4" id="ue6e794f4">真实渲染区域</span></code><span data-lake-id="u8470597e" id="u8470597e">：滚动时使用</span><code data-lake-id="ub3051f2d" id="ub3051f2d"><span data-lake-id="u68d2f82c" id="u68d2f82c">translate3d(x,y,z)</span></code></li></ul><p data-lake-id="ue4aacef2" id="ue4aacef2"><br></p><p data-lake-id="uac3ae1b8" id="uac3ae1b8"><span data-lake-id="ub48b8bdc" id="ub48b8bdc">具体步骤：</span></p><p data-lake-id="ub1904f9b" id="ub1904f9b"><br></p><ol list="u824d3f02"><li fid="u65572215" data-lake-id="u4e4b34e8" id="u4e4b34e8"><span data-lake-id="u3cbd41fc" id="u3cbd41fc">计算当前可见区域起始数据的 </span><code data-lake-id="u3bc1bbea" id="u3bc1bbea"><span data-lake-id="u87a82a00" id="u87a82a00">startIndex</span></code></li><li fid="u65572215" data-lake-id="u445be381" id="u445be381"><span data-lake-id="ub5bd0104" id="ub5bd0104">计算当前可见区域结束数据的 </span><code data-lake-id="u5c01db2d" id="u5c01db2d"><span data-lake-id="u4b0012ca" id="u4b0012ca">endIndex</span></code></li><li fid="u65572215" data-lake-id="ue81a954c" id="ue81a954c"><span data-lake-id="u0eb07e03" id="u0eb07e03">计算当前可见区域的数据，并渲染到页面中</span></li><li fid="u65572215" data-lake-id="u1b6e019a" id="u1b6e019a"><span data-lake-id="u8f7c6dc9" id="u8f7c6dc9">计算 </span><code data-lake-id="u2b8f14aa" id="u2b8f14aa"><span data-lake-id="ucc9a4bcf" id="ucc9a4bcf">startIndex</span></code><span data-lake-id="uae7b2efc" id="uae7b2efc"> 对应的数据在整个列表中的偏移位置 </span><code data-lake-id="u799d37e1" id="u799d37e1"><span data-lake-id="u724227c6" id="u724227c6">startOffset</span></code><span data-lake-id="ub92c90b7" id="ub92c90b7">，并设置到列表上</span></li><li fid="u65572215" data-lake-id="ud15786ad" id="ud15786ad"><span data-lake-id="u8f4856a1" id="u8f4856a1">在滚动的时候，修改</span><code data-lake-id="u6f712ebb" id="u6f712ebb"><span data-lake-id="u77cd8c62" id="u77cd8c62">真实渲染区域</span></code><span data-lake-id="u1ed361e8" id="u1ed361e8">的 </span><code data-lake-id="u3e100234" id="u3e100234"><span data-lake-id="u5074bc72" id="u5074bc72">transform: translate3d(0, y, 0)</span></code></li></ol><p data-lake-id="u4e15e8c2" id="u4e15e8c2"><br></p><p data-lake-id="uca465b75" id="uca465b75"><span data-lake-id="ue40f3239" id="ue40f3239">下面是一段示例代码：</span></p><p data-lake-id="u3461ba96" id="u3461ba96"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22updateVisibleData(scrollTop)%20%7B%5Cn%20%20scrollTop%20%3D%20scrollTop%20%7C%7C%200%3B%5Cn%20%20%2F%2F%20%E5%8F%96%E5%BE%97%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%E5%8F%AF%E8%A7%81%E5%88%97%E8%A1%A8%E9%A1%B9%E6%95%B0%E9%87%8F%5Cn%20%20const%20visibleCount%20%3D%20Math.ceil(this.%24el.clientHeight%20%2F%20this.itemHeight)%3B%20%5Cn%20%20%2F%2F%20%E5%8F%96%E5%BE%97%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%E8%B5%B7%E5%A7%8B%E6%95%B0%E6%8D%AE%E7%B4%A2%E5%BC%95%5Cn%20%20const%20start%20%3D%20Math.floor(scrollTop%20%2F%20this.itemHeight)%3B%20%5Cn%20%20%2F%2F%20%E5%8F%96%E5%BE%97%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%E7%BB%93%E6%9D%9F%E6%95%B0%E6%8D%AE%E7%B4%A2%E5%BC%95%5Cn%20%20const%20end%20%3D%20start%20%2B%20visibleCount%3B%20%5Cn%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E5%87%BA%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E5%AF%B9%E5%BA%94%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%AE%A9%20Vue.js%20%E6%9B%B4%E6%96%B0%5Cn%20%20this.visibleData%20%3D%20this.data.slice(start%2C%20end)%3B%20%5Cn%20%20%2F%2F%20%E6%8A%8A%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%20top%20%E8%AE%BE%E7%BD%AE%E4%B8%BA%E8%B5%B7%E5%A7%8B%E5%85%83%E7%B4%A0%E5%9C%A8%E6%95%B4%E4%B8%AA%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%88%E4%BD%BF%E7%94%A8%20transform%20%E6%98%AF%E4%B8%BA%E4%BA%86%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%80%A7%E8%83%BD%EF%BC%89%5Cn%20%20this.%24refs.content.style.webkitTransform%20%3D%20%60translate3d(0%2C%20%24%7B%20start%20*%20this.itemHeight%20%7Dpx%2C%200)%60%3B%20%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2260842c43%22%7D"></card><p data-lake-id="ub97d1f69" id="ub97d1f69"><br></p><p data-lake-id="u5fe95c4e" id="u5fe95c4e"><code data-lake-id="uc8cf5283" id="uc8cf5283"><span data-lake-id="ude3a0130" id="ude3a0130">动态高度</span></code><span data-lake-id="ua5d23faf" id="ua5d23faf">的场景：需要在渲染时</span><code data-lake-id="ubaaf5526" id="ubaaf5526"><span data-lake-id="ucbb12b26" id="ucbb12b26">动态计算</span></code><span data-lake-id="u161f6e63" id="u161f6e63">每个列表项的高度，并根据</span><code data-lake-id="ue6d2691f" id="ue6d2691f"><span data-lake-id="u6048b605" id="u6048b605">实际高度</span></code><span data-lake-id="u229e463e" id="u229e463e">进行渲染，下面是</span><code data-lake-id="u7a04f013" id="u7a04f013"><span data-lake-id="u1007578c" id="u1007578c">updateVisibleData</span></code><span data-lake-id="u9514f4a3" id="u9514f4a3"> 的一个思路。</span></p><p data-lake-id="uce9efd9b" id="uce9efd9b"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22updateVisibleData(scrollTop)%20%7B%5Cn%20%20scrollTop%20%3D%20scrollTop%20%7C%7C%200%3B%5Cn%20%20const%20start%20%3D%20this.findNearestItemIndex(scrollTop)%3B%5Cn%20%20const%20end%20%3D%20this.findNearestItemIndex(scrollTop%20%2B%20this.%24el.clientHeight)%3B%5Cn%20%20this.visibleData%20%3D%20this.data.slice(start%2C%20Math.min(end%20%2B%201%2C%20this.data.length))%3B%5Cn%20%20%2F%2F%20%E9%80%9A%E8%BF%87%E5%85%B7%E4%BD%93%E6%96%B9%E6%B3%95%E6%9D%A5%E8%AE%BE%E8%AE%A1%5Cn%20%20this.%24refs.content.style.webkitTransform%20%3D%20%60translate3d(0%2C%20%24%7B%20this.getItemSizeAndOffset(start).offset%20%7Dpx%2C%200)%60%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22id%22%3A%22a51a3bdc%22%7D"></card><p data-lake-id="u8847bdc0" id="u8847bdc0"><br></p><p data-lake-id="ue7b19ca5" id="ue7b19ca5"><span data-lake-id="u353c1224" id="u353c1224">一个细节，</span><code data-lake-id="u6d7a5606" id="u6d7a5606"><span data-lake-id="ud7596f92" id="ud7596f92">ios</span></code><span data-lake-id="u409debe6" id="u409debe6"> 没法实时 触发 </span><code data-lake-id="ua058debe" id="ua058debe"><span data-lake-id="udd530c9a" id="udd530c9a">scroll</span></code><span data-lake-id="u8fa2553b" id="u8fa2553b"> 的问题？</span></p><p data-lake-id="u4a277f73" id="u4a277f73"><br></p><ul list="u6fcdf433"><li fid="ud27ef254" data-lake-id="uedc59753" id="uedc59753"><span data-lake-id="u18ba7141" id="u18ba7141">使用 </span><code data-lake-id="u504d7892" id="u504d7892"><span data-lake-id="u930788a6" id="u930788a6">iscroll</span></code><span data-lake-id="uc5fd23f2" id="uc5fd23f2"> 或者   </span><code data-lake-id="u269cb3e8" id="u269cb3e8"><span data-lake-id="u9e419a28" id="u9e419a28">better-scroll</span></code><span data-lake-id="ud84a937a" id="ud84a937a"> 等成熟的第三方库</span></li><li fid="ud27ef254" data-lake-id="ucb584ca8" id="ucb584ca8"><code data-lake-id="ub237a946" id="ub237a946"><span data-lake-id="ua628b7e9" id="ua628b7e9">ontouchmove</span></code><span data-lake-id="u345e1dcc" id="u345e1dcc"> 来兼容下</span></li><li fid="ud27ef254" data-lake-id="u2a14b80e" id="u2a14b80e"><code data-lake-id="uf6e3c5dc" id="uf6e3c5dc"><span data-lake-id="u98045f67" id="u98045f67">-webkit-overflow-scrolling:touch</span></code><span data-lake-id="ue712baf0" id="ue712baf0"> 设置有</span><code data-lake-id="u4c1b4abd" id="u4c1b4abd"><span data-lake-id="u93e12368" id="u93e12368">回弹效果</span></code><span data-lake-id="u459595b2" id="u459595b2"> </span></li></ul><ul list="u6fcdf433" data-lake-indent="1"><li fid="uc5f5e227" data-lake-id="u23530591" id="u23530591"><code data-lake-id="ub270e004" id="ub270e004"><span data-lake-id="u7eff3ef7" id="u7eff3ef7">auto</span></code><span data-lake-id="ua31ea9cf" id="ua31ea9cf">: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。</span></li><li fid="uc5f5e227" data-lake-id="u9ad11b73" id="u9ad11b73"><code data-lake-id="u590f7036" id="u590f7036"><span data-lake-id="u96537969" id="u96537969">touch</span></code><span data-lake-id="ud33e5be1" id="ud33e5be1"> , 有回弹效果</span></li></ul><p data-lake-id="u9e4be34d" id="u9e4be34d"><br></p><p data-lake-id="u4f5dabd8" id="u4f5dabd8"><span data-lake-id="u099a4133" id="u099a4133">其他的一些细节优化点：</span></p><p data-lake-id="ue2470b8b" id="ue2470b8b"><br></p><ul list="u04c3e5de"><li fid="u22bb5b9d" data-lake-id="ua39f2a9b" id="ua39f2a9b"><span data-lake-id="u3b12474e" id="u3b12474e">使用</span><code data-lake-id="ub4d8ede7" id="ub4d8ede7"><span data-lake-id="ubb7978c4" id="ubb7978c4">骨架片</span></code><span data-lake-id="u58b48fb7" id="u58b48fb7">优化白屏</span></li><li fid="u22bb5b9d" data-lake-id="ubbdc3b2e" id="ubbdc3b2e"><span data-lake-id="ua951434f" id="ua951434f">使用新的API，提高性能 </span></li></ul><ul list="u04c3e5de" data-lake-indent="1"><li fid="uc3399a3d" data-lake-id="u2f32f81b" id="u2f32f81b"><code data-lake-id="ue7cff0cc" id="ue7cff0cc"><span data-lake-id="u63af3051" id="u63af3051">scroll</span></code><span data-lake-id="u2a5c822e" id="u2a5c822e"> 时，使用 </span><code data-lake-id="uf53a8fb6" id="uf53a8fb6"><span data-lake-id="u08e31e66" id="u08e31e66">requestAnimationFrame</span></code><span data-lake-id="ue6dca7a7" id="ue6dca7a7"> 来包装回调</span></li><li fid="uc3399a3d" data-lake-id="ub7a635fb" id="ub7a635fb"><span data-lake-id="u02ada23a" id="u02ada23a">或者做下</span><code data-lake-id="u0f0704a9" id="u0f0704a9"><span data-lake-id="u7375f794" id="u7375f794">节流</span></code></li></ul><ul list="u04c3e5de" start="3"><li fid="u22bb5b9d" data-lake-id="u45ed41e8" id="u45ed41e8"><span data-lake-id="u9c72a1c8" id="u9c72a1c8">使用</span><code data-lake-id="u390e8439" id="u390e8439"><span data-lake-id="ube7c2d3f" id="ube7c2d3f">缓存</span></code><span data-lake-id="uc01cf0ea" id="uc01cf0ea">，需要把</span><code data-lake-id="ue8ce8003" id="ue8ce8003"><span data-lake-id="uc22140e4" id="uc22140e4">尺寸、偏移</span></code><span data-lake-id="u5193faf2" id="u5193faf2">等信息进行一个</span><code data-lake-id="uf360dfbe" id="uf360dfbe"><span data-lake-id="u1943a005" id="u1943a005">缓存</span></code></li><li fid="u22bb5b9d" data-lake-id="u126d9afe" id="u126d9afe"><span data-lake-id="ua9d2a660" id="ua9d2a660">图片</span><code data-lake-id="ub8dbdad6" id="ub8dbdad6"><span data-lake-id="u00efc805" id="u00efc805">懒加载</span></code></li></ul><p data-lake-id="u2e94c5de" id="u2e94c5de"><br></p><h2 data-lake-id="a1922248" id="a1922248"><span data-lake-id="u5e4b5f78" id="u5e4b5f78">3、其他的思路</span></h2><p data-lake-id="u00b584e4" id="u00b584e4"><br></p><ul list="u65a8da0f"><li fid="ua7da14be" data-lake-id="u0009865a" id="u0009865a"><span data-lake-id="u5194b662" id="u5194b662">使用</span><code data-lake-id="u9df95fc3" id="u9df95fc3"><span data-lake-id="u4a991c3b" id="u4a991c3b">缓存</span></code><span data-lake-id="ua3994e6f" id="ua3994e6f"> ，包括数据缓存，也包括重复利用节点等</span></li><li fid="ua7da14be" data-lake-id="u3bef18ef" id="u3bef18ef"><code data-lake-id="u0b264ec5" id="u0b264ec5"><span data-lake-id="u7ce4be7b" id="u7ce4be7b">懒加载</span></code><span data-lake-id="ue86fc279" id="ue86fc279"> 与 </span><code data-lake-id="u7b94ad88" id="u7b94ad88"><span data-lake-id="udb1ce527" id="udb1ce527">预加载</span></code></li><li fid="ua7da14be" data-lake-id="u18390bd3" id="u18390bd3"><span data-lake-id="u6b395f2e" id="u6b395f2e">减少DOM操作 ，精简 DOM 结构</span></li><li fid="ua7da14be" data-lake-id="u17437337" id="u17437337"><span data-lake-id="u4757b248" id="u4757b248">使用</span><code data-lake-id="udd345f2b" id="udd345f2b"><span data-lake-id="u5f5e1cf8" id="u5f5e1cf8">Web Worker</span></code><span data-lake-id="u41546166" id="u41546166">  将页面的</span><code data-lake-id="u47cd700b" id="u47cd700b"><span data-lake-id="u89a21815" id="u89a21815">渲染</span></code><span data-lake-id="u3426dc55" id="u3426dc55">和</span><code data-lake-id="u8bf8cf15" id="u8bf8cf15"><span data-lake-id="u82d7f741" id="u82d7f741">计算逻辑</span></code><span data-lake-id="ue8c1d0bc" id="ue8c1d0bc">分离开来</span></li><li fid="ua7da14be" data-lake-id="u45e52d50" id="u45e52d50"><span data-lake-id="u7f1ef47c" id="u7f1ef47c">服务器端渲染 ， </span><code data-lake-id="u7805134b" id="u7805134b"><span data-lake-id="uc730e57d" id="uc730e57d">SSR</span></code></li><li fid="ua7da14be" data-lake-id="u5f842a1c" id="u5f842a1c"><span data-lake-id="u0be4ffd0" id="u0be4ffd0">CSS布局优化，减少</span><code data-lake-id="ud675f89b" id="ud675f89b"><span data-lake-id="u7f98c50f" id="u7f98c50f">回流</span></code><span data-lake-id="ue879c14d" id="ue879c14d">等</span></li><li fid="ua7da14be" data-lake-id="ud0a5f0fe" id="ud0a5f0fe"><span data-lake-id="ud9a49f68" id="ud9a49f68">CSS3硬件加速</span></li><li fid="ua7da14be" data-lake-id="u890284bd" id="u890284bd"><span data-lake-id="u396a71a6" id="u396a71a6">优化渲染性能，比如</span><code data-lake-id="ud3245bb5" id="ud3245bb5"><span data-lake-id="u022562a0" id="u022562a0">CSS样式优化</span></code><span data-lake-id="ua156c066" id="ua156c066">和 </span><code data-lake-id="ua3545b16" id="ua3545b16"><span data-lake-id="u6ec1e45d" id="u6ec1e45d">JS性能优化</span></code></li><li fid="ua7da14be" data-lake-id="u6fb80be9" id="u6fb80be9"><span data-lake-id="uf33096ea" id="uf33096ea">图片优化 ， </span><code data-lake-id="u512d6061" id="u512d6061"><span data-lake-id="uc8aefa7e" id="uc8aefa7e">懒加载</span></code><span data-lake-id="u747829f0" id="u747829f0">和</span><code data-lake-id="uab5cb75b" id="uab5cb75b"><span data-lake-id="ud012f1ea" id="ud012f1ea">预加载</span></code><span data-lake-id="ued0a3fa4" id="ued0a3fa4"> 及 </span><code data-lake-id="u408ad08e" id="u408ad08e"><span data-lake-id="u4c20b7f7" id="u4c20b7f7">压缩</span></code><span data-lake-id="u37888c0f" id="u37888c0f"> ，</span><code data-lake-id="ue89a2c47" id="ue89a2c47"><span data-lake-id="u6dbe240f" id="u6dbe240f">缩略图</span></code><span data-lake-id="u9a7674ce" id="u9a7674ce"> ， 图片格式比如 </span><code data-lake-id="u9301f9e5" id="u9301f9e5"><span data-lake-id="uf49be664" id="uf49be664">WebP</span></code><span data-lake-id="u2d8e9adb" id="u2d8e9adb"> 更小，</span><code data-lake-id="udacfa176" id="udacfa176"><span data-lake-id="u9548f984" id="u9548f984">jpg</span></code><span data-lake-id="uaa0061c7" id="uaa0061c7"> 更快渲染等</span></li><li fid="ua7da14be" data-lake-id="ube8c967c" id="ube8c967c"><span data-lake-id="u6115b503" id="u6115b503">使用渐进式渲染 ，先渲染关键内容</span></li><li fid="ua7da14be" data-lake-id="u96e93338" id="u96e93338"><span data-lake-id="u59214b63" id="u59214b63">新 API 使用，比如 </span><code data-lake-id="u2a5ddea3" id="u2a5ddea3"><span data-lake-id="uc2d3e576" id="uc2d3e576">requestIdleCallback</span></code><span data-lake-id="u168db5cb" id="u168db5cb"> 空闲时间再执行</span></li><li fid="ua7da14be" data-lake-id="u2318431f" id="u2318431f"><code data-lake-id="u491edf96" id="u491edf96"><span data-lake-id="u81984200" id="u81984200">HTTP</span></code><span data-lake-id="uc65fce78" id="uc65fce78">请求优化等</span></li></ul><p data-lake-id="u2651e689" id="u2651e689"><br></p><blockquote data-lake-id="ud1332ba3" id="ud1332ba3"><p data-lake-id="ue1cd4b42" id="ue1cd4b42"><span data-lake-id="u779b0135" id="u779b0135">[!tip]<br /></span><span data-lake-id="u3bea3fc4" id="u3bea3fc4">JPEG 格式不支持透明度设置</span></p></blockquote><p data-lake-id="u7823e22d" id="u7823e22d"><br></p><h2 data-lake-id="9415a826" id="9415a826"><span data-lake-id="ue0f5b873" id="ue0f5b873">最后</span></h2><p data-lake-id="u098f34d3" id="u098f34d3"><br></p><p data-lake-id="ud5a8c9dc" id="ud5a8c9dc"><span data-lake-id="uf684b827" id="uf684b827">还是需要根据</span><code data-lake-id="u2a7a4c10" id="u2a7a4c10"><span data-lake-id="u07267529" id="u07267529">实际情况</span></code><span data-lake-id="uf9518ff5" id="uf9518ff5"> 选择 </span><code data-lake-id="uc5afb53a" id="uc5afb53a"><span data-lake-id="u7b199d01" id="u7b199d01">ROI</span></code><span data-lake-id="u523b35dd" id="u523b35dd"> 最大的方案，找 主要矛盾。</span></p>',body_draft_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="typography" content="classic" /><meta name="viewport" content="fixed" /><meta name="paragraphSpacing" content="relax" /><p data-lake-id="u21ee6653" id="u21ee6653"><span data-lake-id="uaf6ca3fe" id="uaf6ca3fe">#fe  #前端性能</span></p><h1 data-lake-id="103be461" id="103be461"><span data-lake-id="uaa6d25e8" id="uaa6d25e8">长列表渲染优化的一些思路</span></h1><p data-lake-id="uf2215eac" id="uf2215eac"><br></p><h2 data-lake-id="7b4ab061" id="7b4ab061"><span data-lake-id="u067477e9" id="u067477e9">先说导致长列表性能及体现不佳的原因</span></h2><p data-lake-id="ud41bad08" id="ud41bad08"><br></p><p data-lake-id="u697c6777" id="u697c6777"><span data-lake-id="u83030188" id="u83030188">需要 </span><code data-lake-id="u70756772" id="u70756772"><span data-lake-id="ude3a66dc" id="ude3a66dc">渲染大量的DOM节点</span></code><span data-lake-id="u1c49ed38" id="u1c49ed38"> 及 </span><code data-lake-id="u2534a395" id="u2534a395"><span data-lake-id="ua358ad5f" id="ua358ad5f">频繁的DOM操作</span></code><span data-lake-id="u27859089" id="u27859089"> ，展开说就是 每个节点都需要浏览器 进行</span><code data-lake-id="u956da5ca" id="u956da5ca"><span data-lake-id="u3ca1dd43" id="u3ca1dd43">计算</span></code><span data-lake-id="uc7a72708" id="uc7a72708">、</span><code data-lake-id="u7effc076" id="u7effc076"><span data-lake-id="u5434f8f6" id="u5434f8f6">布局</span></code><span data-lake-id="u226524ea" id="u226524ea">和</span><code data-lake-id="uf37995cc" id="uf37995cc"><span data-lake-id="u20e9b229" id="u20e9b229">绘制</span></code><span data-lake-id="u877f05e7" id="u877f05e7"> 等。 如果总结，那么其实就是 所谓的 </span><strong><span data-lake-id="u479cc1b1" id="u479cc1b1">CPU的瓶颈</span></strong></p><p data-lake-id="u7dff0cf5" id="u7dff0cf5"><br></p><p data-lake-id="u46d3b7d7" id="u46d3b7d7"><span data-lake-id="uf66dcc7a" id="uf66dcc7a">另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就是所谓的 </span><strong><span data-lake-id="u6c1222fb" id="u6c1222fb">IO的瓶颈</span></strong><span data-lake-id="u8bca0a17" id="u8bca0a17"> （这里主要指</span><code data-lake-id="u0cd33845" id="u0cd33845"><span data-lake-id="u13a90320" id="u13a90320">网络IO</span></code><span data-lake-id="u9c90f8fb" id="u9c90f8fb">）</span></p><p data-lake-id="ueeed47d0" id="ueeed47d0"><br></p><h2 data-lake-id="89b6d95a" id="89b6d95a"><span data-lake-id="ubb0411f4" id="ubb0411f4">一些常见的优化思路</span></h2><p data-lake-id="u6854bc90" id="u6854bc90"><br></p><h3 data-lake-id="2b2470c2" id="2b2470c2"><span data-lake-id="ue74709f0" id="ue74709f0">1、分页</span></h3><p data-lake-id="ub7bec919" id="ub7bec919"><br></p><p data-lake-id="ud642b3f4" id="ud642b3f4"><span data-lake-id="uda794322" id="uda794322">最简单且见效的方法，但需要与 </span><code data-lake-id="ucde59ea0" id="ucde59ea0"><span data-lake-id="u89673fd0" id="u89673fd0">用户体验</span></code><span data-lake-id="uf4acb1ef" id="uf4acb1ef"> 做平衡</span></p><p data-lake-id="u2579c27a" id="u2579c27a"><br></p><h3 data-lake-id="c7123451" id="c7123451"><span data-lake-id="u5fc4d6d2" id="u5fc4d6d2">2、虚拟滚动、虚拟列表</span></h3><p data-lake-id="u8e451515" id="u8e451515"><br></p><p data-lake-id="u0fe7a359" id="u0fe7a359"><span data-lake-id="u3a52eddb" id="u3a52eddb">比较常见且大规模应用的思路，具体的一些</span><code data-lake-id="ua27b7724" id="ua27b7724"><span data-lake-id="u1f106f44" id="u1f106f44">要点</span></code><span data-lake-id="u72f56ebc" id="u72f56ebc">：</span></p><p data-lake-id="uc885cff0" id="uc885cff0"><br></p><ul list="uc41ed4e8"><li fid="u41fcc621" data-lake-id="u37bf4f37" id="u37bf4f37"><code data-lake-id="u10bb2290" id="u10bb2290"><span data-lake-id="u8f69ab7f" id="u8f69ab7f">可视区域</span></code><span data-lake-id="uf575c4ae" id="uf575c4ae">： 做</span><code data-lake-id="u3f1b0d36" id="u3f1b0d36"><span data-lake-id="u6cc67fb1" id="u6cc67fb1">绝对定位</span></code><span data-lake-id="ucccdd225" id="ucccdd225">，left、right、top 设置为 0</span></li><li fid="u41fcc621" data-lake-id="ue687535d" id="ue687535d"><code data-lake-id="u884445d1" id="u884445d1"><span data-lake-id="u81f8ec22" id="u81f8ec22">滚动区域</span></code><span data-lake-id="u00c686e0" id="u00c686e0">：用于</span><code data-lake-id="u51b3ddb0" id="u51b3ddb0"><span data-lake-id="uae0988bd" id="uae0988bd">形成滚动条</span></code><span data-lake-id="uaadf1a2c" id="uaadf1a2c">，做绝对定位，</span><code data-lake-id="u25a43068" id="u25a43068"><span data-lake-id="u601ba7a1" id="u601ba7a1">left、right、top</span></code><span data-lake-id="u7ef1481c" id="u7ef1481c"> 设置为 0，</span><code data-lake-id="u91cb1dfe" id="u91cb1dfe"><span data-lake-id="u2f0ade20" id="u2f0ade20">z-index:-1</span></code></li><li fid="u41fcc621" data-lake-id="ua9b68d96" id="ua9b68d96"><code data-lake-id="u0ac5f1ad" id="u0ac5f1ad"><span data-lake-id="ue6e794f4" id="ue6e794f4">真实渲染区域</span></code><span data-lake-id="u8470597e" id="u8470597e">：滚动时使用</span><code data-lake-id="ub3051f2d" id="ub3051f2d"><span data-lake-id="u68d2f82c" id="u68d2f82c">translate3d(x,y,z)</span></code></li></ul><p data-lake-id="ue4aacef2" id="ue4aacef2"><br></p><p data-lake-id="uac3ae1b8" id="uac3ae1b8"><span data-lake-id="ub48b8bdc" id="ub48b8bdc">具体步骤：</span></p><p data-lake-id="ub1904f9b" id="ub1904f9b"><br></p><ol list="u824d3f02"><li fid="u65572215" data-lake-id="u4e4b34e8" id="u4e4b34e8"><span data-lake-id="u3cbd41fc" id="u3cbd41fc">计算当前可见区域起始数据的 </span><code data-lake-id="u3bc1bbea" id="u3bc1bbea"><span data-lake-id="u87a82a00" id="u87a82a00">startIndex</span></code></li><li fid="u65572215" data-lake-id="u445be381" id="u445be381"><span data-lake-id="ub5bd0104" id="ub5bd0104">计算当前可见区域结束数据的 </span><code data-lake-id="u5c01db2d" id="u5c01db2d"><span data-lake-id="u4b0012ca" id="u4b0012ca">endIndex</span></code></li><li fid="u65572215" data-lake-id="ue81a954c" id="ue81a954c"><span data-lake-id="u0eb07e03" id="u0eb07e03">计算当前可见区域的数据，并渲染到页面中</span></li><li fid="u65572215" data-lake-id="u1b6e019a" id="u1b6e019a"><span data-lake-id="u8f7c6dc9" id="u8f7c6dc9">计算 </span><code data-lake-id="u2b8f14aa" id="u2b8f14aa"><span data-lake-id="ucc9a4bcf" id="ucc9a4bcf">startIndex</span></code><span data-lake-id="uae7b2efc" id="uae7b2efc"> 对应的数据在整个列表中的偏移位置 </span><code data-lake-id="u799d37e1" id="u799d37e1"><span data-lake-id="u724227c6" id="u724227c6">startOffset</span></code><span data-lake-id="ub92c90b7" id="ub92c90b7">，并设置到列表上</span></li><li fid="u65572215" data-lake-id="ud15786ad" id="ud15786ad"><span data-lake-id="u8f4856a1" id="u8f4856a1">在滚动的时候，修改</span><code data-lake-id="u6f712ebb" id="u6f712ebb"><span data-lake-id="u77cd8c62" id="u77cd8c62">真实渲染区域</span></code><span data-lake-id="u1ed361e8" id="u1ed361e8">的 </span><code data-lake-id="u3e100234" id="u3e100234"><span data-lake-id="u5074bc72" id="u5074bc72">transform: translate3d(0, y, 0)</span></code></li></ol><p data-lake-id="u4e15e8c2" id="u4e15e8c2"><br></p><p data-lake-id="uca465b75" id="uca465b75"><span data-lake-id="ue40f3239" id="ue40f3239">下面是一段示例代码：</span></p><p data-lake-id="u3461ba96" id="u3461ba96"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22updateVisibleData(scrollTop)%20%7B%5Cn%20%20scrollTop%20%3D%20scrollTop%20%7C%7C%200%3B%5Cn%20%20%2F%2F%20%E5%8F%96%E5%BE%97%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%E5%8F%AF%E8%A7%81%E5%88%97%E8%A1%A8%E9%A1%B9%E6%95%B0%E9%87%8F%5Cn%20%20const%20visibleCount%20%3D%20Math.ceil(this.%24el.clientHeight%20%2F%20this.itemHeight)%3B%20%5Cn%20%20%2F%2F%20%E5%8F%96%E5%BE%97%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%E8%B5%B7%E5%A7%8B%E6%95%B0%E6%8D%AE%E7%B4%A2%E5%BC%95%5Cn%20%20const%20start%20%3D%20Math.floor(scrollTop%20%2F%20this.itemHeight)%3B%20%5Cn%20%20%2F%2F%20%E5%8F%96%E5%BE%97%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%E7%BB%93%E6%9D%9F%E6%95%B0%E6%8D%AE%E7%B4%A2%E5%BC%95%5Cn%20%20const%20end%20%3D%20start%20%2B%20visibleCount%3B%20%5Cn%20%20%2F%2F%20%E8%AE%A1%E7%AE%97%E5%87%BA%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E5%AF%B9%E5%BA%94%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%AE%A9%20Vue.js%20%E6%9B%B4%E6%96%B0%5Cn%20%20this.visibleData%20%3D%20this.data.slice(start%2C%20end)%3B%20%5Cn%20%20%2F%2F%20%E6%8A%8A%E5%8F%AF%E8%A7%81%E5%8C%BA%E5%9F%9F%E7%9A%84%20top%20%E8%AE%BE%E7%BD%AE%E4%B8%BA%E8%B5%B7%E5%A7%8B%E5%85%83%E7%B4%A0%E5%9C%A8%E6%95%B4%E4%B8%AA%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%EF%BC%88%E4%BD%BF%E7%94%A8%20transform%20%E6%98%AF%E4%B8%BA%E4%BA%86%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%80%A7%E8%83%BD%EF%BC%89%5Cn%20%20this.%24refs.content.style.webkitTransform%20%3D%20%60translate3d(0%2C%20%24%7B%20start%20*%20this.itemHeight%20%7Dpx%2C%200)%60%3B%20%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2260842c43%22%7D"></card><p data-lake-id="ub97d1f69" id="ub97d1f69"><br></p><p data-lake-id="u5fe95c4e" id="u5fe95c4e"><code data-lake-id="uc8cf5283" id="uc8cf5283"><span data-lake-id="ude3a0130" id="ude3a0130">动态高度</span></code><span data-lake-id="ua5d23faf" id="ua5d23faf">的场景：需要在渲染时</span><code data-lake-id="ubaaf5526" id="ubaaf5526"><span data-lake-id="ucbb12b26" id="ucbb12b26">动态计算</span></code><span data-lake-id="u161f6e63" id="u161f6e63">每个列表项的高度，并根据</span><code data-lake-id="ue6d2691f" id="ue6d2691f"><span data-lake-id="u6048b605" id="u6048b605">实际高度</span></code><span data-lake-id="u229e463e" id="u229e463e">进行渲染，下面是</span><code data-lake-id="u7a04f013" id="u7a04f013"><span data-lake-id="u1007578c" id="u1007578c">updateVisibleData</span></code><span data-lake-id="u9514f4a3" id="u9514f4a3"> 的一个思路。</span></p><p data-lake-id="uce9efd9b" id="uce9efd9b"><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22updateVisibleData(scrollTop)%20%7B%5Cn%20%20scrollTop%20%3D%20scrollTop%20%7C%7C%200%3B%5Cn%20%20const%20start%20%3D%20this.findNearestItemIndex(scrollTop)%3B%5Cn%20%20const%20end%20%3D%20this.findNearestItemIndex(scrollTop%20%2B%20this.%24el.clientHeight)%3B%5Cn%20%20this.visibleData%20%3D%20this.data.slice(start%2C%20Math.min(end%20%2B%201%2C%20this.data.length))%3B%5Cn%20%20%2F%2F%20%E9%80%9A%E8%BF%87%E5%85%B7%E4%BD%93%E6%96%B9%E6%B3%95%E6%9D%A5%E8%AE%BE%E8%AE%A1%5Cn%20%20this.%24refs.content.style.webkitTransform%20%3D%20%60translate3d(0%2C%20%24%7B%20this.getItemSizeAndOffset(start).offset%20%7Dpx%2C%200)%60%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22id%22%3A%22a51a3bdc%22%7D"></card><p data-lake-id="u8847bdc0" id="u8847bdc0"><br></p><p data-lake-id="ue7b19ca5" id="ue7b19ca5"><span data-lake-id="u353c1224" id="u353c1224">一个细节，</span><code data-lake-id="u6d7a5606" id="u6d7a5606"><span data-lake-id="ud7596f92" id="ud7596f92">ios</span></code><span data-lake-id="u409debe6" id="u409debe6"> 没法实时 触发 </span><code data-lake-id="ua058debe" id="ua058debe"><span data-lake-id="udd530c9a" id="udd530c9a">scroll</span></code><span data-lake-id="u8fa2553b" id="u8fa2553b"> 的问题？</span></p><p data-lake-id="u4a277f73" id="u4a277f73"><br></p><ul list="u6fcdf433"><li fid="ud27ef254" data-lake-id="uedc59753" id="uedc59753"><span data-lake-id="u18ba7141" id="u18ba7141">使用 </span><code data-lake-id="u504d7892" id="u504d7892"><span data-lake-id="u930788a6" id="u930788a6">iscroll</span></code><span data-lake-id="uc5fd23f2" id="uc5fd23f2"> 或者   </span><code data-lake-id="u269cb3e8" id="u269cb3e8"><span data-lake-id="u9e419a28" id="u9e419a28">better-scroll</span></code><span data-lake-id="ud84a937a" id="ud84a937a"> 等成熟的第三方库</span></li><li fid="ud27ef254" data-lake-id="ucb584ca8" id="ucb584ca8"><code data-lake-id="ub237a946" id="ub237a946"><span data-lake-id="ua628b7e9" id="ua628b7e9">ontouchmove</span></code><span data-lake-id="u345e1dcc" id="u345e1dcc"> 来兼容下</span></li><li fid="ud27ef254" data-lake-id="u2a14b80e" id="u2a14b80e"><code data-lake-id="uf6e3c5dc" id="uf6e3c5dc"><span data-lake-id="u98045f67" id="u98045f67">-webkit-overflow-scrolling:touch</span></code><span data-lake-id="ue712baf0" id="ue712baf0"> 设置有</span><code data-lake-id="u4c1b4abd" id="u4c1b4abd"><span data-lake-id="u93e12368" id="u93e12368">回弹效果</span></code><span data-lake-id="u459595b2" id="u459595b2"> </span></li></ul><ul list="u6fcdf433" data-lake-indent="1"><li fid="uc5f5e227" data-lake-id="u23530591" id="u23530591"><code data-lake-id="ub270e004" id="ub270e004"><span data-lake-id="u7eff3ef7" id="u7eff3ef7">auto</span></code><span data-lake-id="ua31ea9cf" id="ua31ea9cf">: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。</span></li><li fid="uc5f5e227" data-lake-id="u9ad11b73" id="u9ad11b73"><code data-lake-id="u590f7036" id="u590f7036"><span data-lake-id="u96537969" id="u96537969">touch</span></code><span data-lake-id="ud33e5be1" id="ud33e5be1"> , 有回弹效果</span></li></ul><p data-lake-id="u9e4be34d" id="u9e4be34d"><br></p><p data-lake-id="u4f5dabd8" id="u4f5dabd8"><span data-lake-id="u099a4133" id="u099a4133">其他的一些细节优化点：</span></p><p data-lake-id="ue2470b8b" id="ue2470b8b"><br></p><ul list="u04c3e5de"><li fid="u22bb5b9d" data-lake-id="ua39f2a9b" id="ua39f2a9b"><span data-lake-id="u3b12474e" id="u3b12474e">使用</span><code data-lake-id="ub4d8ede7" id="ub4d8ede7"><span data-lake-id="ubb7978c4" id="ubb7978c4">骨架片</span></code><span data-lake-id="u58b48fb7" id="u58b48fb7">优化白屏</span></li><li fid="u22bb5b9d" data-lake-id="ubbdc3b2e" id="ubbdc3b2e"><span data-lake-id="ua951434f" id="ua951434f">使用新的API，提高性能 </span></li></ul><ul list="u04c3e5de" data-lake-indent="1"><li fid="uc3399a3d" data-lake-id="u2f32f81b" id="u2f32f81b"><code data-lake-id="ue7cff0cc" id="ue7cff0cc"><span data-lake-id="u63af3051" id="u63af3051">scroll</span></code><span data-lake-id="u2a5c822e" id="u2a5c822e"> 时，使用 </span><code data-lake-id="uf53a8fb6" id="uf53a8fb6"><span data-lake-id="u08e31e66" id="u08e31e66">requestAnimationFrame</span></code><span data-lake-id="ue6dca7a7" id="ue6dca7a7"> 来包装回调</span></li><li fid="uc3399a3d" data-lake-id="ub7a635fb" id="ub7a635fb"><span data-lake-id="u02ada23a" id="u02ada23a">或者做下</span><code data-lake-id="u0f0704a9" id="u0f0704a9"><span data-lake-id="u7375f794" id="u7375f794">节流</span></code></li></ul><ul list="u04c3e5de" start="3"><li fid="u22bb5b9d" data-lake-id="u45ed41e8" id="u45ed41e8"><span data-lake-id="u9c72a1c8" id="u9c72a1c8">使用</span><code data-lake-id="u390e8439" id="u390e8439"><span data-lake-id="ube7c2d3f" id="ube7c2d3f">缓存</span></code><span data-lake-id="uc01cf0ea" id="uc01cf0ea">，需要把</span><code data-lake-id="ue8ce8003" id="ue8ce8003"><span data-lake-id="uc22140e4" id="uc22140e4">尺寸、偏移</span></code><span data-lake-id="u5193faf2" id="u5193faf2">等信息进行一个</span><code data-lake-id="uf360dfbe" id="uf360dfbe"><span data-lake-id="u1943a005" id="u1943a005">缓存</span></code></li><li fid="u22bb5b9d" data-lake-id="u126d9afe" id="u126d9afe"><span data-lake-id="ua9d2a660" id="ua9d2a660">图片</span><code data-lake-id="ub8dbdad6" id="ub8dbdad6"><span data-lake-id="u00efc805" id="u00efc805">懒加载</span></code></li></ul><p data-lake-id="u2e94c5de" id="u2e94c5de"><br></p><h2 data-lake-id="a1922248" id="a1922248"><span data-lake-id="u5e4b5f78" id="u5e4b5f78">3、其他的思路</span></h2><p data-lake-id="u00b584e4" id="u00b584e4"><br></p><ul list="u65a8da0f"><li fid="ua7da14be" data-lake-id="u0009865a" id="u0009865a"><span data-lake-id="u5194b662" id="u5194b662">使用</span><code data-lake-id="u9df95fc3" id="u9df95fc3"><span data-lake-id="u4a991c3b" id="u4a991c3b">缓存</span></code><span data-lake-id="ua3994e6f" id="ua3994e6f"> ，包括数据缓存，也包括重复利用节点等</span></li><li fid="ua7da14be" data-lake-id="u3bef18ef" id="u3bef18ef"><code data-lake-id="u0b264ec5" id="u0b264ec5"><span data-lake-id="u7ce4be7b" id="u7ce4be7b">懒加载</span></code><span data-lake-id="ue86fc279" id="ue86fc279"> 与 </span><code data-lake-id="u7b94ad88" id="u7b94ad88"><span data-lake-id="udb1ce527" id="udb1ce527">预加载</span></code></li><li fid="ua7da14be" data-lake-id="u18390bd3" id="u18390bd3"><span data-lake-id="u6b395f2e" id="u6b395f2e">减少DOM操作 ，精简 DOM 结构</span></li><li fid="ua7da14be" data-lake-id="u17437337" id="u17437337"><span data-lake-id="u4757b248" id="u4757b248">使用</span><code data-lake-id="udd345f2b" id="udd345f2b"><span data-lake-id="u5f5e1cf8" id="u5f5e1cf8">Web Worker</span></code><span data-lake-id="u41546166" id="u41546166">  将页面的</span><code data-lake-id="u47cd700b" id="u47cd700b"><span data-lake-id="u89a21815" id="u89a21815">渲染</span></code><span data-lake-id="u3426dc55" id="u3426dc55">和</span><code data-lake-id="u8bf8cf15" id="u8bf8cf15"><span data-lake-id="u82d7f741" id="u82d7f741">计算逻辑</span></code><span data-lake-id="ue8c1d0bc" id="ue8c1d0bc">分离开来</span></li><li fid="ua7da14be" data-lake-id="u45e52d50" id="u45e52d50"><span data-lake-id="u7f1ef47c" id="u7f1ef47c">服务器端渲染 ， </span><code data-lake-id="u7805134b" id="u7805134b"><span data-lake-id="uc730e57d" id="uc730e57d">SSR</span></code></li><li fid="ua7da14be" data-lake-id="u5f842a1c" id="u5f842a1c"><span data-lake-id="u0be4ffd0" id="u0be4ffd0">CSS布局优化，减少</span><code data-lake-id="ud675f89b" id="ud675f89b"><span data-lake-id="u7f98c50f" id="u7f98c50f">回流</span></code><span data-lake-id="ue879c14d" id="ue879c14d">等</span></li><li fid="ua7da14be" data-lake-id="ud0a5f0fe" id="ud0a5f0fe"><span data-lake-id="ud9a49f68" id="ud9a49f68">CSS3硬件加速</span></li><li fid="ua7da14be" data-lake-id="u890284bd" id="u890284bd"><span data-lake-id="u396a71a6" id="u396a71a6">优化渲染性能，比如</span><code data-lake-id="ud3245bb5" id="ud3245bb5"><span data-lake-id="u022562a0" id="u022562a0">CSS样式优化</span></code><span data-lake-id="ua156c066" id="ua156c066">和 </span><code data-lake-id="ua3545b16" id="ua3545b16"><span data-lake-id="u6ec1e45d" id="u6ec1e45d">JS性能优化</span></code></li><li fid="ua7da14be" data-lake-id="u6fb80be9" id="u6fb80be9"><span data-lake-id="uf33096ea" id="uf33096ea">图片优化 ， </span><code data-lake-id="u512d6061" id="u512d6061"><span data-lake-id="uc8aefa7e" id="uc8aefa7e">懒加载</span></code><span data-lake-id="u747829f0" id="u747829f0">和</span><code data-lake-id="uab5cb75b" id="uab5cb75b"><span data-lake-id="ud012f1ea" id="ud012f1ea">预加载</span></code><span data-lake-id="ued0a3fa4" id="ued0a3fa4"> 及 </span><code data-lake-id="u408ad08e" id="u408ad08e"><span data-lake-id="u4c20b7f7" id="u4c20b7f7">压缩</span></code><span data-lake-id="u37888c0f" id="u37888c0f"> ，</span><code data-lake-id="ue89a2c47" id="ue89a2c47"><span data-lake-id="u6dbe240f" id="u6dbe240f">缩略图</span></code><span data-lake-id="u9a7674ce" id="u9a7674ce"> ， 图片格式比如 </span><code data-lake-id="u9301f9e5" id="u9301f9e5"><span data-lake-id="uf49be664" id="uf49be664">WebP</span></code><span data-lake-id="u2d8e9adb" id="u2d8e9adb"> 更小，</span><code data-lake-id="udacfa176" id="udacfa176"><span data-lake-id="u9548f984" id="u9548f984">jpg</span></code><span data-lake-id="uaa0061c7" id="uaa0061c7"> 更快渲染等</span></li><li fid="ua7da14be" data-lake-id="ube8c967c" id="ube8c967c"><span data-lake-id="u6115b503" id="u6115b503">使用渐进式渲染 ，先渲染关键内容</span></li><li fid="ua7da14be" data-lake-id="u96e93338" id="u96e93338"><span data-lake-id="u59214b63" id="u59214b63">新 API 使用，比如 </span><code data-lake-id="u2a5ddea3" id="u2a5ddea3"><span data-lake-id="uc2d3e576" id="uc2d3e576">requestIdleCallback</span></code><span data-lake-id="u168db5cb" id="u168db5cb"> 空闲时间再执行</span></li><li fid="ua7da14be" data-lake-id="u2318431f" id="u2318431f"><code data-lake-id="u491edf96" id="u491edf96"><span data-lake-id="u81984200" id="u81984200">HTTP</span></code><span data-lake-id="uc65fce78" id="uc65fce78">请求优化等</span></li></ul><p data-lake-id="u2651e689" id="u2651e689"><br></p><blockquote data-lake-id="ud1332ba3" id="ud1332ba3"><p data-lake-id="ue1cd4b42" id="ue1cd4b42"><span data-lake-id="u779b0135" id="u779b0135">[!tip]<br /></span><span data-lake-id="u3bea3fc4" id="u3bea3fc4">JPEG 格式不支持透明度设置</span></p></blockquote><p data-lake-id="u7823e22d" id="u7823e22d"><br></p><h2 data-lake-id="9415a826" id="9415a826"><span data-lake-id="ue0f5b873" id="ue0f5b873">最后</span></h2><p data-lake-id="u098f34d3" id="u098f34d3"><br></p><p data-lake-id="ud5a8c9dc" id="ud5a8c9dc"><span data-lake-id="uf684b827" id="uf684b827">还是需要根据</span><code data-lake-id="u2a7a4c10" id="u2a7a4c10"><span data-lake-id="u07267529" id="u07267529">实际情况</span></code><span data-lake-id="uf9518ff5" id="uf9518ff5"> 选择 </span><code data-lake-id="uc5afb53a" id="uc5afb53a"><span data-lake-id="u7b199d01" id="u7b199d01">ROI</span></code><span data-lake-id="u523b35dd" id="u523b35dd"> 最大的方案，找 主要矛盾。</span></p>',public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-18T04:33:19.000Z",deleted_at:null,created_at:"2023-03-18T04:32:06.000Z",updated_at:"2023-03-19T11:42:11.000Z",published_at:"2023-03-18T04:33:19.000Z",first_published_at:"2023-03-18T04:32:21.335Z",word_count:987,cover:null,description:"#fe  #前端性能长列表渲染优化的一些思路先说导致长列表性能及体现不佳的原因需要 渲染大量的DOM节点 及 频繁的DOM操作 ，展开说就是 每个节点都需要浏览器 进行计算、布局和绘制 等。 如果总结，那么其实就是 所谓的 CPU的瓶颈另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就...",custom_description:null,hits:0,_serializer:"v2.doc_detail"},{id:118312303,slug:"ce18txwx4pxsa7hl",title:"0003.FE.如何检测一个页面是否在前台运行或如何检测页面的可见性",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:'<a name="T35wL"></a>\n# 如何检测一个页面是否在前台运行或如何检测页面的可见性\n<a name="3288ab86"></a>\n## 首先说说为什么需要检测\n\n页面被`最小化`或`隐藏`或者在`后台运行`，那么`轮询服务器`或`更新动画`等动作就不必要了。\n\n<a name="9c6d6129"></a>\n## 常见的几种方法\n\n1、`document.hidden` 只读属性\n\n2、`document.visibilityState` 检测页面可见性，返回只读属性\n\n3、`visibilitychange` 事件\n\n4、`window.addEventListener()`方法监听 `blur` 和 `focus` 事件来检测页面是否在前台或后台。当页面失去焦点时触发 `blur` 事件，而当页面重新获得焦点时触发 `focus` 事件。亲测可以\n\n5、`document.hasFocus()` 检测页面是否在前台，即是否获得焦点\n\n6、一些页面生命周期的方法也可以\n\n- `pagehide`\n- `beforeunload`\n- `unload`\n- `pageshow`\n\n<a name="9415a826"></a>\n## 最后\n\n注意兼容性，另外整体可以分为两类\n\n- `document`上的`属性值`或者`具体方法`\n- 监听特定事件\n',body_draft:'<a name="T35wL"></a>\n# 如何检测一个页面是否在前台运行或如何检测页面的可见性\n<a name="3288ab86"></a>\n## 首先说说为什么需要检测\n\n页面被`最小化`或`隐藏`或者在`后台运行`，那么`轮询服务器`或`更新动画`等动作就不必要了。\n\n<a name="9c6d6129"></a>\n## 常见的几种方法\n\n1、`document.hidden` 只读属性\n\n2、`document.visibilityState` 检测页面可见性，返回只读属性\n\n3、`visibilitychange` 事件\n\n4、`window.addEventListener()`方法监听 `blur` 和 `focus` 事件来检测页面是否在前台或后台。当页面失去焦点时触发 `blur` 事件，而当页面重新获得焦点时触发 `focus` 事件。亲测可以\n\n5、`document.hasFocus()` 检测页面是否在前台，即是否获得焦点\n\n6、一些页面生命周期的方法也可以\n\n- `pagehide`\n- `beforeunload`\n- `unload`\n- `pageshow`\n\n<a name="9415a826"></a>\n## 最后\n\n注意兼容性，另外整体可以分为两类\n\n- `document`上的`属性值`或者`具体方法`\n- 监听特定事件\n',body_html:'<!doctype html><div class="lake-content" typography="classic"><h1 id="T35wL"><span class="ne-text">如何检测一个页面是否在前台运行或如何检测页面的可见性</span></h1><h2 id="3288ab86"><span class="ne-text">首先说说为什么需要检测</span></h2><p id="u738c31df" class="ne-p"><br></p><p id="u17338510" class="ne-p"><span class="ne-text">页面被</span><code class="ne-code"><span class="ne-text">最小化</span></code><span class="ne-text">或</span><code class="ne-code"><span class="ne-text">隐藏</span></code><span class="ne-text">或者在</span><code class="ne-code"><span class="ne-text">后台运行</span></code><span class="ne-text">，那么</span><code class="ne-code"><span class="ne-text">轮询服务器</span></code><span class="ne-text">或</span><code class="ne-code"><span class="ne-text">更新动画</span></code><span class="ne-text">等动作就不必要了。</span></p><p id="u417c8e28" class="ne-p"><br></p><h2 id="9c6d6129"><span class="ne-text">常见的几种方法</span></h2><p id="u1f279e96" class="ne-p"><br></p><p id="u67395a2f" class="ne-p"><span class="ne-text">1、</span><code class="ne-code"><span class="ne-text">document.hidden</span></code><span class="ne-text"> 只读属性</span></p><p id="ueec2bd8a" class="ne-p"><br></p><p id="ua1686699" class="ne-p"><span class="ne-text">2、</span><code class="ne-code"><span class="ne-text">document.visibilityState</span></code><span class="ne-text"> 检测页面可见性，返回只读属性</span></p><p id="ua0fecbb8" class="ne-p"><br></p><p id="ub6a7e0ad" class="ne-p"><span class="ne-text">3、</span><code class="ne-code"><span class="ne-text">visibilitychange</span></code><span class="ne-text"> 事件</span></p><p id="u3ac1ee55" class="ne-p"><br></p><p id="u5f0d2537" class="ne-p"><span class="ne-text">4、</span><code class="ne-code"><span class="ne-text">window.addEventListener()</span></code><span class="ne-text">方法监听 </span><code class="ne-code"><span class="ne-text">blur</span></code><span class="ne-text"> 和 </span><code class="ne-code"><span class="ne-text">focus</span></code><span class="ne-text"> 事件来检测页面是否在前台或后台。当页面失去焦点时触发 </span><code class="ne-code"><span class="ne-text">blur</span></code><span class="ne-text"> 事件，而当页面重新获得焦点时触发 </span><code class="ne-code"><span class="ne-text">focus</span></code><span class="ne-text"> 事件。亲测可以</span></p><p id="u2b80c351" class="ne-p"><br></p><p id="u94982a34" class="ne-p"><span class="ne-text">5、</span><code class="ne-code"><span class="ne-text">document.hasFocus()</span></code><span class="ne-text"> 检测页面是否在前台，即是否获得焦点</span></p><p id="ubf83a3e0" class="ne-p"><br></p><p id="u2604a78e" class="ne-p"><span class="ne-text">6、一些页面生命周期的方法也可以</span></p><p id="u1671caa6" class="ne-p"><br></p><ul class="ne-ul"><li id="u381978d0"><code class="ne-code"><span class="ne-text">pagehide</span></code></li><li id="udbc8f96e"><code class="ne-code"><span class="ne-text">beforeunload</span></code></li><li id="u8ab8bfb8"><code class="ne-code"><span class="ne-text">unload</span></code></li><li id="ua1142fa2"><code class="ne-code"><span class="ne-text">pageshow</span></code></li></ul><p id="u81bd8147" class="ne-p"><br></p><h2 id="9415a826"><span class="ne-text">最后</span></h2><p id="uf03d2f34" class="ne-p"><br></p><p id="uba3b8278" class="ne-p"><span class="ne-text">注意兼容性，另外整体可以分为两类</span></p><p id="ub730e47e" class="ne-p"><br></p><ul class="ne-ul"><li id="ub208ffb6"><code class="ne-code"><span class="ne-text">document</span></code><span class="ne-text">上的</span><code class="ne-code"><span class="ne-text">属性值</span></code><span class="ne-text">或者</span><code class="ne-code"><span class="ne-text">具体方法</span></code></li><li id="u298acf2f"><span class="ne-text">监听特定事件</span></li></ul></div>',body_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="T35wL" id="T35wL"><span data-lake-id="u0b37a553" id="u0b37a553">如何检测一个页面是否在前台运行或如何检测页面的可见性</span></h1><h2 data-lake-id="3288ab86" id="3288ab86"><span data-lake-id="u44ca89cc" id="u44ca89cc">首先说说为什么需要检测</span></h2><p data-lake-id="u738c31df" id="u738c31df"><br></p><p data-lake-id="u17338510" id="u17338510"><span data-lake-id="u35860ecb" id="u35860ecb">页面被</span><code data-lake-id="u87a01178" id="u87a01178"><span data-lake-id="ucf9a593e" id="ucf9a593e">最小化</span></code><span data-lake-id="u884b904e" id="u884b904e">或</span><code data-lake-id="u1041cb0d" id="u1041cb0d"><span data-lake-id="uaffc7c26" id="uaffc7c26">隐藏</span></code><span data-lake-id="uccaa1dc0" id="uccaa1dc0">或者在</span><code data-lake-id="u5106caaa" id="u5106caaa"><span data-lake-id="ub2cbcdaf" id="ub2cbcdaf">后台运行</span></code><span data-lake-id="ud0de6e20" id="ud0de6e20">，那么</span><code data-lake-id="u7d78de43" id="u7d78de43"><span data-lake-id="ud8e6ffa7" id="ud8e6ffa7">轮询服务器</span></code><span data-lake-id="u889775cc" id="u889775cc">或</span><code data-lake-id="u941fdacd" id="u941fdacd"><span data-lake-id="u69b9c4a6" id="u69b9c4a6">更新动画</span></code><span data-lake-id="u4e448354" id="u4e448354">等动作就不必要了。</span></p><p data-lake-id="u417c8e28" id="u417c8e28"><br></p><h2 data-lake-id="9c6d6129" id="9c6d6129"><span data-lake-id="ud126350f" id="ud126350f">常见的几种方法</span></h2><p data-lake-id="u1f279e96" id="u1f279e96"><br></p><p data-lake-id="u67395a2f" id="u67395a2f"><span data-lake-id="u4ac01f42" id="u4ac01f42">1、</span><code data-lake-id="u828e44e2" id="u828e44e2"><span data-lake-id="ucb5a73ab" id="ucb5a73ab">document.hidden</span></code><span data-lake-id="u118c5ad0" id="u118c5ad0"> 只读属性</span></p><p data-lake-id="ueec2bd8a" id="ueec2bd8a"><br></p><p data-lake-id="ua1686699" id="ua1686699"><span data-lake-id="u5f733f49" id="u5f733f49">2、</span><code data-lake-id="u38001936" id="u38001936"><span data-lake-id="u07873bd1" id="u07873bd1">document.visibilityState</span></code><span data-lake-id="u91773f20" id="u91773f20"> 检测页面可见性，返回只读属性</span></p><p data-lake-id="ua0fecbb8" id="ua0fecbb8"><br></p><p data-lake-id="ub6a7e0ad" id="ub6a7e0ad"><span data-lake-id="u9e69be54" id="u9e69be54">3、</span><code data-lake-id="ua7fa8871" id="ua7fa8871"><span data-lake-id="u30f5e1b8" id="u30f5e1b8">visibilitychange</span></code><span data-lake-id="u6cbc0a63" id="u6cbc0a63"> 事件</span></p><p data-lake-id="u3ac1ee55" id="u3ac1ee55"><br></p><p data-lake-id="u5f0d2537" id="u5f0d2537"><span data-lake-id="uc653d239" id="uc653d239">4、</span><code data-lake-id="uf2c16d4e" id="uf2c16d4e"><span data-lake-id="ua702f52c" id="ua702f52c">window.addEventListener()</span></code><span data-lake-id="u22ac654d" id="u22ac654d">方法监听 </span><code data-lake-id="u2442cc5c" id="u2442cc5c"><span data-lake-id="u7b25b9f4" id="u7b25b9f4">blur</span></code><span data-lake-id="ub458fd40" id="ub458fd40"> 和 </span><code data-lake-id="ua726aa96" id="ua726aa96"><span data-lake-id="u48246ebc" id="u48246ebc">focus</span></code><span data-lake-id="ue514b9e7" id="ue514b9e7"> 事件来检测页面是否在前台或后台。当页面失去焦点时触发 </span><code data-lake-id="u9c16fc26" id="u9c16fc26"><span data-lake-id="u08432846" id="u08432846">blur</span></code><span data-lake-id="u8f3ed8e5" id="u8f3ed8e5"> 事件，而当页面重新获得焦点时触发 </span><code data-lake-id="u755b1f2e" id="u755b1f2e"><span data-lake-id="u87ac0e74" id="u87ac0e74">focus</span></code><span data-lake-id="ua7a92dc6" id="ua7a92dc6"> 事件。亲测可以</span></p><p data-lake-id="u2b80c351" id="u2b80c351"><br></p><p data-lake-id="u94982a34" id="u94982a34"><span data-lake-id="u081b1e83" id="u081b1e83">5、</span><code data-lake-id="u8c1ba89a" id="u8c1ba89a"><span data-lake-id="udd347cec" id="udd347cec">document.hasFocus()</span></code><span data-lake-id="u19ad09e9" id="u19ad09e9"> 检测页面是否在前台，即是否获得焦点</span></p><p data-lake-id="ubf83a3e0" id="ubf83a3e0"><br></p><p data-lake-id="u2604a78e" id="u2604a78e"><span data-lake-id="u07c2dccf" id="u07c2dccf">6、一些页面生命周期的方法也可以</span></p><p data-lake-id="u1671caa6" id="u1671caa6"><br></p><ul list="ua38668b3"><li fid="u9312e99d" data-lake-id="u381978d0" id="u381978d0"><code data-lake-id="uf72061a1" id="uf72061a1"><span data-lake-id="u3409d4f3" id="u3409d4f3">pagehide</span></code></li><li fid="u9312e99d" data-lake-id="udbc8f96e" id="udbc8f96e"><code data-lake-id="u5b6e3d1f" id="u5b6e3d1f"><span data-lake-id="u64fbfbfa" id="u64fbfbfa">beforeunload</span></code></li><li fid="u9312e99d" data-lake-id="u8ab8bfb8" id="u8ab8bfb8"><code data-lake-id="uca30b938" id="uca30b938"><span data-lake-id="u78c0b5b4" id="u78c0b5b4">unload</span></code></li><li fid="u9312e99d" data-lake-id="ua1142fa2" id="ua1142fa2"><code data-lake-id="u7974a20d" id="u7974a20d"><span data-lake-id="ub89034e6" id="ub89034e6">pageshow</span></code></li></ul><p data-lake-id="u81bd8147" id="u81bd8147"><br></p><h2 data-lake-id="9415a826" id="9415a826"><span data-lake-id="u58a06db3" id="u58a06db3">最后</span></h2><p data-lake-id="uf03d2f34" id="uf03d2f34"><br></p><p data-lake-id="uba3b8278" id="uba3b8278"><span data-lake-id="ue3a175ab" id="ue3a175ab">注意兼容性，另外整体可以分为两类</span></p><p data-lake-id="ub730e47e" id="ub730e47e"><br></p><ul list="uebf26330"><li fid="ufec37891" data-lake-id="ub208ffb6" id="ub208ffb6"><code data-lake-id="ud31e68ce" id="ud31e68ce"><span data-lake-id="u47e1ac04" id="u47e1ac04">document</span></code><span data-lake-id="u2f0cf0bb" id="u2f0cf0bb">上的</span><code data-lake-id="u83113760" id="u83113760"><span data-lake-id="u888e62dd" id="u888e62dd">属性值</span></code><span data-lake-id="ua2370ccd" id="ua2370ccd">或者</span><code data-lake-id="u74a3fa1b" id="u74a3fa1b"><span data-lake-id="u4a771b56" id="u4a771b56">具体方法</span></code></li><li fid="ufec37891" data-lake-id="u298acf2f" id="u298acf2f"><span data-lake-id="ubf9e18a2" id="ubf9e18a2">监听特定事件</span></li></ul>',body_draft_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="T35wL" id="T35wL"><span data-lake-id="u0b37a553" id="u0b37a553">如何检测一个页面是否在前台运行或如何检测页面的可见性</span></h1><h2 data-lake-id="3288ab86" id="3288ab86"><span data-lake-id="u44ca89cc" id="u44ca89cc">首先说说为什么需要检测</span></h2><p data-lake-id="u738c31df" id="u738c31df"><br></p><p data-lake-id="u17338510" id="u17338510"><span data-lake-id="u35860ecb" id="u35860ecb">页面被</span><code data-lake-id="u87a01178" id="u87a01178"><span data-lake-id="ucf9a593e" id="ucf9a593e">最小化</span></code><span data-lake-id="u884b904e" id="u884b904e">或</span><code data-lake-id="u1041cb0d" id="u1041cb0d"><span data-lake-id="uaffc7c26" id="uaffc7c26">隐藏</span></code><span data-lake-id="uccaa1dc0" id="uccaa1dc0">或者在</span><code data-lake-id="u5106caaa" id="u5106caaa"><span data-lake-id="ub2cbcdaf" id="ub2cbcdaf">后台运行</span></code><span data-lake-id="ud0de6e20" id="ud0de6e20">，那么</span><code data-lake-id="u7d78de43" id="u7d78de43"><span data-lake-id="ud8e6ffa7" id="ud8e6ffa7">轮询服务器</span></code><span data-lake-id="u889775cc" id="u889775cc">或</span><code data-lake-id="u941fdacd" id="u941fdacd"><span data-lake-id="u69b9c4a6" id="u69b9c4a6">更新动画</span></code><span data-lake-id="u4e448354" id="u4e448354">等动作就不必要了。</span></p><p data-lake-id="u417c8e28" id="u417c8e28"><br></p><h2 data-lake-id="9c6d6129" id="9c6d6129"><span data-lake-id="ud126350f" id="ud126350f">常见的几种方法</span></h2><p data-lake-id="u1f279e96" id="u1f279e96"><br></p><p data-lake-id="u67395a2f" id="u67395a2f"><span data-lake-id="u4ac01f42" id="u4ac01f42">1、</span><code data-lake-id="u828e44e2" id="u828e44e2"><span data-lake-id="ucb5a73ab" id="ucb5a73ab">document.hidden</span></code><span data-lake-id="u118c5ad0" id="u118c5ad0"> 只读属性</span></p><p data-lake-id="ueec2bd8a" id="ueec2bd8a"><br></p><p data-lake-id="ua1686699" id="ua1686699"><span data-lake-id="u5f733f49" id="u5f733f49">2、</span><code data-lake-id="u38001936" id="u38001936"><span data-lake-id="u07873bd1" id="u07873bd1">document.visibilityState</span></code><span data-lake-id="u91773f20" id="u91773f20"> 检测页面可见性，返回只读属性</span></p><p data-lake-id="ua0fecbb8" id="ua0fecbb8"><br></p><p data-lake-id="ub6a7e0ad" id="ub6a7e0ad"><span data-lake-id="u9e69be54" id="u9e69be54">3、</span><code data-lake-id="ua7fa8871" id="ua7fa8871"><span data-lake-id="u30f5e1b8" id="u30f5e1b8">visibilitychange</span></code><span data-lake-id="u6cbc0a63" id="u6cbc0a63"> 事件</span></p><p data-lake-id="u3ac1ee55" id="u3ac1ee55"><br></p><p data-lake-id="u5f0d2537" id="u5f0d2537"><span data-lake-id="uc653d239" id="uc653d239">4、</span><code data-lake-id="uf2c16d4e" id="uf2c16d4e"><span data-lake-id="ua702f52c" id="ua702f52c">window.addEventListener()</span></code><span data-lake-id="u22ac654d" id="u22ac654d">方法监听 </span><code data-lake-id="u2442cc5c" id="u2442cc5c"><span data-lake-id="u7b25b9f4" id="u7b25b9f4">blur</span></code><span data-lake-id="ub458fd40" id="ub458fd40"> 和 </span><code data-lake-id="ua726aa96" id="ua726aa96"><span data-lake-id="u48246ebc" id="u48246ebc">focus</span></code><span data-lake-id="ue514b9e7" id="ue514b9e7"> 事件来检测页面是否在前台或后台。当页面失去焦点时触发 </span><code data-lake-id="u9c16fc26" id="u9c16fc26"><span data-lake-id="u08432846" id="u08432846">blur</span></code><span data-lake-id="u8f3ed8e5" id="u8f3ed8e5"> 事件，而当页面重新获得焦点时触发 </span><code data-lake-id="u755b1f2e" id="u755b1f2e"><span data-lake-id="u87ac0e74" id="u87ac0e74">focus</span></code><span data-lake-id="ua7a92dc6" id="ua7a92dc6"> 事件。亲测可以</span></p><p data-lake-id="u2b80c351" id="u2b80c351"><br></p><p data-lake-id="u94982a34" id="u94982a34"><span data-lake-id="u081b1e83" id="u081b1e83">5、</span><code data-lake-id="u8c1ba89a" id="u8c1ba89a"><span data-lake-id="udd347cec" id="udd347cec">document.hasFocus()</span></code><span data-lake-id="u19ad09e9" id="u19ad09e9"> 检测页面是否在前台，即是否获得焦点</span></p><p data-lake-id="ubf83a3e0" id="ubf83a3e0"><br></p><p data-lake-id="u2604a78e" id="u2604a78e"><span data-lake-id="u07c2dccf" id="u07c2dccf">6、一些页面生命周期的方法也可以</span></p><p data-lake-id="u1671caa6" id="u1671caa6"><br></p><ul list="ua38668b3"><li fid="u9312e99d" data-lake-id="u381978d0" id="u381978d0"><code data-lake-id="uf72061a1" id="uf72061a1"><span data-lake-id="u3409d4f3" id="u3409d4f3">pagehide</span></code></li><li fid="u9312e99d" data-lake-id="udbc8f96e" id="udbc8f96e"><code data-lake-id="u5b6e3d1f" id="u5b6e3d1f"><span data-lake-id="u64fbfbfa" id="u64fbfbfa">beforeunload</span></code></li><li fid="u9312e99d" data-lake-id="u8ab8bfb8" id="u8ab8bfb8"><code data-lake-id="uca30b938" id="uca30b938"><span data-lake-id="u78c0b5b4" id="u78c0b5b4">unload</span></code></li><li fid="u9312e99d" data-lake-id="ua1142fa2" id="ua1142fa2"><code data-lake-id="u7974a20d" id="u7974a20d"><span data-lake-id="ub89034e6" id="ub89034e6">pageshow</span></code></li></ul><p data-lake-id="u81bd8147" id="u81bd8147"><br></p><h2 data-lake-id="9415a826" id="9415a826"><span data-lake-id="u58a06db3" id="u58a06db3">最后</span></h2><p data-lake-id="uf03d2f34" id="uf03d2f34"><br></p><p data-lake-id="uba3b8278" id="uba3b8278"><span data-lake-id="ue3a175ab" id="ue3a175ab">注意兼容性，另外整体可以分为两类</span></p><p data-lake-id="ub730e47e" id="ub730e47e"><br></p><ul list="uebf26330"><li fid="ufec37891" data-lake-id="ub208ffb6" id="ub208ffb6"><code data-lake-id="ud31e68ce" id="ud31e68ce"><span data-lake-id="u47e1ac04" id="u47e1ac04">document</span></code><span data-lake-id="u2f0cf0bb" id="u2f0cf0bb">上的</span><code data-lake-id="u83113760" id="u83113760"><span data-lake-id="u888e62dd" id="u888e62dd">属性值</span></code><span data-lake-id="ua2370ccd" id="ua2370ccd">或者</span><code data-lake-id="u74a3fa1b" id="u74a3fa1b"><span data-lake-id="u4a771b56" id="u4a771b56">具体方法</span></code></li><li fid="ufec37891" data-lake-id="u298acf2f" id="u298acf2f"><span data-lake-id="ubf9e18a2" id="ubf9e18a2">监听特定事件</span></li></ul>',public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-17T10:16:30.000Z",deleted_at:null,created_at:"2023-03-17T00:36:00.000Z",updated_at:"2023-03-19T11:42:01.000Z",published_at:"2023-03-17T10:16:30.000Z",first_published_at:"2023-03-17T00:37:00.848Z",word_count:248,cover:null,description:"如何检测一个页面是否在前台运行或如何检测页面的可见性首先说说为什么需要检测页面被最小化或隐藏或者在后台运行，那么轮询服务器或更新动画等动作就不必要了。常见的几种方法1、document.hidden 只读属性2、document.visibilityState 检测页面可见性，返回只读属性3、...",custom_description:null,hits:0,_serializer:"v2.doc_detail"},{id:117600295,slug:"fpb5t4o5q5rnlg4r",title:"0002.FE.前端框架设计里的”权衡“与选择",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:`<a name="Cx11N"></a>
# 前端框架设计里的 权衡 与 选择
<a name="vlxgw"></a>
## 1、命令式框架与声明式框架

- \`Jquery\` 就是典型的 **命令式框架**，关注\`过程\`
- Vue 暴露给用户使用的是 \`声明式\` ，但底层内部实现肯定也是 \`命令式\` ，如下示例：面向用户的是声明式的

\`\`\`vue
<template>
  <div @click="hello()"></div>
</template>
\`\`\`

但问题是，**声明式的代码性能 不会高于 命令式代码的性能 ，所以这是一个选择 或者权衡**

<a name="RpjfL"></a>
## 2、性能 与 维护性 的平衡
![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589228768-04c11b29-55f9-49a2-a750-9911ccf56ee1.png#averageHue=%23cdc6e7&clientId=ua89f5714-a4bc-4&from=paste&height=556&id=ub2d8d30d&name=image.png&originHeight=1390&originWidth=2686&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=291718&status=done&style=none&taskId=uad224de1-a579-40c5-8dda-c08213eab7c&title=&width=1074.4)

<a name="vXCST"></a>
## 3、运行时 与 编译时 
<a name="LRnCf"></a>
### 纯运行时，即直接\`Render\`即可
![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589398926-1b97cf7e-feca-48e0-b1a4-c99f1b16c31d.png#averageHue=%231c1b1a&clientId=ua89f5714-a4bc-4&from=paste&height=388&id=ufb6a40cc&name=image.png&originHeight=1102&originWidth=1616&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=283246&status=done&style=none&taskId=u106b8e0b-9c6b-42dd-9885-633e7d1f0af&title=&width=568.4000244140625)


<a name="p6DpH"></a>
### 运行时 + 编译时 ，如下图，常用的Vue/Angular/React都属于这类框架
<a name="Z3uNu"></a>
### ![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589488319-a2e29e7a-eca0-45e8-aeda-acbcf7f65fc7.png#averageHue=%23292826&clientId=ua89f5714-a4bc-4&from=paste&height=219&id=ub6362b65&name=image.png&originHeight=548&originWidth=1028&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=122923&status=done&style=none&taskId=u3d680c3c-1e48-4409-9677-919e7af4961&title=&width=411.2)

<a name="nYUZb"></a>
### 纯编译时框架，代表\`Svelte\`
![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589662546-775a4898-2509-4270-b499-ef24417b26d9.png#averageHue=%23575453&clientId=ua89f5714-a4bc-4&from=paste&height=373&id=uc02af96e&name=image.png&originHeight=932&originWidth=1598&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=311966&status=done&style=none&taskId=u4137e7b0-70cc-44ab-81b7-fb5e32da653&title=&width=639.2)

<a name="uxe4m"></a>
## 4、原生JS操作DOM、InnerHTML 与 虚拟DOM 快慢对比
可从以下三个方面来度量

- 理解成本上，**原生JS操作DOM >   InnerHTML >  虚拟DOM**
- 维护性上，**原生JS操作DOM 、  InnerHTML  <  虚拟DOM**
- 性能上，取决于\`页面大小\`，\`页面变更大小，\`是\`新建页面\` 还是\` 更新页\`面 甚至是\`更新策略\`等，都有关系，不同场景下有不同结论。

<a name="bCYeV"></a>
## 5、最后
无论是\`命令式\`还\`是声明式\`，或者框架需要设计成\`运行时\`、\`编译时\`或\`运行时+编译时\`，都需要结合 \`性能\`、\`理解成本\`、\`维护性\`上做权衡选择。
<a name="J0gU5"></a>
## 参考

- 《Vue.js设计与实现》
`,body_draft:`<a name="Cx11N"></a>
# 前端框架设计里的 权衡 与 选择
<a name="vlxgw"></a>
## 1、命令式框架与声明式框架

- \`Jquery\` 就是典型的 **命令式框架**，关注\`过程\`
- Vue 暴露给用户使用的是 \`声明式\` ，但底层内部实现肯定也是 \`命令式\` ，如下示例：面向用户的是声明式的

\`\`\`vue
<template>
  <div @click="hello()"></div>
</template>
\`\`\`

但问题是，**声明式的代码性能 不会高于 命令式代码的性能 ，所以这是一个选择 或者权衡**

<a name="RpjfL"></a>
## 2、性能 与 维护性 的平衡
![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589228768-04c11b29-55f9-49a2-a750-9911ccf56ee1.png#averageHue=%23cdc6e7&clientId=ua89f5714-a4bc-4&from=paste&height=556&id=ub2d8d30d&name=image.png&originHeight=1390&originWidth=2686&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=291718&status=done&style=none&taskId=uad224de1-a579-40c5-8dda-c08213eab7c&title=&width=1074.4)

<a name="vXCST"></a>
## 3、运行时 与 编译时 
<a name="LRnCf"></a>
### 纯运行时，即直接\`Render\`即可
![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589398926-1b97cf7e-feca-48e0-b1a4-c99f1b16c31d.png#averageHue=%231c1b1a&clientId=ua89f5714-a4bc-4&from=paste&height=388&id=ufb6a40cc&name=image.png&originHeight=1102&originWidth=1616&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=283246&status=done&style=none&taskId=u106b8e0b-9c6b-42dd-9885-633e7d1f0af&title=&width=568.4000244140625)


<a name="p6DpH"></a>
### 运行时 + 编译时 ，如下图，常用的Vue/Angular/React都属于这类框架
<a name="Z3uNu"></a>
### ![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589488319-a2e29e7a-eca0-45e8-aeda-acbcf7f65fc7.png#averageHue=%23292826&clientId=ua89f5714-a4bc-4&from=paste&height=219&id=ub6362b65&name=image.png&originHeight=548&originWidth=1028&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=122923&status=done&style=none&taskId=u3d680c3c-1e48-4409-9677-919e7af4961&title=&width=411.2)

<a name="nYUZb"></a>
### 纯编译时框架，代表\`Svelte\`
![image.png](https://cdn.nlark.com/yuque/0/2023/png/687303/1678589662546-775a4898-2509-4270-b499-ef24417b26d9.png#averageHue=%23575453&clientId=ua89f5714-a4bc-4&from=paste&height=373&id=uc02af96e&name=image.png&originHeight=932&originWidth=1598&originalType=binary&ratio=2.5&rotation=0&showTitle=false&size=311966&status=done&style=none&taskId=u4137e7b0-70cc-44ab-81b7-fb5e32da653&title=&width=639.2)

<a name="uxe4m"></a>
## 4、原生JS操作DOM、InnerHTML 与 虚拟DOM 快慢对比
可从以下三个方面来度量

- 理解成本上，**原生JS操作DOM >   InnerHTML >  虚拟DOM**
- 维护性上，**原生JS操作DOM 、  InnerHTML  <  虚拟DOM**
- 性能上，取决于\`页面大小\`，\`页面变更大小，\`是\`新建页面\` 还是\` 更新页\`面 甚至是\`更新策略\`等，都有关系，不同场景下有不同结论。

<a name="bCYeV"></a>
## 5、最后
无论是\`命令式\`还\`是声明式\`，或者框架需要设计成\`运行时\`、\`编译时\`或\`运行时+编译时\`，都需要结合 \`性能\`、\`理解成本\`、\`维护性\`上做权衡选择。
<a name="J0gU5"></a>
## 参考

- 《Vue.js设计与实现》
`,body_html:`<!doctype html><div class="lake-content" typography="classic"><h1 id="Cx11N"><span class="ne-text">前端框架设计里的 权衡 与 选择</span></h1><h2 id="vlxgw"><span class="ne-text">1、命令式框架与声明式框架</span></h2><ul class="ne-ul"><li id="u7de073ec"><code class="ne-code"><span class="ne-text">Jquery</span></code><span class="ne-text"> 就是典型的 </span><strong><span class="ne-text">命令式框架</span></strong><span class="ne-text">，关注</span><code class="ne-code"><span class="ne-text">过程</span></code></li><li id="u72574176"><span class="ne-text">Vue 暴露给用户使用的是 </span><code class="ne-code"><span class="ne-text">声明式</span></code><span class="ne-text"> ，但底层内部实现肯定也是 </span><code class="ne-code"><span class="ne-text">命令式</span></code><span class="ne-text"> ，如下示例：面向用户的是声明式的</span></li></ul><p id="ud8169c33" class="ne-p"><span class="ne-text"></span></p><pre data-language="vue" id="cHUDo" class="ne-codeblock language-vue">&lt;template&gt;
  &lt;div @click=&quot;hello()&quot;&gt;&lt;/div&gt;
&lt;/template&gt;</pre><p id="uce9162c4" class="ne-p"><br></p><p id="ub1092e7b" class="ne-p"><span class="ne-text">但问题是，</span><strong><span class="ne-text" style="text-decoration: underline">声明式的代码性能 不会高于 命令式代码的性能 ，所以这是一个选择 或者权衡</span></strong></p><p id="ue518ca07" class="ne-p"><strong><span class="ne-text" style="text-decoration: underline"></span></strong></p><h2 id="RpjfL"><span class="ne-text">2、性能 与 维护性 的平衡</span></h2><p id="u7686d6d3" class="ne-p"><img src="https://cdn.nlark.com/yuque/0/2023/png/687303/1678589228768-04c11b29-55f9-49a2-a750-9911ccf56ee1.png" width="1074.4" id="ub2d8d30d" class="ne-image"></p><p id="u546e4ab2" class="ne-p"><br></p><h2 id="vXCST"><span class="ne-text">3、运行时 与 编译时 </span></h2><h3 id="LRnCf"><span class="ne-text">纯运行时，即直接</span><code class="ne-code"><span class="ne-text">Render</span></code><span class="ne-text">即可</span></h3><p id="uac48b5d2" class="ne-p"><img src="https://cdn.nlark.com/yuque/0/2023/png/687303/1678589398926-1b97cf7e-feca-48e0-b1a4-c99f1b16c31d.png" width="568.4000244140625" id="ufb6a40cc" class="ne-image"></p><p id="ubbe7f804" class="ne-p"><br></p><p id="u1a069019" class="ne-p"><br></p><h3 id="p6DpH"><span class="ne-text">运行时 + 编译时 ，如下图，常用的Vue/Angular/React都属于这类框架</span></h3><h3 id="Z3uNu"><img src="https://cdn.nlark.com/yuque/0/2023/png/687303/1678589488319-a2e29e7a-eca0-45e8-aeda-acbcf7f65fc7.png" width="411.2" id="ub6362b65" class="ne-image"></h3><p id="u2e3f2880" class="ne-p"><br></p><h3 id="nYUZb"><span class="ne-text">纯编译时框架，代表</span><code class="ne-code"><span class="ne-text">Svelte</span></code></h3><p id="u226bf797" class="ne-p"><img src="https://cdn.nlark.com/yuque/0/2023/png/687303/1678589662546-775a4898-2509-4270-b499-ef24417b26d9.png" width="639.2" id="uc02af96e" class="ne-image"></p><p id="u8fa0ff9a" class="ne-p"><br></p><h2 id="uxe4m"><span class="ne-text">4、原生JS操作DOM、InnerHTML 与 虚拟DOM 快慢对比</span></h2><p id="uf8b229a0" class="ne-p"><span class="ne-text">可从以下三个方面来度量</span></p><ul class="ne-ul"><li id="u2bf21b9e"><span class="ne-text">理解成本上，</span><strong><span class="ne-text" style="text-decoration: underline">原生JS操作DOM &gt;   InnerHTML &gt;  虚拟DOM</span></strong></li><li id="uad4d6f7f"><span class="ne-text">维护性上，</span><strong><span class="ne-text" style="text-decoration: underline">原生JS操作DOM 、  InnerHTML  &lt;  虚拟DOM</span></strong></li><li id="ue305b861"><span class="ne-text">性能上，取决于</span><code class="ne-code"><span class="ne-text">页面大小</span></code><span class="ne-text">，</span><code class="ne-code"><span class="ne-text">页面变更大小，</span></code><span class="ne-text">是</span><code class="ne-code"><span class="ne-text">新建页面</span></code><span class="ne-text"> 还是</span><code class="ne-code"><span class="ne-text"> 更新页</span></code><span class="ne-text">面 甚至是</span><code class="ne-code"><span class="ne-text">更新策略</span></code><span class="ne-text">等，都有关系，不同场景下有不同结论。</span></li></ul><p id="ucd040c7e" class="ne-p"><br></p><h2 id="bCYeV"><span class="ne-text">5、最后</span></h2><p id="u120cbad4" class="ne-p"><span class="ne-text">无论是</span><code class="ne-code"><span class="ne-text">命令式</span></code><span class="ne-text">还</span><code class="ne-code"><span class="ne-text">是声明式</span></code><span class="ne-text">，或者框架需要设计成</span><code class="ne-code"><span class="ne-text">运行时</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">编译时</span></code><span class="ne-text">或</span><code class="ne-code"><span class="ne-text">运行时+编译时</span></code><span class="ne-text">，都需要结合 </span><code class="ne-code"><span class="ne-text">性能</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">理解成本</span></code><span class="ne-text">、</span><code class="ne-code"><span class="ne-text">维护性</span></code><span class="ne-text">上做权衡选择。</span></p><h2 id="J0gU5"><span class="ne-text">参考</span></h2><ul class="ne-ul"><li id="u06d2d113"><span class="ne-text">《Vue.js设计与实现》</span></li></ul></div>`,body_lake:`<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="Cx11N" id="Cx11N"><span data-lake-id="u46712b5c" id="u46712b5c">前端框架设计里的 权衡 与 选择</span></h1><h2 data-lake-id="vlxgw" id="vlxgw"><span data-lake-id="u65c2e9e0" id="u65c2e9e0">1、命令式框架与声明式框架</span></h2><ul list="ucac2c4d4"><li fid="ub6f05dba" data-lake-id="u7de073ec" id="u7de073ec"><code data-lake-id="u4a8f231f" id="u4a8f231f"><span data-lake-id="u2d2b2d47" id="u2d2b2d47">Jquery</span></code><span data-lake-id="ub253f31c" id="ub253f31c"> 就是典型的 </span><strong><span data-lake-id="u663190bb" id="u663190bb">命令式框架</span></strong><span data-lake-id="uaf0e30ad" id="uaf0e30ad">，关注</span><code data-lake-id="u413c9e54" id="u413c9e54"><span data-lake-id="uf684b5f6" id="uf684b5f6">过程</span></code></li><li fid="ub6f05dba" data-lake-id="u72574176" id="u72574176"><span data-lake-id="u0b817bac" id="u0b817bac">Vue 暴露给用户使用的是 </span><code data-lake-id="uf79bc943" id="uf79bc943"><span data-lake-id="ubccfe7db" id="ubccfe7db">声明式</span></code><span data-lake-id="u7caa37ef" id="u7caa37ef"> ，但底层内部实现肯定也是 </span><code data-lake-id="u7ca34ecf" id="u7ca34ecf"><span data-lake-id="uf201af98" id="uf201af98">命令式</span></code><span data-lake-id="u547aaaca" id="u547aaaca"> ，如下示例：面向用户的是声明式的</span></li></ul><p data-lake-id="ud8169c33" id="ud8169c33"><span data-lake-id="u367e542a" id="u367e542a">​</span><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22vue%22%2C%22code%22%3A%22%3Ctemplate%3E%5Cn%20%20%3Cdiv%20%40click%3D%5C%22hello()%5C%22%3E%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22cHUDo%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="uce9162c4" id="uce9162c4"><br></p><p data-lake-id="ub1092e7b" id="ub1092e7b"><span data-lake-id="u2e86f4a0" id="u2e86f4a0">但问题是，</span><u><strong><span data-lake-id="u3094eb2a" id="u3094eb2a">声明式的代码性能 不会高于 命令式代码的性能 ，所以这是一个选择 或者权衡</span></strong></u></p><p data-lake-id="ue518ca07" id="ue518ca07"><u><strong><span data-lake-id="u03bd8356" id="u03bd8356">​</span></strong></u><br></p><h2 data-lake-id="RpjfL" id="RpjfL"><span data-lake-id="uad81b294" id="uad81b294">2、性能 与 维护性 的平衡</span></h2><p data-lake-id="u7686d6d3" id="u7686d6d3"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589228768-04c11b29-55f9-49a2-a750-9911ccf56ee1.png%22%2C%22taskId%22%3A%22uad224de1-a579-40c5-8dda-c08213eab7c%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1074.4%2C%22height%22%3A556%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A291718%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A2686%2C%22originHeight%22%3A1390%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%B6%89%E5%8F%8A%E5%88%B0DOM%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%3C%3C%20JS%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%20%E4%BD%BF%E7%94%A8INNERHTML%E5%8F%AA%E8%A6%81%E6%9B%B4%E6%94%B9%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%2C%E4%B9%9F%E5%BE%97%E5%AE%8C%E5%85%A8%E9%87%8D%20%E6%96%B0%E6%96%B0%E5%BB%BA%E6%89%80%E6%9C%89DOM%20GUANGWEILI%20%E8%BF%BD%E6%B1%82%E6%80%A7%E8%83%BD%E8%BF%98%E6%98%AF%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%3F%20%E8%99%9A%E6%8B%9FDOM%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%98%AF%20%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%E4%B8%8D%E9%94%99%E7%9A%84%E5%90%8C%E6%97%B6%E6%80%A7%E8%83%BD%E6%8D%9F%E8%80%97%E6%9C%80%E5%B0%8F%E5%91%A2%20%E5%85%B3%E6%B3%A8%E8%BF%87%E7%A8%8B%2C%E6%AF%94%E5%A6%82JQUERY%20%E6%98%AF%E5%91%BD%E4%BB%A4%E5%BC%8F%E8%BF%98%E6%98%AF%E5%A3%B0%E6%98%8E%E5%BC%8F%3F%20%E6%80%A7%E8%83%BD%E4%B8%8E%E7%90%86%E8%A7%A3%E6%88%90%E6%9C%AC%20%E7%9A%84%E5%B9%B3%E8%A1%A1%20(%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85)%20%E5%85%B3%E6%B3%A8%E7%BB%93%E6%9E%9C%3A%E6%AF%94%E5%A6%82VUETEMPLATE%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1756.8507%2C%22y%22%3A115.7471%2C%22width%22%3A622.6356000000001%2C%22height%22%3A42.07709999999999%2C%22text%22%3A%22%E6%B6%89%E5%8F%8A%E5%88%B0DOM%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%3C%3C%20JS%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%22%7D%2C%7B%22x%22%3A1755.3473%2C%22y%22%3A164.22305%2C%22width%22%3A710.2872000000002%2C%22height%22%3A40.987120000000004%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8INNERHTML%E5%8F%AA%E8%A6%81%E6%9B%B4%E6%94%B9%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%2C%E4%B9%9F%E5%BE%97%E5%AE%8C%E5%85%A8%E9%87%8D%22%7D%2C%7B%22x%22%3A1756.6349%2C%22y%22%3A217.75447%2C%22width%22%3A250.6280999999999%2C%22height%22%3A35.50483%2C%22text%22%3A%22%E6%96%B0%E6%96%B0%E5%BB%BA%E6%89%80%E6%9C%89DOM%22%7D%2C%7B%22x%22%3A1706.087%2C%22y%22%3A489.54507%2C%22width%22%3A151.356%2C%22height%22%3A30.868690000000015%2C%22text%22%3A%22GUANGWEILI%22%7D%2C%7B%22x%22%3A122.4616%2C%22y%22%3A602.86017%2C%22width%22%3A513.7196%2C%22height%22%3A51.60559000000001%2C%22text%22%3A%22%E8%BF%BD%E6%B1%82%E6%80%A7%E8%83%BD%E8%BF%98%E6%98%AF%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%3F%22%7D%2C%7B%22x%22%3A1954.3541%2C%22y%22%3A605.56067%2C%22width%22%3A215.3816999999999%2C%22height%22%3A49.19879000000003%2C%22text%22%3A%22%E8%99%9A%E6%8B%9FDOM%22%7D%2C%7B%22x%22%3A1060.1519%2C%22y%22%3A610.0253%2C%22width%22%3A168.14229999999998%2C%22height%22%3A38.94094999999993%2C%22text%22%3A%22%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%98%AF%22%7D%2C%7B%22x%22%3A816.78314%2C%22y%22%3A836.23804%2C%22width%22%3A653.9745600000001%2C%22height%22%3A37.80493000000001%2C%22text%22%3A%22%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%E4%B8%8D%E9%94%99%E7%9A%84%E5%90%8C%E6%97%B6%E6%80%A7%E8%83%BD%E6%8D%9F%E8%80%97%E6%9C%80%E5%B0%8F%E5%91%A2%22%7D%2C%7B%22x%22%3A1807.7023%2C%22y%22%3A1047.6636%2C%22width%22%3A491.3175000000001%2C%22height%22%3A57.33039999999983%2C%22text%22%3A%22%E5%85%B3%E6%B3%A8%E8%BF%87%E7%A8%8B%2C%E6%AF%94%E5%A6%82JQUERY%22%7D%2C%7B%22x%22%3A95.95089%2C%22y%22%3A1087.3492%2C%22width%22%3A474.35850999999997%2C%22height%22%3A50.27909999999997%2C%22text%22%3A%22%E6%98%AF%E5%91%BD%E4%BB%A4%E5%BC%8F%E8%BF%98%E6%98%AF%E5%A3%B0%E6%98%8E%E5%BC%8F%3F%22%7D%2C%7B%22x%22%3A891.9529%2C%22y%22%3A1093.2103%2C%22width%22%3A233.56240000000003%2C%22height%22%3A36.35149999999999%2C%22text%22%3A%22%E6%80%A7%E8%83%BD%E4%B8%8E%E7%90%86%E8%A7%A3%E6%88%90%E6%9C%AC%22%7D%2C%7B%22x%22%3A1315.8765%2C%22y%22%3A1095.347%2C%22width%22%3A100.7636%2C%22height%22%3A33.60809999999992%2C%22text%22%3A%22%E7%9A%84%E5%B9%B3%E8%A1%A1%22%7D%2C%7B%22x%22%3A1147.55%2C%22y%22%3A1094.4435%2C%22width%22%3A146.5159000000001%2C%22height%22%3A35.831500000000005%2C%22text%22%3A%22(%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85)%22%7D%2C%7B%22x%22%3A1810.9148%2C%22y%22%3A1122.4082%2C%22width%22%3A645.3591999999999%2C%22height%22%3A49.35269999999991%2C%22text%22%3A%22%E5%85%B3%E6%B3%A8%E7%BB%93%E6%9E%9C%3A%E6%AF%94%E5%A6%82VUETEMPLATE%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23cdc6e7%22%2C%22id%22%3A%22ub2d8d30d%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u546e4ab2" id="u546e4ab2"><br></p><h2 data-lake-id="vXCST" id="vXCST"><span data-lake-id="ue2ba03b3" id="ue2ba03b3">3、运行时 与 编译时 </span></h2><h3 data-lake-id="LRnCf" id="LRnCf"><span data-lake-id="u6e1361f6" id="u6e1361f6">纯运行时，即直接</span><code data-lake-id="u7fe7e116" id="u7fe7e116"><span data-lake-id="ub24c382f" id="ub24c382f">Render</span></code><span data-lake-id="u8ddccffd" id="u8ddccffd">即可</span></h3><p data-lake-id="uac48b5d2" id="uac48b5d2"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589398926-1b97cf7e-feca-48e0-b1a4-c99f1b16c31d.png%22%2C%22taskId%22%3A%22u106b8e0b-9c6b-42dd-9885-633e7d1f0af%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A568.4000244140625%2C%22height%22%3A388%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A283246%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1616%2C%22originHeight%22%3A1102%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22OBJ%20CCNST%20%E7%BA%AF%E8%BF%90%E8%A1%8C%E6%97%B6%20DIV'%20TAG%3A%20CHILDREN%3A%20ITAG%3A%20SPAN'%2C%20CHILDREN%3A%20'HELLO%20WORLD'%7D%20RENDER(OBJ%20FUNCTION%20RE%20ROOT%20EL%20%3A%20DOCUMENT.CREATEELEMENT(OBJ.TAG)%20CONST%20(TYPEOF%20OBJ.CHILDREN%20%E4%B8%89%E4%B8%89%3B%20'STRING')%20%7B%20IF%20S%20DOCUMENT.CREATETEXTNODE(OBJ.CHILDREN)%20TEXT%20CONST%20EL.APPENDCHILD(TEXT)%20%20ELSE%20IF%20(OBJ.CHILDREN)%20%2F%2F%E9%80%92%E5%BD%92%E7%BB%A7%E7%BB%AD%E9%81%8D%E5%8E%86%E5%BD%A2%E6%88%90DOM%E7%9A%84%E6%B7%BB%E5%8A%A0%20OBJ.CHILDREN.FOREACH((CHILD%20%3AT)%20%E4%B8%89%3E%20RENDER(CHILD%2C%20EL))%20%2F%2F%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%20%E8%8A%82%E7%82%B9%20ROOT%20%20ROOT.APPENDCHILD(EL)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A199.61525%2C%22y%22%3A48.568348%2C%22width%22%3A58.86491000000001%2C%22height%22%3A29.559342%2C%22text%22%3A%22OBJ%22%7D%2C%7B%22x%22%3A66.55563%2C%22y%22%3A47.21811%2C%22width%22%3A116.66988000000002%2C%22height%22%3A38.983923999999995%2C%22text%22%3A%22CCNST%22%7D%2C%7B%22x%22%3A712.15466%2C%22y%22%3A84.432465%2C%22width%22%3A191.49663999999996%2C%22height%22%3A47.73896499999999%2C%22text%22%3A%22%E7%BA%AF%E8%BF%90%E8%A1%8C%E6%97%B6%22%7D%2C%7B%22x%22%3A280.98825%2C%22y%22%3A104.9859%2C%22width%22%3A73.48013000000003%2C%22height%22%3A35.29172999999999%2C%22text%22%3A%22DIV'%22%7D%2C%7B%22x%22%3A160.49974%2C%22y%22%3A108.48798%2C%22width%22%3A77.83424%2C%22height%22%3A32.2149%2C%22text%22%3A%22TAG%3A%22%7D%2C%7B%22x%22%3A157.23746%2C%22y%22%3A160.59181%2C%22width%22%3A187.60134%2C%22height%22%3A38.29773%2C%22text%22%3A%22CHILDREN%3A%22%7D%2C%7B%22x%22%3A246.26924%2C%22y%22%3A219.30762%2C%22width%22%3A88.67253000000002%2C%22height%22%3A39.001480000000015%2C%22text%22%3A%22ITAG%3A%22%7D%2C%7B%22x%22%3A384.23596%2C%22y%22%3A217.89339%2C%22width%22%3A634.54124%2C%22height%22%3A36.849939999999975%2C%22text%22%3A%22SPAN'%2C%20CHILDREN%3A%20'HELLO%20WORLD'%7D%22%7D%2C%7B%22x%22%3A261.12628%2C%22y%22%3A387.17932%2C%22width%22%3A209.27961999999997%2C%22height%22%3A39.66433999999998%2C%22text%22%3A%22RENDER(OBJ%22%7D%2C%7B%22x%22%3A79.66464%2C%22y%22%3A391.9195%2C%22width%22%3A205.42845999999997%2C%22height%22%3A33.23764%2C%22text%22%3A%22FUNCTION%20RE%22%7D%2C%7B%22x%22%3A510.55176%2C%22y%22%3A395.67233%2C%22width%22%3A87.33203999999995%2C%22height%22%3A30.564850000000035%2C%22text%22%3A%22ROOT%22%7D%2C%7B%22x%22%3A278.31613%2C%22y%22%3A445.33356%2C%22width%22%3A737.3952300000001%2C%22height%22%3A41.01797000000005%2C%22text%22%3A%22EL%20%3A%20DOCUMENT.CREATEELEMENT(OBJ.TAG)%22%7D%2C%7B%22x%22%3A160.65546%2C%22y%22%3A452.04446%2C%22width%22%3A101.28566999999998%2C%22height%22%3A29.975739999999973%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A227.23178%2C%22y%22%3A506.6704%2C%22width%22%3A735.3945600000001%2C%22height%22%3A41.499700000000075%2C%22text%22%3A%22(TYPEOF%20OBJ.CHILDREN%20%E4%B8%89%E4%B8%89%3B%20'STRING')%20%7B%22%7D%2C%7B%22x%22%3A160.16986%2C%22y%22%3A507.28775%2C%22width%22%3A44.83913000000001%2C%22height%22%3A31.871609999999976%2C%22text%22%3A%22IF%22%7D%2C%7B%22x%22%3A497.17117%2C%22y%22%3A564.5361%2C%22width%22%3A766.21713%2C%22height%22%3A34.32394999999997%2C%22text%22%3A%22S%20DOCUMENT.CREATETEXTNODE(OBJ.CHILDREN)%22%7D%2C%7B%22x%22%3A362.4214%2C%22y%22%3A568.8319%2C%22width%22%3A90.08278000000001%2C%22height%22%3A29.898599999999988%2C%22text%22%3A%22TEXT%22%7D%2C%7B%22x%22%3A241.4061%2C%22y%22%3A569.5345%2C%22width%22%3A104.38528%2C%22height%22%3A27.954939999999965%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A240.96547%2C%22y%22%3A621.07355%2C%22width%22%3A407.74883%2C%22height%22%3A36.92511000000002%2C%22text%22%3A%22EL.APPENDCHILD(TEXT)%22%7D%2C%7B%22x%22%3A199.90106%2C%22y%22%3A680.3671%2C%22width%22%3A448.11554%2C%22height%22%3A37.158199999999965%2C%22text%22%3A%22%20ELSE%20IF%20(OBJ.CHILDREN)%22%7D%2C%7B%22x%22%3A242.41995%2C%22y%22%3A729.70233%2C%22width%22%3A539.25711%2C%22height%22%3A45.336310000000026%2C%22text%22%3A%22%2F%2F%E9%80%92%E5%BD%92%E7%BB%A7%E7%BB%AD%E9%81%8D%E5%8E%86%E5%BD%A2%E6%88%90DOM%E7%9A%84%E6%B7%BB%E5%8A%A0%22%7D%2C%7B%22x%22%3A241.3993%2C%22y%22%3A791.0496%2C%22width%22%3A1094.5938999999998%2C%22height%22%3A48.54129999999998%2C%22text%22%3A%22OBJ.CHILDREN.FOREACH((CHILD%20%3AT)%20%E4%B8%89%3E%20RENDER(CHILD%2C%20EL))%22%7D%2C%7B%22x%22%3A164.69868%2C%22y%22%3A907.0802%2C%22width%22%3A302.45552%2C%22height%22%3A40.19010000000003%2C%22text%22%3A%22%2F%2F%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%22%7D%2C%7B%22x%22%3A586.7925%2C%22y%22%3A909.8587%2C%22width%22%3A65.41354999999999%2C%22height%22%3A35.27062999999998%2C%22text%22%3A%22%E8%8A%82%E7%82%B9%22%7D%2C%7B%22x%22%3A462.44232%2C%22y%22%3A915.3193%2C%22width%22%3A104.48738000000003%2C%22height%22%3A28.179970000000026%2C%22text%22%3A%22ROOT%22%7D%2C%7B%22x%22%3A158.40428%2C%22y%22%3A963.92053%2C%22width%22%3A411.65688%2C%22height%22%3A42.56684000000007%2C%22text%22%3A%22%20ROOT.APPENDCHILD(EL)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%231c1b1a%22%2C%22id%22%3A%22ufb6a40cc%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="ubbe7f804" id="ubbe7f804"><br></p><p data-lake-id="u1a069019" id="u1a069019"><br></p><h3 data-lake-id="p6DpH" id="p6DpH"><span data-lake-id="uc7fc1f52" id="uc7fc1f52">运行时 + 编译时 ，如下图，常用的Vue/Angular/React都属于这类框架</span></h3><h3 data-lake-id="Z3uNu" id="Z3uNu"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589488319-a2e29e7a-eca0-45e8-aeda-acbcf7f65fc7.png%22%2C%22taskId%22%3A%22u3d680c3c-1e48-4409-9677-919e7af4961%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A411.2%2C%22height%22%3A219%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A122923%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1028%2C%22originHeight%22%3A548%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22HTML%20%3A%20%3CDIV%3E%20CONST%20G%20%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3EL%20%3C%2FDIV%3E%20%2F%2F%20COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%20CONST%20OBJ%20COMPILER(HTML)%20%E6%A0%91%E7%BB%93%E6%9E%84%E6%B8%B2%E6%9F%93%E5%88%B0%E9%A1%B5%E9%9D%A2%20RENDER%E5%B0%86DOM%20RENDER(OBJ%2C%20DOCUMENT.BODY)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A215.76907%2C%22y%22%3A78.2767%2C%22width%22%3A269.53983%2C%22height%22%3A35.78644%2C%22text%22%3A%22HTML%20%3A%20%3CDIV%3E%22%7D%2C%7B%22x%22%3A93.18044%2C%22y%22%3A83.672035%2C%22width%22%3A106.69935999999998%2C%22height%22%3A27.68306000000001%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A807.09705%2C%22y%22%3A108.465546%2C%22width%22%3A23.53035%2C%22height%22%3A28.329753999999994%2C%22text%22%3A%22G%22%7D%2C%7B%22x%22%3A140.19185%2C%22y%22%3A133.33702%2C%22width%22%3A507.01205%2C%22height%22%3A41.54596000000001%2C%22text%22%3A%22%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3EL%22%7D%2C%7B%22x%22%3A95.32455%2C%22y%22%3A192.15587%2C%22width%22%3A119.27005000000001%2C%22height%22%3A36.57817%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A84.835304%2C%22y%22%3A246.49176%2C%22width%22%3A547.8785660000001%2C%22height%22%3A45.63126%2C%22text%22%3A%22%2F%2F%20COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%22%7D%2C%7B%22x%22%3A92.530846%2C%22y%22%3A305.47598%2C%22width%22%3A525.273854%2C%22height%22%3A43.42029000000002%2C%22text%22%3A%22CONST%20OBJ%20COMPILER(HTML)%22%7D%2C%7B%22x%22%3A434.74524%2C%22y%22%3A365.9333%2C%22width%22%3A272.24872%2C%22height%22%3A35.60436000000004%2C%22text%22%3A%22%E6%A0%91%E7%BB%93%E6%9E%84%E6%B8%B2%E6%9F%93%E5%88%B0%E9%A1%B5%E9%9D%A2%22%7D%2C%7B%22x%22%3A154.57024%2C%22y%22%3A366.15475%2C%22width%22%3A263.29472%2C%22height%22%3A34.58475000000004%2C%22text%22%3A%22RENDER%E5%B0%86DOM%22%7D%2C%7B%22x%22%3A93.33522%2C%22y%22%3A423.30225%2C%22width%22%3A529.58922%2C%22height%22%3A36.76804999999996%2C%22text%22%3A%22RENDER(OBJ%2C%20DOCUMENT.BODY)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23292826%22%2C%22id%22%3A%22ub6362b65%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></h3><p data-lake-id="u2e3f2880" id="u2e3f2880"><br></p><h3 data-lake-id="nYUZb" id="nYUZb"><span data-lake-id="ua2a18e1b" id="ua2a18e1b">纯编译时框架，代表</span><code data-lake-id="u67b25415" id="u67b25415"><span data-lake-id="u4325b2e8" id="u4325b2e8">Svelte</span></code></h3><p data-lake-id="u226bf797" id="u226bf797"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589662546-775a4898-2509-4270-b499-ef24417b26d9.png%22%2C%22taskId%22%3A%22u4137e7b0-70cc-44ab-81b7-fb5e32da653%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A639.2%2C%22height%22%3A373%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A311966%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1598%2C%22originHeight%22%3A932%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%20ECONST%20HTML%20%E4%B8%89%20%3CDIV%3E%20%E7%BA%AF%E7%BC%96%E8%AF%91%E6%97%B6%20%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3E%20%3C%2FDIV%3E%20SVELTE%E4%B8%BA%E4%BB%A3%E8%A1%A8%20COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%20CONST%20OBJ%20-%20COMPILER(HTML%20%3A%E7%9B%B4%E6%8E%A5%E4%BA%A7%E5%87%BA%E5%A6%82%E4%B8%8B%E5%91%BD%E4%BB%A4%E5%BC%8F%E4%BB%A3%E7%A0%81%2C%E5%8F%AF%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%20DIV%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A%20DIV')%20CONST%20ST%20SPAN%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A'SPAN')%20CONST%20S%20SPAN.INNERTEXT%20%3B%20'HELLO%20WORLD'%20DIV.APPENDCHILD(SPAN)%20DOCUMENT.BODY.APPENDCHILD(DIV)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A94.023994%2C%22y%22%3A91.86297%2C%22width%22%3A434.456406%2C%22height%22%3A32.84384999999999%2C%22text%22%3A%22%20ECONST%20HTML%20%E4%B8%89%20%3CDIV%3E%22%7D%2C%7B%22x%22%3A886.67474%2C%22y%22%3A99.34816%2C%22width%22%3A258.34605999999997%2C%22height%22%3A67.22787000000001%2C%22text%22%3A%22%E7%BA%AF%E7%BC%96%E8%AF%91%E6%97%B6%22%7D%2C%7B%22x%22%3A189.02554%2C%22y%22%3A144.01158%2C%22width%22%3A484.26856%2C%22height%22%3A47.78065999999998%2C%22text%22%3A%22%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A142.08865%2C%22y%22%3A203.41544%2C%22width%22%3A120.33908%2C%22height%22%3A36.76738%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A832.7862%2C%22y%22%3A268.33463%2C%22width%22%3A368.50749999999994%2C%22height%22%3A63.81912%2C%22text%22%3A%22SVELTE%E4%B8%BA%E4%BB%A3%E8%A1%A8%22%7D%2C%7B%22x%22%3A198.30705%2C%22y%22%3A318.67038%2C%22width%22%3A496.33015%2C%22height%22%3A37.97271999999998%2C%22text%22%3A%22COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%22%7D%2C%7B%22x%22%3A140.47012%2C%22y%22%3A377.34262%2C%22width%22%3A502.78028%2C%22height%22%3A36.835019999999986%2C%22text%22%3A%22CONST%20OBJ%20-%20COMPILER(HTML%22%7D%2C%7B%22x%22%3A282.317%2C%22y%22%3A434.4126%2C%22width%22%3A584.7707%2C%22height%22%3A35.503420000000006%2C%22text%22%3A%22%3A%E7%9B%B4%E6%8E%A5%E4%BA%A7%E5%87%BA%E5%A6%82%E4%B8%8B%E5%91%BD%E4%BB%A4%E5%BC%8F%E4%BB%A3%E7%A0%81%2C%E5%8F%AF%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%22%7D%2C%7B%22x%22%3A262.08304%2C%22y%22%3A492.06198%2C%22width%22%3A753.70376%2C%22height%22%3A37.71292%2C%22text%22%3A%22DIV%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A%22%7D%2C%7B%22x%22%3A1047.3872%2C%22y%22%3A493.5809%2C%22width%22%3A99.53890000000001%2C%22height%22%3A31.882599999999968%2C%22text%22%3A%22DIV')%22%7D%2C%7B%22x%22%3A141.46967%2C%22y%22%3A497.54288%2C%22width%22%3A103.97748999999999%2C%22height%22%3A26.965359999999976%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A211.93518%2C%22y%22%3A548.23724%2C%22width%22%3A975.2240200000001%2C%22height%22%3A45.39832000000001%2C%22text%22%3A%22ST%20SPAN%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A'SPAN')%22%7D%2C%7B%22x%22%3A139.41412%2C%22y%22%3A555.3108%2C%22width%22%3A135.86247999999998%2C%22height%22%3A27.512299999999982%2C%22text%22%3A%22CONST%20S%22%7D%2C%7B%22x%22%3A140.5911%2C%22y%22%3A609.5929%2C%22width%22%3A605.1256%2C%22height%22%3A35.55280000000005%2C%22text%22%3A%22SPAN.INNERTEXT%20%3B%20'HELLO%20WORLD'%22%7D%2C%7B%22x%22%3A140.0389%2C%22y%22%3A663.234%2C%22width%22%3A424.11479999999995%2C%22height%22%3A38.63483999999994%2C%22text%22%3A%22DIV.APPENDCHILD(SPAN)%22%7D%2C%7B%22x%22%3A139.94%2C%22y%22%3A720.7031%2C%22width%22%3A611.9573399999999%2C%22height%22%3A38.51705000000004%2C%22text%22%3A%22DOCUMENT.BODY.APPENDCHILD(DIV)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23575453%22%2C%22id%22%3A%22uc02af96e%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u8fa0ff9a" id="u8fa0ff9a"><br></p><h2 data-lake-id="uxe4m" id="uxe4m"><span data-lake-id="ua24cef16" id="ua24cef16">4、原生JS操作DOM、InnerHTML 与 虚拟DOM 快慢对比</span></h2><p data-lake-id="uf8b229a0" id="uf8b229a0"><span data-lake-id="u108ef488" id="u108ef488">可从以下三个方面来度量</span></p><ul list="u4cae8d47"><li fid="ue619c4be" data-lake-id="u2bf21b9e" id="u2bf21b9e"><span data-lake-id="u4591c0c2" id="u4591c0c2">理解成本上，</span><strong><u><span data-lake-id="u2a0229b9" id="u2a0229b9">原生JS操作DOM &gt;   InnerHTML &gt;  虚拟DOM</span></u></strong></li><li fid="ue619c4be" data-lake-id="uad4d6f7f" id="uad4d6f7f"><span data-lake-id="u615789fc" id="u615789fc">维护性上，</span><strong><u><span data-lake-id="u621b2b35" id="u621b2b35">原生JS操作DOM 、  InnerHTML  &lt;  虚拟DOM</span></u></strong></li><li fid="ue619c4be" data-lake-id="ue305b861" id="ue305b861"><span data-lake-id="u279418de" id="u279418de">性能上，取决于</span><code data-lake-id="ub06218cc" id="ub06218cc"><span data-lake-id="ub806f983" id="ub806f983">页面大小</span></code><span data-lake-id="ua4bf3bd1" id="ua4bf3bd1">，</span><code data-lake-id="u94b113cd" id="u94b113cd"><span data-lake-id="ua3cf5601" id="ua3cf5601">页面变更大小，</span></code><span data-lake-id="u25f192bc" id="u25f192bc">是</span><code data-lake-id="uaf682f03" id="uaf682f03"><span data-lake-id="u48304dfa" id="u48304dfa">新建页面</span></code><span data-lake-id="u6244b641" id="u6244b641"> 还是</span><code data-lake-id="ua71bfd82" id="ua71bfd82"><span data-lake-id="ua509a67d" id="ua509a67d"> 更新页</span></code><span data-lake-id="u38a57753" id="u38a57753">面 甚至是</span><code data-lake-id="u7a191a26" id="u7a191a26"><span data-lake-id="ud2c82f0f" id="ud2c82f0f">更新策略</span></code><span data-lake-id="ub3d50129" id="ub3d50129">等，都有关系，不同场景下有不同结论。</span></li></ul><p data-lake-id="ucd040c7e" id="ucd040c7e"><br></p><h2 data-lake-id="bCYeV" id="bCYeV"><span data-lake-id="u7145290e" id="u7145290e">5、最后</span></h2><p data-lake-id="u120cbad4" id="u120cbad4"><span data-lake-id="u25236418" id="u25236418">无论是</span><code data-lake-id="u32882d94" id="u32882d94"><span data-lake-id="uc02183f2" id="uc02183f2">命令式</span></code><span data-lake-id="u3fe84206" id="u3fe84206">还</span><code data-lake-id="u241d2edf" id="u241d2edf"><span data-lake-id="u2dff6e4e" id="u2dff6e4e">是声明式</span></code><span data-lake-id="ue36429d0" id="ue36429d0">，或者框架需要设计成</span><code data-lake-id="u7fb45e1f" id="u7fb45e1f"><span data-lake-id="uf2b4defd" id="uf2b4defd">运行时</span></code><span data-lake-id="u9ba51878" id="u9ba51878">、</span><code data-lake-id="ue111b0db" id="ue111b0db"><span data-lake-id="uc1996240" id="uc1996240">编译时</span></code><span data-lake-id="u9a7c8f47" id="u9a7c8f47">或</span><code data-lake-id="u0620cead" id="u0620cead"><span data-lake-id="u97268f9e" id="u97268f9e">运行时+编译时</span></code><span data-lake-id="u27ac6128" id="u27ac6128">，都需要结合 </span><code data-lake-id="u5a3b9b6e" id="u5a3b9b6e"><span data-lake-id="uf5435d4a" id="uf5435d4a">性能</span></code><span data-lake-id="ua3b4dbe7" id="ua3b4dbe7">、</span><code data-lake-id="u8877aebc" id="u8877aebc"><span data-lake-id="u3fbf96fc" id="u3fbf96fc">理解成本</span></code><span data-lake-id="u5ae757f6" id="u5ae757f6">、</span><code data-lake-id="u8ec5ea6f" id="u8ec5ea6f"><span data-lake-id="uc553c186" id="uc553c186">维护性</span></code><span data-lake-id="ub2c1abc9" id="ub2c1abc9">上做权衡选择。</span></p><h2 data-lake-id="J0gU5" id="J0gU5"><span data-lake-id="u730fec6e" id="u730fec6e">参考</span></h2><ul list="uc4e601d6"><li fid="u7f99def1" data-lake-id="u06d2d113" id="u06d2d113"><span data-lake-id="u634a8396" id="u634a8396">《Vue.js设计与实现》</span></li></ul>`,body_draft_lake:`<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="Cx11N" id="Cx11N"><span data-lake-id="u46712b5c" id="u46712b5c">前端框架设计里的 权衡 与 选择</span></h1><h2 data-lake-id="vlxgw" id="vlxgw"><span data-lake-id="u65c2e9e0" id="u65c2e9e0">1、命令式框架与声明式框架</span></h2><ul list="ucac2c4d4"><li fid="ub6f05dba" data-lake-id="u7de073ec" id="u7de073ec"><code data-lake-id="u4a8f231f" id="u4a8f231f"><span data-lake-id="u2d2b2d47" id="u2d2b2d47">Jquery</span></code><span data-lake-id="ub253f31c" id="ub253f31c"> 就是典型的 </span><strong><span data-lake-id="u663190bb" id="u663190bb">命令式框架</span></strong><span data-lake-id="uaf0e30ad" id="uaf0e30ad">，关注</span><code data-lake-id="u413c9e54" id="u413c9e54"><span data-lake-id="uf684b5f6" id="uf684b5f6">过程</span></code></li><li fid="ub6f05dba" data-lake-id="u72574176" id="u72574176"><span data-lake-id="u0b817bac" id="u0b817bac">Vue 暴露给用户使用的是 </span><code data-lake-id="uf79bc943" id="uf79bc943"><span data-lake-id="ubccfe7db" id="ubccfe7db">声明式</span></code><span data-lake-id="u7caa37ef" id="u7caa37ef"> ，但底层内部实现肯定也是 </span><code data-lake-id="u7ca34ecf" id="u7ca34ecf"><span data-lake-id="uf201af98" id="uf201af98">命令式</span></code><span data-lake-id="u547aaaca" id="u547aaaca"> ，如下示例：面向用户的是声明式的</span></li></ul><p data-lake-id="ud8169c33" id="ud8169c33"><span data-lake-id="u367e542a" id="u367e542a">​</span><br></p><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22vue%22%2C%22code%22%3A%22%3Ctemplate%3E%5Cn%20%20%3Cdiv%20%40click%3D%5C%22hello()%5C%22%3E%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22cHUDo%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="uce9162c4" id="uce9162c4"><br></p><p data-lake-id="ub1092e7b" id="ub1092e7b"><span data-lake-id="u2e86f4a0" id="u2e86f4a0">但问题是，</span><u><strong><span data-lake-id="u3094eb2a" id="u3094eb2a">声明式的代码性能 不会高于 命令式代码的性能 ，所以这是一个选择 或者权衡</span></strong></u></p><p data-lake-id="ue518ca07" id="ue518ca07"><u><strong><span data-lake-id="u03bd8356" id="u03bd8356">​</span></strong></u><br></p><h2 data-lake-id="RpjfL" id="RpjfL"><span data-lake-id="uad81b294" id="uad81b294">2、性能 与 维护性 的平衡</span></h2><p data-lake-id="u7686d6d3" id="u7686d6d3"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589228768-04c11b29-55f9-49a2-a750-9911ccf56ee1.png%22%2C%22taskId%22%3A%22uad224de1-a579-40c5-8dda-c08213eab7c%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A1074.4%2C%22height%22%3A556%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A291718%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A2686%2C%22originHeight%22%3A1390%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%E6%B6%89%E5%8F%8A%E5%88%B0DOM%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%3C%3C%20JS%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%20%E4%BD%BF%E7%94%A8INNERHTML%E5%8F%AA%E8%A6%81%E6%9B%B4%E6%94%B9%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%2C%E4%B9%9F%E5%BE%97%E5%AE%8C%E5%85%A8%E9%87%8D%20%E6%96%B0%E6%96%B0%E5%BB%BA%E6%89%80%E6%9C%89DOM%20GUANGWEILI%20%E8%BF%BD%E6%B1%82%E6%80%A7%E8%83%BD%E8%BF%98%E6%98%AF%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%3F%20%E8%99%9A%E6%8B%9FDOM%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%98%AF%20%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%E4%B8%8D%E9%94%99%E7%9A%84%E5%90%8C%E6%97%B6%E6%80%A7%E8%83%BD%E6%8D%9F%E8%80%97%E6%9C%80%E5%B0%8F%E5%91%A2%20%E5%85%B3%E6%B3%A8%E8%BF%87%E7%A8%8B%2C%E6%AF%94%E5%A6%82JQUERY%20%E6%98%AF%E5%91%BD%E4%BB%A4%E5%BC%8F%E8%BF%98%E6%98%AF%E5%A3%B0%E6%98%8E%E5%BC%8F%3F%20%E6%80%A7%E8%83%BD%E4%B8%8E%E7%90%86%E8%A7%A3%E6%88%90%E6%9C%AC%20%E7%9A%84%E5%B9%B3%E8%A1%A1%20(%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85)%20%E5%85%B3%E6%B3%A8%E7%BB%93%E6%9E%9C%3A%E6%AF%94%E5%A6%82VUETEMPLATE%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1756.8507%2C%22y%22%3A115.7471%2C%22width%22%3A622.6356000000001%2C%22height%22%3A42.07709999999999%2C%22text%22%3A%22%E6%B6%89%E5%8F%8A%E5%88%B0DOM%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%3C%3C%20JS%E7%9A%84%E8%BF%90%E7%AE%97%E6%80%A7%E8%83%BD%22%7D%2C%7B%22x%22%3A1755.3473%2C%22y%22%3A164.22305%2C%22width%22%3A710.2872000000002%2C%22height%22%3A40.987120000000004%2C%22text%22%3A%22%E4%BD%BF%E7%94%A8INNERHTML%E5%8F%AA%E8%A6%81%E6%9B%B4%E6%94%B9%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%2C%E4%B9%9F%E5%BE%97%E5%AE%8C%E5%85%A8%E9%87%8D%22%7D%2C%7B%22x%22%3A1756.6349%2C%22y%22%3A217.75447%2C%22width%22%3A250.6280999999999%2C%22height%22%3A35.50483%2C%22text%22%3A%22%E6%96%B0%E6%96%B0%E5%BB%BA%E6%89%80%E6%9C%89DOM%22%7D%2C%7B%22x%22%3A1706.087%2C%22y%22%3A489.54507%2C%22width%22%3A151.356%2C%22height%22%3A30.868690000000015%2C%22text%22%3A%22GUANGWEILI%22%7D%2C%7B%22x%22%3A122.4616%2C%22y%22%3A602.86017%2C%22width%22%3A513.7196%2C%22height%22%3A51.60559000000001%2C%22text%22%3A%22%E8%BF%BD%E6%B1%82%E6%80%A7%E8%83%BD%E8%BF%98%E6%98%AF%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%3F%22%7D%2C%7B%22x%22%3A1954.3541%2C%22y%22%3A605.56067%2C%22width%22%3A215.3816999999999%2C%22height%22%3A49.19879000000003%2C%22text%22%3A%22%E8%99%9A%E6%8B%9FDOM%22%7D%2C%7B%22x%22%3A1060.1519%2C%22y%22%3A610.0253%2C%22width%22%3A168.14229999999998%2C%22height%22%3A38.94094999999993%2C%22text%22%3A%22%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%98%AF%22%7D%2C%7B%22x%22%3A816.78314%2C%22y%22%3A836.23804%2C%22width%22%3A653.9745600000001%2C%22height%22%3A37.80493000000001%2C%22text%22%3A%22%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E5%8F%AF%E7%BB%B4%E6%8A%A4%E6%80%A7%E4%B8%8D%E9%94%99%E7%9A%84%E5%90%8C%E6%97%B6%E6%80%A7%E8%83%BD%E6%8D%9F%E8%80%97%E6%9C%80%E5%B0%8F%E5%91%A2%22%7D%2C%7B%22x%22%3A1807.7023%2C%22y%22%3A1047.6636%2C%22width%22%3A491.3175000000001%2C%22height%22%3A57.33039999999983%2C%22text%22%3A%22%E5%85%B3%E6%B3%A8%E8%BF%87%E7%A8%8B%2C%E6%AF%94%E5%A6%82JQUERY%22%7D%2C%7B%22x%22%3A95.95089%2C%22y%22%3A1087.3492%2C%22width%22%3A474.35850999999997%2C%22height%22%3A50.27909999999997%2C%22text%22%3A%22%E6%98%AF%E5%91%BD%E4%BB%A4%E5%BC%8F%E8%BF%98%E6%98%AF%E5%A3%B0%E6%98%8E%E5%BC%8F%3F%22%7D%2C%7B%22x%22%3A891.9529%2C%22y%22%3A1093.2103%2C%22width%22%3A233.56240000000003%2C%22height%22%3A36.35149999999999%2C%22text%22%3A%22%E6%80%A7%E8%83%BD%E4%B8%8E%E7%90%86%E8%A7%A3%E6%88%90%E6%9C%AC%22%7D%2C%7B%22x%22%3A1315.8765%2C%22y%22%3A1095.347%2C%22width%22%3A100.7636%2C%22height%22%3A33.60809999999992%2C%22text%22%3A%22%E7%9A%84%E5%B9%B3%E8%A1%A1%22%7D%2C%7B%22x%22%3A1147.55%2C%22y%22%3A1094.4435%2C%22width%22%3A146.5159000000001%2C%22height%22%3A35.831500000000005%2C%22text%22%3A%22(%E5%BF%83%E6%99%BA%E8%B4%9F%E6%8B%85)%22%7D%2C%7B%22x%22%3A1810.9148%2C%22y%22%3A1122.4082%2C%22width%22%3A645.3591999999999%2C%22height%22%3A49.35269999999991%2C%22text%22%3A%22%E5%85%B3%E6%B3%A8%E7%BB%93%E6%9E%9C%3A%E6%AF%94%E5%A6%82VUETEMPLATE%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23cdc6e7%22%2C%22id%22%3A%22ub2d8d30d%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u546e4ab2" id="u546e4ab2"><br></p><h2 data-lake-id="vXCST" id="vXCST"><span data-lake-id="ue2ba03b3" id="ue2ba03b3">3、运行时 与 编译时 </span></h2><h3 data-lake-id="LRnCf" id="LRnCf"><span data-lake-id="u6e1361f6" id="u6e1361f6">纯运行时，即直接</span><code data-lake-id="u7fe7e116" id="u7fe7e116"><span data-lake-id="ub24c382f" id="ub24c382f">Render</span></code><span data-lake-id="u8ddccffd" id="u8ddccffd">即可</span></h3><p data-lake-id="uac48b5d2" id="uac48b5d2"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589398926-1b97cf7e-feca-48e0-b1a4-c99f1b16c31d.png%22%2C%22taskId%22%3A%22u106b8e0b-9c6b-42dd-9885-633e7d1f0af%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A568.4000244140625%2C%22height%22%3A388%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A283246%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1616%2C%22originHeight%22%3A1102%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22OBJ%20CCNST%20%E7%BA%AF%E8%BF%90%E8%A1%8C%E6%97%B6%20DIV'%20TAG%3A%20CHILDREN%3A%20ITAG%3A%20SPAN'%2C%20CHILDREN%3A%20'HELLO%20WORLD'%7D%20RENDER(OBJ%20FUNCTION%20RE%20ROOT%20EL%20%3A%20DOCUMENT.CREATEELEMENT(OBJ.TAG)%20CONST%20(TYPEOF%20OBJ.CHILDREN%20%E4%B8%89%E4%B8%89%3B%20'STRING')%20%7B%20IF%20S%20DOCUMENT.CREATETEXTNODE(OBJ.CHILDREN)%20TEXT%20CONST%20EL.APPENDCHILD(TEXT)%20%20ELSE%20IF%20(OBJ.CHILDREN)%20%2F%2F%E9%80%92%E5%BD%92%E7%BB%A7%E7%BB%AD%E9%81%8D%E5%8E%86%E5%BD%A2%E6%88%90DOM%E7%9A%84%E6%B7%BB%E5%8A%A0%20OBJ.CHILDREN.FOREACH((CHILD%20%3AT)%20%E4%B8%89%3E%20RENDER(CHILD%2C%20EL))%20%2F%2F%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%20%E8%8A%82%E7%82%B9%20ROOT%20%20ROOT.APPENDCHILD(EL)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A199.61525%2C%22y%22%3A48.568348%2C%22width%22%3A58.86491000000001%2C%22height%22%3A29.559342%2C%22text%22%3A%22OBJ%22%7D%2C%7B%22x%22%3A66.55563%2C%22y%22%3A47.21811%2C%22width%22%3A116.66988000000002%2C%22height%22%3A38.983923999999995%2C%22text%22%3A%22CCNST%22%7D%2C%7B%22x%22%3A712.15466%2C%22y%22%3A84.432465%2C%22width%22%3A191.49663999999996%2C%22height%22%3A47.73896499999999%2C%22text%22%3A%22%E7%BA%AF%E8%BF%90%E8%A1%8C%E6%97%B6%22%7D%2C%7B%22x%22%3A280.98825%2C%22y%22%3A104.9859%2C%22width%22%3A73.48013000000003%2C%22height%22%3A35.29172999999999%2C%22text%22%3A%22DIV'%22%7D%2C%7B%22x%22%3A160.49974%2C%22y%22%3A108.48798%2C%22width%22%3A77.83424%2C%22height%22%3A32.2149%2C%22text%22%3A%22TAG%3A%22%7D%2C%7B%22x%22%3A157.23746%2C%22y%22%3A160.59181%2C%22width%22%3A187.60134%2C%22height%22%3A38.29773%2C%22text%22%3A%22CHILDREN%3A%22%7D%2C%7B%22x%22%3A246.26924%2C%22y%22%3A219.30762%2C%22width%22%3A88.67253000000002%2C%22height%22%3A39.001480000000015%2C%22text%22%3A%22ITAG%3A%22%7D%2C%7B%22x%22%3A384.23596%2C%22y%22%3A217.89339%2C%22width%22%3A634.54124%2C%22height%22%3A36.849939999999975%2C%22text%22%3A%22SPAN'%2C%20CHILDREN%3A%20'HELLO%20WORLD'%7D%22%7D%2C%7B%22x%22%3A261.12628%2C%22y%22%3A387.17932%2C%22width%22%3A209.27961999999997%2C%22height%22%3A39.66433999999998%2C%22text%22%3A%22RENDER(OBJ%22%7D%2C%7B%22x%22%3A79.66464%2C%22y%22%3A391.9195%2C%22width%22%3A205.42845999999997%2C%22height%22%3A33.23764%2C%22text%22%3A%22FUNCTION%20RE%22%7D%2C%7B%22x%22%3A510.55176%2C%22y%22%3A395.67233%2C%22width%22%3A87.33203999999995%2C%22height%22%3A30.564850000000035%2C%22text%22%3A%22ROOT%22%7D%2C%7B%22x%22%3A278.31613%2C%22y%22%3A445.33356%2C%22width%22%3A737.3952300000001%2C%22height%22%3A41.01797000000005%2C%22text%22%3A%22EL%20%3A%20DOCUMENT.CREATEELEMENT(OBJ.TAG)%22%7D%2C%7B%22x%22%3A160.65546%2C%22y%22%3A452.04446%2C%22width%22%3A101.28566999999998%2C%22height%22%3A29.975739999999973%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A227.23178%2C%22y%22%3A506.6704%2C%22width%22%3A735.3945600000001%2C%22height%22%3A41.499700000000075%2C%22text%22%3A%22(TYPEOF%20OBJ.CHILDREN%20%E4%B8%89%E4%B8%89%3B%20'STRING')%20%7B%22%7D%2C%7B%22x%22%3A160.16986%2C%22y%22%3A507.28775%2C%22width%22%3A44.83913000000001%2C%22height%22%3A31.871609999999976%2C%22text%22%3A%22IF%22%7D%2C%7B%22x%22%3A497.17117%2C%22y%22%3A564.5361%2C%22width%22%3A766.21713%2C%22height%22%3A34.32394999999997%2C%22text%22%3A%22S%20DOCUMENT.CREATETEXTNODE(OBJ.CHILDREN)%22%7D%2C%7B%22x%22%3A362.4214%2C%22y%22%3A568.8319%2C%22width%22%3A90.08278000000001%2C%22height%22%3A29.898599999999988%2C%22text%22%3A%22TEXT%22%7D%2C%7B%22x%22%3A241.4061%2C%22y%22%3A569.5345%2C%22width%22%3A104.38528%2C%22height%22%3A27.954939999999965%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A240.96547%2C%22y%22%3A621.07355%2C%22width%22%3A407.74883%2C%22height%22%3A36.92511000000002%2C%22text%22%3A%22EL.APPENDCHILD(TEXT)%22%7D%2C%7B%22x%22%3A199.90106%2C%22y%22%3A680.3671%2C%22width%22%3A448.11554%2C%22height%22%3A37.158199999999965%2C%22text%22%3A%22%20ELSE%20IF%20(OBJ.CHILDREN)%22%7D%2C%7B%22x%22%3A242.41995%2C%22y%22%3A729.70233%2C%22width%22%3A539.25711%2C%22height%22%3A45.336310000000026%2C%22text%22%3A%22%2F%2F%E9%80%92%E5%BD%92%E7%BB%A7%E7%BB%AD%E9%81%8D%E5%8E%86%E5%BD%A2%E6%88%90DOM%E7%9A%84%E6%B7%BB%E5%8A%A0%22%7D%2C%7B%22x%22%3A241.3993%2C%22y%22%3A791.0496%2C%22width%22%3A1094.5938999999998%2C%22height%22%3A48.54129999999998%2C%22text%22%3A%22OBJ.CHILDREN.FOREACH((CHILD%20%3AT)%20%E4%B8%89%3E%20RENDER(CHILD%2C%20EL))%22%7D%2C%7B%22x%22%3A164.69868%2C%22y%22%3A907.0802%2C%22width%22%3A302.45552%2C%22height%22%3A40.19010000000003%2C%22text%22%3A%22%2F%2F%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%22%7D%2C%7B%22x%22%3A586.7925%2C%22y%22%3A909.8587%2C%22width%22%3A65.41354999999999%2C%22height%22%3A35.27062999999998%2C%22text%22%3A%22%E8%8A%82%E7%82%B9%22%7D%2C%7B%22x%22%3A462.44232%2C%22y%22%3A915.3193%2C%22width%22%3A104.48738000000003%2C%22height%22%3A28.179970000000026%2C%22text%22%3A%22ROOT%22%7D%2C%7B%22x%22%3A158.40428%2C%22y%22%3A963.92053%2C%22width%22%3A411.65688%2C%22height%22%3A42.56684000000007%2C%22text%22%3A%22%20ROOT.APPENDCHILD(EL)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%231c1b1a%22%2C%22id%22%3A%22ufb6a40cc%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="ubbe7f804" id="ubbe7f804"><br></p><p data-lake-id="u1a069019" id="u1a069019"><br></p><h3 data-lake-id="p6DpH" id="p6DpH"><span data-lake-id="uc7fc1f52" id="uc7fc1f52">运行时 + 编译时 ，如下图，常用的Vue/Angular/React都属于这类框架</span></h3><h3 data-lake-id="Z3uNu" id="Z3uNu"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589488319-a2e29e7a-eca0-45e8-aeda-acbcf7f65fc7.png%22%2C%22taskId%22%3A%22u3d680c3c-1e48-4409-9677-919e7af4961%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A411.2%2C%22height%22%3A219%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A122923%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1028%2C%22originHeight%22%3A548%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22HTML%20%3A%20%3CDIV%3E%20CONST%20G%20%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3EL%20%3C%2FDIV%3E%20%2F%2F%20COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%20CONST%20OBJ%20COMPILER(HTML)%20%E6%A0%91%E7%BB%93%E6%9E%84%E6%B8%B2%E6%9F%93%E5%88%B0%E9%A1%B5%E9%9D%A2%20RENDER%E5%B0%86DOM%20RENDER(OBJ%2C%20DOCUMENT.BODY)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A215.76907%2C%22y%22%3A78.2767%2C%22width%22%3A269.53983%2C%22height%22%3A35.78644%2C%22text%22%3A%22HTML%20%3A%20%3CDIV%3E%22%7D%2C%7B%22x%22%3A93.18044%2C%22y%22%3A83.672035%2C%22width%22%3A106.69935999999998%2C%22height%22%3A27.68306000000001%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A807.09705%2C%22y%22%3A108.465546%2C%22width%22%3A23.53035%2C%22height%22%3A28.329753999999994%2C%22text%22%3A%22G%22%7D%2C%7B%22x%22%3A140.19185%2C%22y%22%3A133.33702%2C%22width%22%3A507.01205%2C%22height%22%3A41.54596000000001%2C%22text%22%3A%22%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3EL%22%7D%2C%7B%22x%22%3A95.32455%2C%22y%22%3A192.15587%2C%22width%22%3A119.27005000000001%2C%22height%22%3A36.57817%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A84.835304%2C%22y%22%3A246.49176%2C%22width%22%3A547.8785660000001%2C%22height%22%3A45.63126%2C%22text%22%3A%22%2F%2F%20COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%22%7D%2C%7B%22x%22%3A92.530846%2C%22y%22%3A305.47598%2C%22width%22%3A525.273854%2C%22height%22%3A43.42029000000002%2C%22text%22%3A%22CONST%20OBJ%20COMPILER(HTML)%22%7D%2C%7B%22x%22%3A434.74524%2C%22y%22%3A365.9333%2C%22width%22%3A272.24872%2C%22height%22%3A35.60436000000004%2C%22text%22%3A%22%E6%A0%91%E7%BB%93%E6%9E%84%E6%B8%B2%E6%9F%93%E5%88%B0%E9%A1%B5%E9%9D%A2%22%7D%2C%7B%22x%22%3A154.57024%2C%22y%22%3A366.15475%2C%22width%22%3A263.29472%2C%22height%22%3A34.58475000000004%2C%22text%22%3A%22RENDER%E5%B0%86DOM%22%7D%2C%7B%22x%22%3A93.33522%2C%22y%22%3A423.30225%2C%22width%22%3A529.58922%2C%22height%22%3A36.76804999999996%2C%22text%22%3A%22RENDER(OBJ%2C%20DOCUMENT.BODY)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23292826%22%2C%22id%22%3A%22ub6362b65%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></h3><p data-lake-id="u2e3f2880" id="u2e3f2880"><br></p><h3 data-lake-id="nYUZb" id="nYUZb"><span data-lake-id="ua2a18e1b" id="ua2a18e1b">纯编译时框架，代表</span><code data-lake-id="u67b25415" id="u67b25415"><span data-lake-id="u4325b2e8" id="u4325b2e8">Svelte</span></code></h3><p data-lake-id="u226bf797" id="u226bf797"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2023%2Fpng%2F687303%2F1678589662546-775a4898-2509-4270-b499-ef24417b26d9.png%22%2C%22taskId%22%3A%22u4137e7b0-70cc-44ab-81b7-fb5e32da653%22%2C%22clientId%22%3A%22ua89f5714-a4bc-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A639.2%2C%22height%22%3A373%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A311966%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1598%2C%22originHeight%22%3A932%2C%22ratio%22%3A2.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%20ECONST%20HTML%20%E4%B8%89%20%3CDIV%3E%20%E7%BA%AF%E7%BC%96%E8%AF%91%E6%97%B6%20%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3E%20%3C%2FDIV%3E%20SVELTE%E4%B8%BA%E4%BB%A3%E8%A1%A8%20COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%20CONST%20OBJ%20-%20COMPILER(HTML%20%3A%E7%9B%B4%E6%8E%A5%E4%BA%A7%E5%87%BA%E5%A6%82%E4%B8%8B%E5%91%BD%E4%BB%A4%E5%BC%8F%E4%BB%A3%E7%A0%81%2C%E5%8F%AF%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%20DIV%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A%20DIV')%20CONST%20ST%20SPAN%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A'SPAN')%20CONST%20S%20SPAN.INNERTEXT%20%3B%20'HELLO%20WORLD'%20DIV.APPENDCHILD(SPAN)%20DOCUMENT.BODY.APPENDCHILD(DIV)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A94.023994%2C%22y%22%3A91.86297%2C%22width%22%3A434.456406%2C%22height%22%3A32.84384999999999%2C%22text%22%3A%22%20ECONST%20HTML%20%E4%B8%89%20%3CDIV%3E%22%7D%2C%7B%22x%22%3A886.67474%2C%22y%22%3A99.34816%2C%22width%22%3A258.34605999999997%2C%22height%22%3A67.22787000000001%2C%22text%22%3A%22%E7%BA%AF%E7%BC%96%E8%AF%91%E6%97%B6%22%7D%2C%7B%22x%22%3A189.02554%2C%22y%22%3A144.01158%2C%22width%22%3A484.26856%2C%22height%22%3A47.78065999999998%2C%22text%22%3A%22%3CSPAN%3EHELLO%20WORLD%3C%2FSPAN%3E%22%7D%2C%7B%22x%22%3A142.08865%2C%22y%22%3A203.41544%2C%22width%22%3A120.33908%2C%22height%22%3A36.76738%2C%22text%22%3A%22%3C%2FDIV%3E%22%7D%2C%7B%22x%22%3A832.7862%2C%22y%22%3A268.33463%2C%22width%22%3A368.50749999999994%2C%22height%22%3A63.81912%2C%22text%22%3A%22SVELTE%E4%B8%BA%E4%BB%A3%E8%A1%A8%22%7D%2C%7B%22x%22%3A198.30705%2C%22y%22%3A318.67038%2C%22width%22%3A496.33015%2C%22height%22%3A37.97271999999998%2C%22text%22%3A%22COMPILER%20%E7%BC%96%E8%AF%91%E5%BE%97%E5%88%B0%E6%A0%91%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%84%22%7D%2C%7B%22x%22%3A140.47012%2C%22y%22%3A377.34262%2C%22width%22%3A502.78028%2C%22height%22%3A36.835019999999986%2C%22text%22%3A%22CONST%20OBJ%20-%20COMPILER(HTML%22%7D%2C%7B%22x%22%3A282.317%2C%22y%22%3A434.4126%2C%22width%22%3A584.7707%2C%22height%22%3A35.503420000000006%2C%22text%22%3A%22%3A%E7%9B%B4%E6%8E%A5%E4%BA%A7%E5%87%BA%E5%A6%82%E4%B8%8B%E5%91%BD%E4%BB%A4%E5%BC%8F%E4%BB%A3%E7%A0%81%2C%E5%8F%AF%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%22%7D%2C%7B%22x%22%3A262.08304%2C%22y%22%3A492.06198%2C%22width%22%3A753.70376%2C%22height%22%3A37.71292%2C%22text%22%3A%22DIV%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A%22%7D%2C%7B%22x%22%3A1047.3872%2C%22y%22%3A493.5809%2C%22width%22%3A99.53890000000001%2C%22height%22%3A31.882599999999968%2C%22text%22%3A%22DIV')%22%7D%2C%7B%22x%22%3A141.46967%2C%22y%22%3A497.54288%2C%22width%22%3A103.97748999999999%2C%22height%22%3A26.965359999999976%2C%22text%22%3A%22CONST%22%7D%2C%7B%22x%22%3A211.93518%2C%22y%22%3A548.23724%2C%22width%22%3A975.2240200000001%2C%22height%22%3A45.39832000000001%2C%22text%22%3A%22ST%20SPAN%20-%20DOCUMENT.CREATEELEMENT(%20TAGNAME%3A'SPAN')%22%7D%2C%7B%22x%22%3A139.41412%2C%22y%22%3A555.3108%2C%22width%22%3A135.86247999999998%2C%22height%22%3A27.512299999999982%2C%22text%22%3A%22CONST%20S%22%7D%2C%7B%22x%22%3A140.5911%2C%22y%22%3A609.5929%2C%22width%22%3A605.1256%2C%22height%22%3A35.55280000000005%2C%22text%22%3A%22SPAN.INNERTEXT%20%3B%20'HELLO%20WORLD'%22%7D%2C%7B%22x%22%3A140.0389%2C%22y%22%3A663.234%2C%22width%22%3A424.11479999999995%2C%22height%22%3A38.63483999999994%2C%22text%22%3A%22DIV.APPENDCHILD(SPAN)%22%7D%2C%7B%22x%22%3A139.94%2C%22y%22%3A720.7031%2C%22width%22%3A611.9573399999999%2C%22height%22%3A38.51705000000004%2C%22text%22%3A%22DOCUMENT.BODY.APPENDCHILD(DIV)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23575453%22%2C%22id%22%3A%22uc02af96e%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u8fa0ff9a" id="u8fa0ff9a"><br></p><h2 data-lake-id="uxe4m" id="uxe4m"><span data-lake-id="ua24cef16" id="ua24cef16">4、原生JS操作DOM、InnerHTML 与 虚拟DOM 快慢对比</span></h2><p data-lake-id="uf8b229a0" id="uf8b229a0"><span data-lake-id="u108ef488" id="u108ef488">可从以下三个方面来度量</span></p><ul list="u4cae8d47"><li fid="ue619c4be" data-lake-id="u2bf21b9e" id="u2bf21b9e"><span data-lake-id="u4591c0c2" id="u4591c0c2">理解成本上，</span><strong><u><span data-lake-id="u2a0229b9" id="u2a0229b9">原生JS操作DOM &gt;   InnerHTML &gt;  虚拟DOM</span></u></strong></li><li fid="ue619c4be" data-lake-id="uad4d6f7f" id="uad4d6f7f"><span data-lake-id="u615789fc" id="u615789fc">维护性上，</span><strong><u><span data-lake-id="u621b2b35" id="u621b2b35">原生JS操作DOM 、  InnerHTML  &lt;  虚拟DOM</span></u></strong></li><li fid="ue619c4be" data-lake-id="ue305b861" id="ue305b861"><span data-lake-id="u279418de" id="u279418de">性能上，取决于</span><code data-lake-id="ub06218cc" id="ub06218cc"><span data-lake-id="ub806f983" id="ub806f983">页面大小</span></code><span data-lake-id="ua4bf3bd1" id="ua4bf3bd1">，</span><code data-lake-id="u94b113cd" id="u94b113cd"><span data-lake-id="ua3cf5601" id="ua3cf5601">页面变更大小，</span></code><span data-lake-id="u25f192bc" id="u25f192bc">是</span><code data-lake-id="uaf682f03" id="uaf682f03"><span data-lake-id="u48304dfa" id="u48304dfa">新建页面</span></code><span data-lake-id="u6244b641" id="u6244b641"> 还是</span><code data-lake-id="ua71bfd82" id="ua71bfd82"><span data-lake-id="ua509a67d" id="ua509a67d"> 更新页</span></code><span data-lake-id="u38a57753" id="u38a57753">面 甚至是</span><code data-lake-id="u7a191a26" id="u7a191a26"><span data-lake-id="ud2c82f0f" id="ud2c82f0f">更新策略</span></code><span data-lake-id="ub3d50129" id="ub3d50129">等，都有关系，不同场景下有不同结论。</span></li></ul><p data-lake-id="ucd040c7e" id="ucd040c7e"><br></p><h2 data-lake-id="bCYeV" id="bCYeV"><span data-lake-id="u7145290e" id="u7145290e">5、最后</span></h2><p data-lake-id="u120cbad4" id="u120cbad4"><span data-lake-id="u25236418" id="u25236418">无论是</span><code data-lake-id="u32882d94" id="u32882d94"><span data-lake-id="uc02183f2" id="uc02183f2">命令式</span></code><span data-lake-id="u3fe84206" id="u3fe84206">还</span><code data-lake-id="u241d2edf" id="u241d2edf"><span data-lake-id="u2dff6e4e" id="u2dff6e4e">是声明式</span></code><span data-lake-id="ue36429d0" id="ue36429d0">，或者框架需要设计成</span><code data-lake-id="u7fb45e1f" id="u7fb45e1f"><span data-lake-id="uf2b4defd" id="uf2b4defd">运行时</span></code><span data-lake-id="u9ba51878" id="u9ba51878">、</span><code data-lake-id="ue111b0db" id="ue111b0db"><span data-lake-id="uc1996240" id="uc1996240">编译时</span></code><span data-lake-id="u9a7c8f47" id="u9a7c8f47">或</span><code data-lake-id="u0620cead" id="u0620cead"><span data-lake-id="u97268f9e" id="u97268f9e">运行时+编译时</span></code><span data-lake-id="u27ac6128" id="u27ac6128">，都需要结合 </span><code data-lake-id="u5a3b9b6e" id="u5a3b9b6e"><span data-lake-id="uf5435d4a" id="uf5435d4a">性能</span></code><span data-lake-id="ua3b4dbe7" id="ua3b4dbe7">、</span><code data-lake-id="u8877aebc" id="u8877aebc"><span data-lake-id="u3fbf96fc" id="u3fbf96fc">理解成本</span></code><span data-lake-id="u5ae757f6" id="u5ae757f6">、</span><code data-lake-id="u8ec5ea6f" id="u8ec5ea6f"><span data-lake-id="uc553c186" id="uc553c186">维护性</span></code><span data-lake-id="ub2c1abc9" id="ub2c1abc9">上做权衡选择。</span></p><h2 data-lake-id="J0gU5" id="J0gU5"><span data-lake-id="u730fec6e" id="u730fec6e">参考</span></h2><ul list="uc4e601d6"><li fid="u7f99def1" data-lake-id="u06d2d113" id="u06d2d113"><span data-lake-id="u634a8396" id="u634a8396">《Vue.js设计与实现》</span></li></ul>`,public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-17T10:16:47.000Z",deleted_at:null,created_at:"2023-03-12T02:25:05.000Z",updated_at:"2023-03-19T11:28:12.000Z",published_at:"2023-03-17T10:16:47.000Z",first_published_at:"2023-03-12T02:27:03.586Z",word_count:385,cover:"https://cdn.nlark.com/yuque/0/2023/png/687303/1678589228768-04c11b29-55f9-49a2-a750-9911ccf56ee1.png",description:'前端框架设计里的 权衡 与 选择1、命令式框架与声明式框架Jquery 就是典型的 命令式框架，关注过程Vue 暴露给用户使用的是 声明式 ，但底层内部实现肯定也是 命令式 ，如下示例：面向用户的是声明式的<template>   <div @click="hello()"></div> </...',custom_description:null,hits:0,_serializer:"v2.doc_detail"},{id:117563051,slug:"lrw0ogxz251sbto3",title:"0001.AL.斐波那契数列",book_id:36687938,book:{id:36687938,type:"Book",slug:"blog",name:"blog",user_id:687303,description:"liguwe.site",creator_id:687303,public:1,items_count:8,likes_count:0,watches_count:0,content_updated_at:"2023-03-19T11:44:46.829Z",updated_at:"2023-03-19T11:44:47.000Z",created_at:"2023-03-11T03:13:50.000Z",namespace:"liguwe/blog",user:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},_serializer:"v2.book"},user_id:687303,creator:{id:687303,type:"User",login:"liguwe",name:"liguwe",description:"liguwe's blog",avatar_url:"https://cdn.nlark.com/yuque/0/2019/jpeg/anonymous/1576742181690-f84f2cfb-31cd-4c3b-87b1-2e055b3f06a9.jpeg",books_count:13,public_books_count:0,followers_count:1,following_count:20,created_at:"2019-12-19T07:56:58.000Z",updated_at:"2023-03-19T11:27:03.000Z",_serializer:"v2.user"},format:"lake",body:`<a name="Eha94"></a>
# 斐波那契数列
> - https://leetcode.cn/problems/fibonacci-number

<a name="tbzR4"></a>
## 1、暴力递归
\`\`\`typescript
/*************************************************
 * ::::斐波那契数列 https://leetcode.cn/problems/fibonacci-number/
 ************************************************/


/*************************************************
 * ::::第一种解法：暴力递归
 * 复杂度： O(n^2)
 ************************************************/
/**
 * @param {number} n
 * @return {number}
 */
var fib = function (n) {
    if (n === 0) return 0;
    if (n === 1) return 1;
    return fib(n - 1) + fib(n - 2);
};

\`\`\`
算法复杂度\`O(2^n)\` 指数级别，爆炸，因为有\`**重叠子问题**\`<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/687303/1653387978842-556435f9-60f1-4a02-8076-0f4bdccd0a5f.png#averageHue=%23f5f4f1&clientId=u652a6e99-c1c9-4&from=paste&height=277&id=ufec9047d&name=image.png&originHeight=638&originWidth=1182&originalType=binary&ratio=1&rotation=0&showTitle=false&size=776250&status=done&style=stroke&taskId=ua184fe36-1c8f-4c4a-86f4-0643a0d0eba&title=&width=513.2687683105469)
<a name="HwaZt"></a>
## 2、【自顶向下】带备忘录的递归算法
\`\`\`typescript
/*************************************************
 * ::::解决重叠子问题 - 带备忘录的递归解法
 * // ::::【自顶向下】的思路
 * 算法的时间复杂度是 O(n) ，空间复杂度O(n)
 ************************************************/
var fib1 = function (n) {
    // 备忘录全初始化为 0
    let memo = new Array(n + 1).fill(0);
    // ::::注意，这里利用了闭包，把memo传入，能够保证不销毁
    // 进行带备忘录的递归
    return dp(memo, n);
};

// 带着备忘录进行递归
var dp = function (memo, n) {
    // base case
    if (n === 0 || n === 1) return n;
    // 已经计算过，不用再计算了
    if (memo[n] !== 0) return memo[n];
    // 否则，重新计算，并且存到memo中
    // ::::这里利用了闭包，把memo传入
    memo[n] = dp(memo, n - 1) + dp(memo, n - 2);
    return memo[n];
};
\`\`\`
算法的时间复杂度是\` O(n)\` ，空间复杂度\`O(n)\`<br />**如下图**<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/687303/1653388428954-4d6c0c35-1d35-421b-a8f7-c137e30c919a.png#averageHue=%23fbfbfa&clientId=u652a6e99-c1c9-4&from=paste&height=470&id=u72934bdd&name=image.png&originHeight=1172&originWidth=2382&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1328714&status=done&style=stroke&taskId=u0e21e806-2b7b-4009-8cc6-45cac29efd5&title=&width=956)

<a name="cvPeb"></a>
## 3、【自低向上】dp 数组的迭代（递推）解法
\`\`\`typescript
/*************************************************
 * ::::解法3： DP table 【自低向上】dp 数组的迭代（递推）解法
 * // ::::所谓 【自低向上】 即 推倒过程，从0，1 推倒出 f(2)等
 * 算法的时间复杂度是 O(n) ，空间复杂度O(n)
 ************************************************/
var fib3 = function (N) {
    if (N === 0) return 0;
    let dp = new Array(N + 1).fill(0);
    // base case
    dp[0] = 0;
    dp[1] = 1;
    //// ::::状态转移方程
    for (let i = 2; i <= N; i++) {
        dp[i] = dp[i - 1] + dp[i - 2];
    }
    return dp[N];
}
\`\`\`
算法的时间复杂度是\` O(n)\` ，空间复杂度\`O(n)\` 

其实，就是\`转态转移方程\`的实现，如下：

![image.png](https://cdn.nlark.com/yuque/0/2022/png/687303/1653388772791-7c595318-4e71-453a-850f-eefa738e1a06.png#averageHue=%23efeae3&clientId=u652a6e99-c1c9-4&from=paste&height=180&id=ud09b0497&name=image.png&originHeight=516&originWidth=1058&originalType=binary&ratio=1&rotation=0&showTitle=false&size=263976&status=done&style=stroke&taskId=u434b0a9a-1dae-4a5a-bd7f-3657fdc302d&title=&width=368.90765380859375)
<a name="DaIOg"></a>
## 4、空间复杂度降为 O(1)
\`\`\`typescript
/*************************************************
 * ::::解法4： 进一步优化，把二维的dp table 压成一维的,即只要维护两个变量 prev  curr
 ************************************************/
var fib4 = function (n) {
    if (n === 0 || n === 1) return n;
    let prev = 1, curr = 1;
    for (let i = 2; i < n; i++) {
        let sum = prev + curr;
        prev = curr;
        curr = sum;
    }
    return curr;
}
\`\`\`

`,body_draft:`<a name="Eha94"></a>
# 斐波那契数列
> - https://leetcode.cn/problems/fibonacci-number

<a name="tbzR4"></a>
## 1、暴力递归
\`\`\`typescript
/*************************************************
 * ::::斐波那契数列 https://leetcode.cn/problems/fibonacci-number/
 ************************************************/


/*************************************************
 * ::::第一种解法：暴力递归
 * 复杂度： O(n^2)
 ************************************************/
/**
 * @param {number} n
 * @return {number}
 */
var fib = function (n) {
    if (n === 0) return 0;
    if (n === 1) return 1;
    return fib(n - 1) + fib(n - 2);
};

\`\`\`
算法复杂度\`O(2^n)\` 指数级别，爆炸，因为有\`**重叠子问题**\`<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/687303/1653387978842-556435f9-60f1-4a02-8076-0f4bdccd0a5f.png#averageHue=%23f5f4f1&clientId=u652a6e99-c1c9-4&from=paste&height=277&id=ufec9047d&name=image.png&originHeight=638&originWidth=1182&originalType=binary&ratio=1&rotation=0&showTitle=false&size=776250&status=done&style=stroke&taskId=ua184fe36-1c8f-4c4a-86f4-0643a0d0eba&title=&width=513.2687683105469)
<a name="HwaZt"></a>
## 2、【自顶向下】带备忘录的递归算法
\`\`\`typescript
/*************************************************
 * ::::解决重叠子问题 - 带备忘录的递归解法
 * // ::::【自顶向下】的思路
 * 算法的时间复杂度是 O(n) ，空间复杂度O(n)
 ************************************************/
var fib1 = function (n) {
    // 备忘录全初始化为 0
    let memo = new Array(n + 1).fill(0);
    // ::::注意，这里利用了闭包，把memo传入，能够保证不销毁
    // 进行带备忘录的递归
    return dp(memo, n);
};

// 带着备忘录进行递归
var dp = function (memo, n) {
    // base case
    if (n === 0 || n === 1) return n;
    // 已经计算过，不用再计算了
    if (memo[n] !== 0) return memo[n];
    // 否则，重新计算，并且存到memo中
    // ::::这里利用了闭包，把memo传入
    memo[n] = dp(memo, n - 1) + dp(memo, n - 2);
    return memo[n];
};
\`\`\`
算法的时间复杂度是\` O(n)\` ，空间复杂度\`O(n)\`<br />**如下图**<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/687303/1653388428954-4d6c0c35-1d35-421b-a8f7-c137e30c919a.png#averageHue=%23fbfbfa&clientId=u652a6e99-c1c9-4&from=paste&height=470&id=u72934bdd&name=image.png&originHeight=1172&originWidth=2382&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1328714&status=done&style=stroke&taskId=u0e21e806-2b7b-4009-8cc6-45cac29efd5&title=&width=956)

<a name="cvPeb"></a>
## 3、【自低向上】dp 数组的迭代（递推）解法
\`\`\`typescript
/*************************************************
 * ::::解法3： DP table 【自低向上】dp 数组的迭代（递推）解法
 * // ::::所谓 【自低向上】 即 推倒过程，从0，1 推倒出 f(2)等
 * 算法的时间复杂度是 O(n) ，空间复杂度O(n)
 ************************************************/
var fib3 = function (N) {
    if (N === 0) return 0;
    let dp = new Array(N + 1).fill(0);
    // base case
    dp[0] = 0;
    dp[1] = 1;
    //// ::::状态转移方程
    for (let i = 2; i <= N; i++) {
        dp[i] = dp[i - 1] + dp[i - 2];
    }
    return dp[N];
}
\`\`\`
算法的时间复杂度是\` O(n)\` ，空间复杂度\`O(n)\` 

其实，就是\`转态转移方程\`的实现，如下：

![image.png](https://cdn.nlark.com/yuque/0/2022/png/687303/1653388772791-7c595318-4e71-453a-850f-eefa738e1a06.png#averageHue=%23efeae3&clientId=u652a6e99-c1c9-4&from=paste&height=180&id=ud09b0497&name=image.png&originHeight=516&originWidth=1058&originalType=binary&ratio=1&rotation=0&showTitle=false&size=263976&status=done&style=stroke&taskId=u434b0a9a-1dae-4a5a-bd7f-3657fdc302d&title=&width=368.90765380859375)
<a name="DaIOg"></a>
## 4、空间复杂度降为 O(1)
\`\`\`typescript
/*************************************************
 * ::::解法4： 进一步优化，把二维的dp table 压成一维的,即只要维护两个变量 prev  curr
 ************************************************/
var fib4 = function (n) {
    if (n === 0 || n === 1) return n;
    let prev = 1, curr = 1;
    for (let i = 2; i < n; i++) {
        let sum = prev + curr;
        prev = curr;
        curr = sum;
    }
    return curr;
}
\`\`\`

`,body_html:`<!doctype html><div class="lake-content" typography="classic"><h1 id="Eha94"><span class="ne-text">斐波那契数列</span></h1><div class="ne-quote"><ul class="ne-ul"><li id="u498539b6"><span class="ne-text">https://leetcode.cn/problems/fibonacci-number</span></li></ul></div><h2 id="tbzR4"><span class="ne-text">1、暴力递归</span></h2><pre data-language="typescript" id="W1bEt" class="ne-codeblock language-typescript">/*************************************************
 * ::::斐波那契数列 https://leetcode.cn/problems/fibonacci-number/
 ************************************************/


/*************************************************
 * ::::第一种解法：暴力递归
 * 复杂度： O(n^2)
 ************************************************/
/**
 * @param {number} n
 * @return {number}
 */
var fib = function (n) {
    if (n === 0) return 0;
    if (n === 1) return 1;
    return fib(n - 1) + fib(n - 2);
};
</pre><p id="u7dcff2c0" class="ne-p"><span class="ne-text">算法复杂度</span><code class="ne-code"><span class="ne-text" style="color: rgb(50, 50, 50); font-size: 16px">O(2^n)</span></code><span class="ne-text" style="color: rgb(50, 50, 50); font-size: 16px"> </span><span class="ne-text">指数级别，爆炸，因为有</span><code class="ne-code"><strong><span class="ne-text">重叠子问题</span></strong></code></p><p id="ue4f21c01" class="ne-p"><img src="https://cdn.nlark.com/yuque/0/2022/png/687303/1653387978842-556435f9-60f1-4a02-8076-0f4bdccd0a5f.png" width="513.2687683105469" id="ufec9047d" class="ne-image"></p><h2 id="HwaZt"><span class="ne-text">2、【自顶向下】带备忘录的递归算法</span></h2><pre data-language="typescript" id="shxRe" class="ne-codeblock language-typescript">/*************************************************
 * ::::解决重叠子问题 - 带备忘录的递归解法
 * // ::::【自顶向下】的思路
 * 算法的时间复杂度是 O(n) ，空间复杂度O(n)
 ************************************************/
var fib1 = function (n) {
    // 备忘录全初始化为 0
    let memo = new Array(n + 1).fill(0);
    // ::::注意，这里利用了闭包，把memo传入，能够保证不销毁
    // 进行带备忘录的递归
    return dp(memo, n);
};

// 带着备忘录进行递归
var dp = function (memo, n) {
    // base case
    if (n === 0 || n === 1) return n;
    // 已经计算过，不用再计算了
    if (memo[n] !== 0) return memo[n];
    // 否则，重新计算，并且存到memo中
    // ::::这里利用了闭包，把memo传入
    memo[n] = dp(memo, n - 1) + dp(memo, n - 2);
    return memo[n];
};</pre><p id="u7cf1e82d" class="ne-p"><span class="ne-text">算法的时间复杂度是</span><code class="ne-code"><span class="ne-text"> O(n)</span></code><span class="ne-text"> ，空间复杂度</span><code class="ne-code"><span class="ne-text">O(n)</span></code></p><p id="u8e9cd47c" class="ne-p"><strong><span class="ne-text">如下图</span></strong></p><p id="u48f61ccd" class="ne-p"><img src="https://cdn.nlark.com/yuque/0/2022/png/687303/1653388428954-4d6c0c35-1d35-421b-a8f7-c137e30c919a.png" width="956" id="u72934bdd" class="ne-image"></p><p id="u0c68417f" class="ne-p"><br></p><h2 id="cvPeb"><span class="ne-text">3、【自低向上】dp 数组的迭代（递推）解法</span></h2><pre data-language="typescript" id="tM7HL" class="ne-codeblock language-typescript">/*************************************************
 * ::::解法3： DP table 【自低向上】dp 数组的迭代（递推）解法
 * // ::::所谓 【自低向上】 即 推倒过程，从0，1 推倒出 f(2)等
 * 算法的时间复杂度是 O(n) ，空间复杂度O(n)
 ************************************************/
var fib3 = function (N) {
    if (N === 0) return 0;
    let dp = new Array(N + 1).fill(0);
    // base case
    dp[0] = 0;
    dp[1] = 1;
    //// ::::状态转移方程
    for (let i = 2; i &lt;= N; i++) {
        dp[i] = dp[i - 1] + dp[i - 2];
    }
    return dp[N];
}</pre><p id="u13e5739c" class="ne-p"><span class="ne-text">算法的时间复杂度是</span><code class="ne-code"><span class="ne-text"> O(n)</span></code><span class="ne-text"> ，空间复杂度</span><code class="ne-code"><span class="ne-text">O(n)</span></code><span class="ne-text"> </span></p><p id="udff00ccf" class="ne-p"><span class="ne-text"></span></p><p id="ucdb7b983" class="ne-p"><span class="ne-text">其实，就是</span><code class="ne-code"><span class="ne-text">转态转移方程</span></code><span class="ne-text">的实现，如下：</span></p><p id="u6ed5633d" class="ne-p"><br></p><p id="ub0b53016" class="ne-p"><img src="https://cdn.nlark.com/yuque/0/2022/png/687303/1653388772791-7c595318-4e71-453a-850f-eefa738e1a06.png" width="368.90765380859375" id="ud09b0497" class="ne-image"></p><h2 id="DaIOg"><span class="ne-text">4、空间复杂度降为 O(1)</span></h2><pre data-language="typescript" id="NCiy3" class="ne-codeblock language-typescript">/*************************************************
 * ::::解法4： 进一步优化，把二维的dp table 压成一维的,即只要维护两个变量 prev  curr
 ************************************************/
var fib4 = function (n) {
    if (n === 0 || n === 1) return n;
    let prev = 1, curr = 1;
    for (let i = 2; i &lt; n; i++) {
        let sum = prev + curr;
        prev = curr;
        curr = sum;
    }
    return curr;
}</pre><p id="uc2960187" class="ne-p"><br></p></div>`,body_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="Eha94" id="Eha94"><span data-lake-id="u343f78b0" id="u343f78b0">斐波那契数列</span></h1><blockquote data-lake-id="uf22a6cd8" id="uf22a6cd8"><ul list="ue9f9e9f5"><li fid="uf3a47320" data-lake-id="u498539b6" id="u498539b6"><span data-lake-id="u1b706ee1" id="u1b706ee1">https://leetcode.cn/problems/fibonacci-number</span></li></ul></blockquote><h2 data-lake-id="tbzR4" id="tbzR4"><span data-lake-id="u220ec4d4" id="u220ec4d4">1、暴力递归</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%20https%3A%2F%2Fleetcode.cn%2Fproblems%2Ffibonacci-number%2F%5Cn%20************************************************%2F%5Cn%5Cn%5Cn%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E7%AC%AC%E4%B8%80%E7%A7%8D%E8%A7%A3%E6%B3%95%EF%BC%9A%E6%9A%B4%E5%8A%9B%E9%80%92%E5%BD%92%5Cn%20*%20%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9A%20O(n%5E2)%5Cn%20************************************************%2F%5Cn%2F**%5Cn%20*%20%40param%20%7Bnumber%7D%20n%5Cn%20*%20%40return%20%7Bnumber%7D%5Cn%20*%2F%5Cnvar%20fib%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%200)%20return%200%3B%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%201)%20return%201%3B%5Cn%20%20%20%20return%20fib(n%20-%201)%20%2B%20fib(n%20-%202)%3B%5Cn%7D%3B%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22W1bEt%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u7dcff2c0" id="u7dcff2c0"><span data-lake-id="u82887237" id="u82887237">算法复杂度</span><code data-lake-id="u893dca5d" id="u893dca5d"><span data-lake-id="u8c5c2517" id="u8c5c2517" class="lake-fontsize-12" style="color: rgb(50, 50, 50)">O(2^n)</span></code><span data-lake-id="u74205728" id="u74205728" class="lake-fontsize-12" style="color: rgb(50, 50, 50)"> </span><span data-lake-id="u3097114f" id="u3097114f">指数级别，爆炸，因为有</span><code data-lake-id="u80316504" id="u80316504"><strong><span data-lake-id="u259a1006" id="u259a1006">重叠子问题</span></strong></code></p><p data-lake-id="ue4f21c01" id="ue4f21c01"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F687303%2F1653387978842-556435f9-60f1-4a02-8076-0f4bdccd0a5f.png%22%2C%22taskId%22%3A%22ua184fe36-1c8f-4c4a-86f4-0643a0d0eba%22%2C%22clientId%22%3A%22u652a6e99-c1c9-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A513.2687683105469%2C%22height%22%3A277%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A776250%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1182%2C%22originHeight%22%3A638%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22stroke%22%2C%22search%22%3A%22F(20)%20ULADONG%20F(19)%20F(18)%20JABULADONG%20F(17)%20F(17)%20F(18)%20F(16))%20LABULADONG%20F(2)%20F(1)%20F(2)%20F(1)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A602.56146%2C%22y%22%3A58.20098%2C%22width%22%3A85.69988999999998%2C%22height%22%3A33.11399%2C%22text%22%3A%22F(20)%22%7D%2C%7B%22x%22%3A885.82056%2C%22y%22%3A37.727093%2C%22width%22%3A161.67104000000006%2C%22height%22%3A108.58615700000001%2C%22text%22%3A%22ULADONG%22%7D%2C%7B%22x%22%3A319.12704%2C%22y%22%3A160.35815%2C%22width%22%3A88.29183999999998%2C%22height%22%3A45.792820000000006%2C%22text%22%3A%22F(19)%22%7D%2C%7B%22x%22%3A883.5569%2C%22y%22%3A168.1375%2C%22width%22%3A81.66210000000001%2C%22height%22%3A35.97284000000002%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A38.007473%2C%22y%22%3A128.3117%2C%22width%22%3A225.148597%2C%22height%22%3A155.19102%2C%22text%22%3A%22JABULADONG%22%7D%2C%7B%22x%22%3A485.8917%2C%22y%22%3A295.63824%2C%22width%22%3A84.86775999999998%2C%22height%22%3A38.48086000000001%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A710.0131%2C%22y%22%3A297.01898%2C%22width%22%3A90.25325999999995%2C%22height%22%3A40.95776999999998%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A149.98094%2C%22y%22%3A296.8287%2C%22width%22%3A82.80071000000001%2C%22height%22%3A33.863399999999956%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A1046.3545%2C%22y%22%3A298.05286%2C%22width%22%3A96.27310000000011%2C%22height%22%3A43.47334000000001%2C%22text%22%3A%22F(16))%22%7D%2C%7B%22x%22%3A757.81537%2C%22y%22%3A421.17065%2C%22width%22%3A234.11028999999996%2C%22height%22%3A156.71697999999992%2C%22text%22%3A%22LABULADONG%22%7D%2C%7B%22x%22%3A573.97644%2C%22y%22%3A547.92737%2C%22width%22%3A81.14832000000001%2C%22height%22%3A42.99992999999995%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A409.73602%2C%22y%22%3A552.2299%2C%22width%22%3A71.57895000000002%2C%22height%22%3A42.708639999999946%2C%22text%22%3A%22F(1)%22%7D%2C%7B%22x%22%3A237.28067%2C%22y%22%3A553.0803%2C%22width%22%3A77.99463000000003%2C%22height%22%3A39.52240000000006%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A70.6733%2C%22y%22%3A554.4615%2C%22width%22%3A73.93801%2C%22height%22%3A40.146960000000036%2C%22text%22%3A%22F(1)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f5f4f1%22%2C%22id%22%3A%22ufec9047d%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="HwaZt" id="HwaZt"><span data-lake-id="uff41c115" id="uff41c115">2、【自顶向下】带备忘录的递归算法</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E8%A7%A3%E5%86%B3%E9%87%8D%E5%8F%A0%E5%AD%90%E9%97%AE%E9%A2%98%20-%20%E5%B8%A6%E5%A4%87%E5%BF%98%E5%BD%95%E7%9A%84%E9%80%92%E5%BD%92%E8%A7%A3%E6%B3%95%5Cn%20*%20%2F%2F%20%3A%3A%3A%3A%E3%80%90%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E3%80%91%E7%9A%84%E6%80%9D%E8%B7%AF%5Cn%20*%20%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AF%20O(n)%20%EF%BC%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6O(n)%5Cn%20************************************************%2F%5Cnvar%20fib1%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20%2F%2F%20%E5%A4%87%E5%BF%98%E5%BD%95%E5%85%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%200%5Cn%20%20%20%20let%20memo%20%3D%20new%20Array(n%20%2B%201).fill(0)%3B%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E6%B3%A8%E6%84%8F%EF%BC%8C%E8%BF%99%E9%87%8C%E5%88%A9%E7%94%A8%E4%BA%86%E9%97%AD%E5%8C%85%EF%BC%8C%E6%8A%8Amemo%E4%BC%A0%E5%85%A5%EF%BC%8C%E8%83%BD%E5%A4%9F%E4%BF%9D%E8%AF%81%E4%B8%8D%E9%94%80%E6%AF%81%5Cn%20%20%20%20%2F%2F%20%E8%BF%9B%E8%A1%8C%E5%B8%A6%E5%A4%87%E5%BF%98%E5%BD%95%E7%9A%84%E9%80%92%E5%BD%92%5Cn%20%20%20%20return%20dp(memo%2C%20n)%3B%5Cn%7D%3B%5Cn%5Cn%2F%2F%20%E5%B8%A6%E7%9D%80%E5%A4%87%E5%BF%98%E5%BD%95%E8%BF%9B%E8%A1%8C%E9%80%92%E5%BD%92%5Cnvar%20dp%20%3D%20function%20(memo%2C%20n)%20%7B%5Cn%20%20%20%20%2F%2F%20base%20case%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%200%20%7C%7C%20n%20%3D%3D%3D%201)%20return%20n%3B%5Cn%20%20%20%20%2F%2F%20%E5%B7%B2%E7%BB%8F%E8%AE%A1%E7%AE%97%E8%BF%87%EF%BC%8C%E4%B8%8D%E7%94%A8%E5%86%8D%E8%AE%A1%E7%AE%97%E4%BA%86%5Cn%20%20%20%20if%20(memo%5Bn%5D%20!%3D%3D%200)%20return%20memo%5Bn%5D%3B%5Cn%20%20%20%20%2F%2F%20%E5%90%A6%E5%88%99%EF%BC%8C%E9%87%8D%E6%96%B0%E8%AE%A1%E7%AE%97%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AD%98%E5%88%B0memo%E4%B8%AD%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E8%BF%99%E9%87%8C%E5%88%A9%E7%94%A8%E4%BA%86%E9%97%AD%E5%8C%85%EF%BC%8C%E6%8A%8Amemo%E4%BC%A0%E5%85%A5%5Cn%20%20%20%20memo%5Bn%5D%20%3D%20dp(memo%2C%20n%20-%201)%20%2B%20dp(memo%2C%20n%20-%202)%3B%5Cn%20%20%20%20return%20memo%5Bn%5D%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22shxRe%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u7cf1e82d" id="u7cf1e82d"><span data-lake-id="u4ddac9f2" id="u4ddac9f2">算法的时间复杂度是</span><code data-lake-id="ucce13f7d" id="ucce13f7d"><span data-lake-id="u120eaedf" id="u120eaedf"> O(n)</span></code><span data-lake-id="ufcf53d87" id="ufcf53d87"> ，空间复杂度</span><code data-lake-id="u1fb99d99" id="u1fb99d99"><span data-lake-id="ud21dfe73" id="ud21dfe73">O(n)</span></code></p><p data-lake-id="u8e9cd47c" id="u8e9cd47c"><strong><span data-lake-id="ub96b9f14" id="ub96b9f14">如下图</span></strong></p><p data-lake-id="u48f61ccd" id="u48f61ccd"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F687303%2F1653388428954-4d6c0c35-1d35-421b-a8f7-c137e30c919a.png%22%2C%22taskId%22%3A%22u0e21e806-2b7b-4009-8cc6-45cac29efd5%22%2C%22clientId%22%3A%22u652a6e99-c1c9-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A956%2C%22height%22%3A470%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1328714%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A2382%2C%22originHeight%22%3A1172%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22stroke%22%2C%22search%22%3A%22F(20)%20%E5%89%AA%E6%9E%9D%20F(20))%20%3EF(19)%5D%20%3EF(18))%2C%2B(17)%20F(2)%20F(1)%20F(19)%20F(18)%20F(16)%20F(17)%20F(17)%20F(18)%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%20F(17)%20F(16)%20F(16)%20F(15)%20F(18)%20F(19)%20F(20)%20F(1)%20F(2)%20F(3)%202%2039%2020%2018%201%200%20INDEX%20DP%201%200%202%202584%204181%7C6765%20%E7%A9%BA%E7%9D%80%E4%B8%8D%E7%94%A8%20%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%20BULADONG%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A540.9178%2C%22y%22%3A154.54541%2C%22width%22%3A66.63914999999997%2C%22height%22%3A28.484129999999993%2C%22text%22%3A%22F(20)%22%7D%2C%7B%22x%22%3A1132.3682%2C%22y%22%3A170.54472%2C%22width%22%3A74.55170000000021%2C%22height%22%3A38.14381999999998%2C%22text%22%3A%22%E5%89%AA%E6%9E%9D%22%7D%2C%7B%22x%22%3A1437.1819%2C%22y%22%3A198.99492%2C%22width%22%3A452.5311999999999%2C%22height%22%3A38.37111999999999%2C%22text%22%3A%22F(20))%20%3EF(19)%5D%20%3EF(18))%2C%2B(17)%22%7D%2C%7B%22x%22%3A2063.0642%2C%22y%22%3A208.20622%2C%22width%22%3A65.05780000000004%2C%22height%22%3A36.388090000000005%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A2185.5747%2C%22y%22%3A208.71098%2C%22width%22%3A58.26330000000007%2C%22height%22%3A33.755390000000006%2C%22text%22%3A%22F(1)%22%7D%2C%7B%22x%22%3A325.76324%2C%22y%22%3A235.94708%2C%22width%22%3A70.32126%2C%22height%22%3A31.866850000000028%2C%22text%22%3A%22F(19)%22%7D%2C%7B%22x%22%3A752.60077%2C%22y%22%3A237.50089%2C%22width%22%3A61.27886999999998%2C%22height%22%3A31.225670000000008%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A872.2939%2C%22y%22%3A331.95758%2C%22width%22%3A71.99704999999994%2C%22height%22%3A37.97582%2C%22text%22%3A%22F(16)%22%7D%2C%7B%22x%22%3A451.62103%2C%22y%22%3A332.2832%2C%22width%22%3A70.79827%2C%22height%22%3A33.55196999999998%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A619.8376%2C%22y%22%3A333.91608%2C%22width%22%3A69.35360000000003%2C%22height%22%3A33.34091999999998%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A198.13295%2C%22y%22%3A333.85626%2C%22width%22%3A67.24937%2C%22height%22%3A27.967709999999954%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A1756.0726%2C%22y%22%3A369.61404%2C%22width%22%3A180.3954000000001%2C%22height%22%3A48.29090000000002%2C%22text%22%3A%22%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%22%7D%2C%7B%22x%22%3A136.34775%2C%22y%22%3A470.14334%2C%22width%22%3A65.65277%2C%22height%22%3A32.54571999999996%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A267.17322%2C%22y%22%3A471.0412%2C%22width%22%3A68.60888%2C%22height%22%3A33.07637999999997%2C%22text%22%3A%22F(16)%22%7D%2C%7B%22x%22%3A384.70993%2C%22y%22%3A474.4189%2C%22width%22%3A66.01285000000001%2C%22height%22%3A29.20598000000001%2C%22text%22%3A%22F(16)%22%7D%2C%7B%22x%22%3A521.97174%2C%22y%22%3A470.99698%2C%22width%22%3A67.33893%2C%22height%22%3A31.889560000000017%2C%22text%22%3A%22F(15)%22%7D%2C%7B%22x%22%3A1984.4673%2C%22y%22%3A732.9523%2C%22width%22%3A239.70529999999985%2C%22height%22%3A31.928739999999948%2C%22text%22%3A%22F(18)%20F(19)%20F(20)%22%7D%2C%7B%22x%22%3A1649.9146%2C%22y%22%3A733.63367%2C%22width%22%3A55.33739999999989%2C%22height%22%3A34.93782999999996%2C%22text%22%3A%22F(1)%22%7D%2C%7B%22x%22%3A1730.7638%2C%22y%22%3A734.0249%2C%22width%22%3A64.2482%2C%22height%22%3A32.231700000000046%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A1825.9364%2C%22y%22%3A734.1151%2C%22width%22%3A61.07680000000005%2C%22height%22%3A30.837999999999965%2C%22text%22%3A%22F(3)%22%7D%2C%7B%22x%22%3A1749.0444%2C%22y%22%3A794.1478%2C%22width%22%3A27.296100000000024%2C%22height%22%3A38.675260000000094%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A2036.013%2C%22y%22%3A795.4731%2C%22width%22%3A173.76499999999987%2C%22height%22%3A32.50689999999997%2C%22text%22%3A%2239%2020%22%7D%2C%7B%22x%22%3A1996.0001%2C%22y%22%3A796.48126%2C%22width%22%3A62.54729999999995%2C%22height%22%3A29.774900000000002%2C%22text%22%3A%2218%22%7D%2C%7B%22x%22%3A1644.6434%2C%22y%22%3A796.99475%2C%22width%22%3A39.83619999999996%2C%22height%22%3A36.941290000000095%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A1579.8955%2C%22y%22%3A800.5922%2C%22width%22%3A33.41919999999982%2C%22height%22%3A30.70625999999993%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A1443.7882%2C%22y%22%3A802.1681%2C%22width%22%3A89.75580000000014%2C%22height%22%3A30.577300000000037%2C%22text%22%3A%22INDEX%22%7D%2C%7B%22x%22%3A1456.6874%2C%22y%22%3A872.6329%2C%22width%22%3A51.930900000000065%2C%22height%22%3A44.67545000000007%2C%22text%22%3A%22DP%22%7D%2C%7B%22x%22%3A1666.7979%2C%22y%22%3A876.5332%2C%22width%22%3A24.970800000000054%2C%22height%22%3A44.53120000000001%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A1582.6803%2C%22y%22%3A876.681%2C%22width%22%3A30.303699999999935%2C%22height%22%3A36.30319999999995%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A1837.1824%2C%22y%22%3A876.8677%2C%22width%22%3A29.170000000000073%2C%22height%22%3A38.34353999999996%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A1975.7705%2C%22y%22%3A881.6277%2C%22width%22%3A81.94430000000011%2C%22height%22%3A30.516650000000027%2C%22text%22%3A%222584%22%7D%2C%7B%22x%22%3A2076.5957%2C%22y%22%3A883.59094%2C%22width%22%3A148.9304000000002%2C%22height%22%3A31.087220000000002%2C%22text%22%3A%224181%7C6765%22%7D%2C%7B%22x%22%3A1480.9971%2C%22y%22%3A988.48865%2C%22width%22%3A118.25739999999996%2C%22height%22%3A31.25884999999994%2C%22text%22%3A%22%E7%A9%BA%E7%9D%80%E4%B8%8D%E7%94%A8%22%7D%2C%7B%22x%22%3A1812.3007%2C%22y%22%3A1087.2909%2C%22width%22%3A128.98029999999994%2C%22height%22%3A37.169399999999996%2C%22text%22%3A%22%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%22%7D%2C%7B%22x%22%3A1413.1018%2C%22y%22%3A1078.9376%2C%22width%22%3A144.08990000000017%2C%22height%22%3A94.66750000000002%2C%22text%22%3A%22BULADONG%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23fbfbfa%22%2C%22id%22%3A%22u72934bdd%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u0c68417f" id="u0c68417f"><br></p><h2 data-lake-id="cvPeb" id="cvPeb"><span data-lake-id="u6c5fdc6a" id="u6c5fdc6a">3、【自低向上】dp 数组的迭代（递推）解法</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E8%A7%A3%E6%B3%953%EF%BC%9A%20DP%20table%20%E3%80%90%E8%87%AA%E4%BD%8E%E5%90%91%E4%B8%8A%E3%80%91dp%20%E6%95%B0%E7%BB%84%E7%9A%84%E8%BF%AD%E4%BB%A3%EF%BC%88%E9%80%92%E6%8E%A8%EF%BC%89%E8%A7%A3%E6%B3%95%5Cn%20*%20%2F%2F%20%3A%3A%3A%3A%E6%89%80%E8%B0%93%20%E3%80%90%E8%87%AA%E4%BD%8E%E5%90%91%E4%B8%8A%E3%80%91%20%E5%8D%B3%20%E6%8E%A8%E5%80%92%E8%BF%87%E7%A8%8B%EF%BC%8C%E4%BB%8E0%EF%BC%8C1%20%E6%8E%A8%E5%80%92%E5%87%BA%20f(2)%E7%AD%89%5Cn%20*%20%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AF%20O(n)%20%EF%BC%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6O(n)%5Cn%20************************************************%2F%5Cnvar%20fib3%20%3D%20function%20(N)%20%7B%5Cn%20%20%20%20if%20(N%20%3D%3D%3D%200)%20return%200%3B%5Cn%20%20%20%20let%20dp%20%3D%20new%20Array(N%20%2B%201).fill(0)%3B%5Cn%20%20%20%20%2F%2F%20base%20case%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%3B%5Cn%20%20%20%20dp%5B1%5D%20%3D%201%3B%5Cn%20%20%20%20%2F%2F%2F%2F%20%3A%3A%3A%3A%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%E6%96%B9%E7%A8%8B%5Cn%20%20%20%20for%20(let%20i%20%3D%202%3B%20i%20%3C%3D%20N%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20dp%5Bi%20-%201%5D%20%2B%20dp%5Bi%20-%202%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp%5BN%5D%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22tM7HL%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u13e5739c" id="u13e5739c"><span data-lake-id="u7fc8e35f" id="u7fc8e35f">算法的时间复杂度是</span><code data-lake-id="u07801f19" id="u07801f19"><span data-lake-id="udae09894" id="udae09894"> O(n)</span></code><span data-lake-id="ud689b0bd" id="ud689b0bd"> ，空间复杂度</span><code data-lake-id="u32b87508" id="u32b87508"><span data-lake-id="ud2822930" id="ud2822930">O(n)</span></code><span data-lake-id="ue5d32c84" id="ue5d32c84"> </span></p><p data-lake-id="udff00ccf" id="udff00ccf"><span data-lake-id="u62c56f1d" id="u62c56f1d">​</span><br></p><p data-lake-id="ucdb7b983" id="ucdb7b983"><span data-lake-id="ufae08817" id="ufae08817">其实，就是</span><code data-lake-id="uba860189" id="uba860189"><span data-lake-id="ua60b55b9" id="ua60b55b9">转态转移方程</span></code><span data-lake-id="u70848c07" id="u70848c07">的实现，如下：</span></p><p data-lake-id="u6ed5633d" id="u6ed5633d"><br></p><p data-lake-id="ub0b53016" id="ub0b53016"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F687303%2F1653388772791-7c595318-4e71-453a-850f-eefa738e1a06.png%22%2C%22taskId%22%3A%22u434b0a9a-1dae-4a5a-bd7f-3657fdc302d%22%2C%22clientId%22%3A%22u652a6e99-c1c9-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A368.90765380859375%2C%22height%22%3A180%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A263976%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1058%2C%22originHeight%22%3A516%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22stroke%22%2C%22search%22%3A%22%E5%8D%83%E4%B8%87%E4%B8%8D%E8%A6%81%E7%9C%8B%E4%B8%8D%E8%B5%B7%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%9C%80%E5%9B%B0%E9%9A%BE%E7%9A%84%20%E5%B0%B1%E6%98%AF%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8D%B3%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%E6%96%B9%E7%A8%8B%201%2CN%20-%201%2C2%20F(N)%20.%20(F(N-1)%2BF(N-2)%2CN%3E2%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A34.75645%2C%22y%22%3A26.016317%2C%22width%22%3A962.6142500000001%2C%22height%22%3A52.335432999999995%2C%22text%22%3A%22%E5%8D%83%E4%B8%87%E4%B8%8D%E8%A6%81%E7%9C%8B%E4%B8%8D%E8%B5%B7%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%9C%80%E5%9B%B0%E9%9A%BE%E7%9A%84%22%7D%2C%7B%22x%22%3A34.48361%2C%22y%22%3A98.94048%2C%22width%22%3A779.06516%2C%22height%22%3A47.15071000000002%2C%22text%22%3A%22%E5%B0%B1%E6%98%AF%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8D%B3%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%E6%96%B9%E7%A8%8B%22%7D%2C%7B%22x%22%3A350.9533%2C%22y%22%3A308.9893%2C%22width%22%3A245.33015%2C%22height%22%3A51.01812000000001%2C%22text%22%3A%221%2CN%20-%201%2C2%22%7D%2C%7B%22x%22%3A117.90449%2C%22y%22%3A340.9587%2C%22width%22%3A131.29654%2C%22height%22%3A65.01914%2C%22text%22%3A%22F(N)%20.%22%7D%2C%7B%22x%22%3A350.80475%2C%22y%22%3A377.9687%2C%22width%22%3A646.20375%2C%22height%22%3A59.44639999999998%2C%22text%22%3A%22(F(N-1)%2BF(N-2)%2CN%3E2%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23efeae3%22%2C%22id%22%3A%22ud09b0497%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="DaIOg" id="DaIOg"><span data-lake-id="u6a0bfb88" id="u6a0bfb88">4、空间复杂度降为 O(1)</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E8%A7%A3%E6%B3%954%EF%BC%9A%20%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BC%98%E5%8C%96%EF%BC%8C%E6%8A%8A%E4%BA%8C%E7%BB%B4%E7%9A%84dp%20table%20%E5%8E%8B%E6%88%90%E4%B8%80%E7%BB%B4%E7%9A%84%2C%E5%8D%B3%E5%8F%AA%E8%A6%81%E7%BB%B4%E6%8A%A4%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%20prev%20%20curr%5Cn%20************************************************%2F%5Cnvar%20fib4%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%200%20%7C%7C%20n%20%3D%3D%3D%201)%20return%20n%3B%5Cn%20%20%20%20let%20prev%20%3D%201%2C%20curr%20%3D%201%3B%5Cn%20%20%20%20for%20(let%20i%20%3D%202%3B%20i%20%3C%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20let%20sum%20%3D%20prev%20%2B%20curr%3B%5Cn%20%20%20%20%20%20%20%20prev%20%3D%20curr%3B%5Cn%20%20%20%20%20%20%20%20curr%20%3D%20sum%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20curr%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22NCiy3%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="uc2960187" id="uc2960187"><br></p>',body_draft_lake:'<!doctype lake><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="Eha94" id="Eha94"><span data-lake-id="u343f78b0" id="u343f78b0">斐波那契数列</span></h1><blockquote data-lake-id="uf22a6cd8" id="uf22a6cd8"><ul list="ue9f9e9f5"><li fid="uf3a47320" data-lake-id="u498539b6" id="u498539b6"><span data-lake-id="u1b706ee1" id="u1b706ee1">https://leetcode.cn/problems/fibonacci-number</span></li></ul></blockquote><h2 data-lake-id="tbzR4" id="tbzR4"><span data-lake-id="u220ec4d4" id="u220ec4d4">1、暴力递归</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%20https%3A%2F%2Fleetcode.cn%2Fproblems%2Ffibonacci-number%2F%5Cn%20************************************************%2F%5Cn%5Cn%5Cn%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E7%AC%AC%E4%B8%80%E7%A7%8D%E8%A7%A3%E6%B3%95%EF%BC%9A%E6%9A%B4%E5%8A%9B%E9%80%92%E5%BD%92%5Cn%20*%20%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9A%20O(n%5E2)%5Cn%20************************************************%2F%5Cn%2F**%5Cn%20*%20%40param%20%7Bnumber%7D%20n%5Cn%20*%20%40return%20%7Bnumber%7D%5Cn%20*%2F%5Cnvar%20fib%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%200)%20return%200%3B%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%201)%20return%201%3B%5Cn%20%20%20%20return%20fib(n%20-%201)%20%2B%20fib(n%20-%202)%3B%5Cn%7D%3B%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22One%20Dark%20Pro%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22W1bEt%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u7dcff2c0" id="u7dcff2c0"><span data-lake-id="u82887237" id="u82887237">算法复杂度</span><code data-lake-id="u893dca5d" id="u893dca5d"><span data-lake-id="u8c5c2517" id="u8c5c2517" class="lake-fontsize-12" style="color: rgb(50, 50, 50)">O(2^n)</span></code><span data-lake-id="u74205728" id="u74205728" class="lake-fontsize-12" style="color: rgb(50, 50, 50)"> </span><span data-lake-id="u3097114f" id="u3097114f">指数级别，爆炸，因为有</span><code data-lake-id="u80316504" id="u80316504"><strong><span data-lake-id="u259a1006" id="u259a1006">重叠子问题</span></strong></code></p><p data-lake-id="ue4f21c01" id="ue4f21c01"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F687303%2F1653387978842-556435f9-60f1-4a02-8076-0f4bdccd0a5f.png%22%2C%22taskId%22%3A%22ua184fe36-1c8f-4c4a-86f4-0643a0d0eba%22%2C%22clientId%22%3A%22u652a6e99-c1c9-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A513.2687683105469%2C%22height%22%3A277%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A776250%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1182%2C%22originHeight%22%3A638%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22stroke%22%2C%22search%22%3A%22F(20)%20ULADONG%20F(19)%20F(18)%20JABULADONG%20F(17)%20F(17)%20F(18)%20F(16))%20LABULADONG%20F(2)%20F(1)%20F(2)%20F(1)%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A602.56146%2C%22y%22%3A58.20098%2C%22width%22%3A85.69988999999998%2C%22height%22%3A33.11399%2C%22text%22%3A%22F(20)%22%7D%2C%7B%22x%22%3A885.82056%2C%22y%22%3A37.727093%2C%22width%22%3A161.67104000000006%2C%22height%22%3A108.58615700000001%2C%22text%22%3A%22ULADONG%22%7D%2C%7B%22x%22%3A319.12704%2C%22y%22%3A160.35815%2C%22width%22%3A88.29183999999998%2C%22height%22%3A45.792820000000006%2C%22text%22%3A%22F(19)%22%7D%2C%7B%22x%22%3A883.5569%2C%22y%22%3A168.1375%2C%22width%22%3A81.66210000000001%2C%22height%22%3A35.97284000000002%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A38.007473%2C%22y%22%3A128.3117%2C%22width%22%3A225.148597%2C%22height%22%3A155.19102%2C%22text%22%3A%22JABULADONG%22%7D%2C%7B%22x%22%3A485.8917%2C%22y%22%3A295.63824%2C%22width%22%3A84.86775999999998%2C%22height%22%3A38.48086000000001%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A710.0131%2C%22y%22%3A297.01898%2C%22width%22%3A90.25325999999995%2C%22height%22%3A40.95776999999998%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A149.98094%2C%22y%22%3A296.8287%2C%22width%22%3A82.80071000000001%2C%22height%22%3A33.863399999999956%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A1046.3545%2C%22y%22%3A298.05286%2C%22width%22%3A96.27310000000011%2C%22height%22%3A43.47334000000001%2C%22text%22%3A%22F(16))%22%7D%2C%7B%22x%22%3A757.81537%2C%22y%22%3A421.17065%2C%22width%22%3A234.11028999999996%2C%22height%22%3A156.71697999999992%2C%22text%22%3A%22LABULADONG%22%7D%2C%7B%22x%22%3A573.97644%2C%22y%22%3A547.92737%2C%22width%22%3A81.14832000000001%2C%22height%22%3A42.99992999999995%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A409.73602%2C%22y%22%3A552.2299%2C%22width%22%3A71.57895000000002%2C%22height%22%3A42.708639999999946%2C%22text%22%3A%22F(1)%22%7D%2C%7B%22x%22%3A237.28067%2C%22y%22%3A553.0803%2C%22width%22%3A77.99463000000003%2C%22height%22%3A39.52240000000006%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A70.6733%2C%22y%22%3A554.4615%2C%22width%22%3A73.93801%2C%22height%22%3A40.146960000000036%2C%22text%22%3A%22F(1)%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f5f4f1%22%2C%22id%22%3A%22ufec9047d%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="HwaZt" id="HwaZt"><span data-lake-id="uff41c115" id="uff41c115">2、【自顶向下】带备忘录的递归算法</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E8%A7%A3%E5%86%B3%E9%87%8D%E5%8F%A0%E5%AD%90%E9%97%AE%E9%A2%98%20-%20%E5%B8%A6%E5%A4%87%E5%BF%98%E5%BD%95%E7%9A%84%E9%80%92%E5%BD%92%E8%A7%A3%E6%B3%95%5Cn%20*%20%2F%2F%20%3A%3A%3A%3A%E3%80%90%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E3%80%91%E7%9A%84%E6%80%9D%E8%B7%AF%5Cn%20*%20%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AF%20O(n)%20%EF%BC%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6O(n)%5Cn%20************************************************%2F%5Cnvar%20fib1%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20%2F%2F%20%E5%A4%87%E5%BF%98%E5%BD%95%E5%85%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B8%BA%200%5Cn%20%20%20%20let%20memo%20%3D%20new%20Array(n%20%2B%201).fill(0)%3B%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E6%B3%A8%E6%84%8F%EF%BC%8C%E8%BF%99%E9%87%8C%E5%88%A9%E7%94%A8%E4%BA%86%E9%97%AD%E5%8C%85%EF%BC%8C%E6%8A%8Amemo%E4%BC%A0%E5%85%A5%EF%BC%8C%E8%83%BD%E5%A4%9F%E4%BF%9D%E8%AF%81%E4%B8%8D%E9%94%80%E6%AF%81%5Cn%20%20%20%20%2F%2F%20%E8%BF%9B%E8%A1%8C%E5%B8%A6%E5%A4%87%E5%BF%98%E5%BD%95%E7%9A%84%E9%80%92%E5%BD%92%5Cn%20%20%20%20return%20dp(memo%2C%20n)%3B%5Cn%7D%3B%5Cn%5Cn%2F%2F%20%E5%B8%A6%E7%9D%80%E5%A4%87%E5%BF%98%E5%BD%95%E8%BF%9B%E8%A1%8C%E9%80%92%E5%BD%92%5Cnvar%20dp%20%3D%20function%20(memo%2C%20n)%20%7B%5Cn%20%20%20%20%2F%2F%20base%20case%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%200%20%7C%7C%20n%20%3D%3D%3D%201)%20return%20n%3B%5Cn%20%20%20%20%2F%2F%20%E5%B7%B2%E7%BB%8F%E8%AE%A1%E7%AE%97%E8%BF%87%EF%BC%8C%E4%B8%8D%E7%94%A8%E5%86%8D%E8%AE%A1%E7%AE%97%E4%BA%86%5Cn%20%20%20%20if%20(memo%5Bn%5D%20!%3D%3D%200)%20return%20memo%5Bn%5D%3B%5Cn%20%20%20%20%2F%2F%20%E5%90%A6%E5%88%99%EF%BC%8C%E9%87%8D%E6%96%B0%E8%AE%A1%E7%AE%97%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AD%98%E5%88%B0memo%E4%B8%AD%5Cn%20%20%20%20%2F%2F%20%3A%3A%3A%3A%E8%BF%99%E9%87%8C%E5%88%A9%E7%94%A8%E4%BA%86%E9%97%AD%E5%8C%85%EF%BC%8C%E6%8A%8Amemo%E4%BC%A0%E5%85%A5%5Cn%20%20%20%20memo%5Bn%5D%20%3D%20dp(memo%2C%20n%20-%201)%20%2B%20dp(memo%2C%20n%20-%202)%3B%5Cn%20%20%20%20return%20memo%5Bn%5D%3B%5Cn%7D%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22shxRe%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u7cf1e82d" id="u7cf1e82d"><span data-lake-id="u4ddac9f2" id="u4ddac9f2">算法的时间复杂度是</span><code data-lake-id="ucce13f7d" id="ucce13f7d"><span data-lake-id="u120eaedf" id="u120eaedf"> O(n)</span></code><span data-lake-id="ufcf53d87" id="ufcf53d87"> ，空间复杂度</span><code data-lake-id="u1fb99d99" id="u1fb99d99"><span data-lake-id="ud21dfe73" id="ud21dfe73">O(n)</span></code></p><p data-lake-id="u8e9cd47c" id="u8e9cd47c"><strong><span data-lake-id="ub96b9f14" id="ub96b9f14">如下图</span></strong></p><p data-lake-id="u48f61ccd" id="u48f61ccd"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F687303%2F1653388428954-4d6c0c35-1d35-421b-a8f7-c137e30c919a.png%22%2C%22taskId%22%3A%22u0e21e806-2b7b-4009-8cc6-45cac29efd5%22%2C%22clientId%22%3A%22u652a6e99-c1c9-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A956%2C%22height%22%3A470%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1328714%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A2382%2C%22originHeight%22%3A1172%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22stroke%22%2C%22search%22%3A%22F(20)%20%E5%89%AA%E6%9E%9D%20F(20))%20%3EF(19)%5D%20%3EF(18))%2C%2B(17)%20F(2)%20F(1)%20F(19)%20F(18)%20F(16)%20F(17)%20F(17)%20F(18)%20%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%20F(17)%20F(16)%20F(16)%20F(15)%20F(18)%20F(19)%20F(20)%20F(1)%20F(2)%20F(3)%202%2039%2020%2018%201%200%20INDEX%20DP%201%200%202%202584%204181%7C6765%20%E7%A9%BA%E7%9D%80%E4%B8%8D%E7%94%A8%20%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%20BULADONG%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A540.9178%2C%22y%22%3A154.54541%2C%22width%22%3A66.63914999999997%2C%22height%22%3A28.484129999999993%2C%22text%22%3A%22F(20)%22%7D%2C%7B%22x%22%3A1132.3682%2C%22y%22%3A170.54472%2C%22width%22%3A74.55170000000021%2C%22height%22%3A38.14381999999998%2C%22text%22%3A%22%E5%89%AA%E6%9E%9D%22%7D%2C%7B%22x%22%3A1437.1819%2C%22y%22%3A198.99492%2C%22width%22%3A452.5311999999999%2C%22height%22%3A38.37111999999999%2C%22text%22%3A%22F(20))%20%3EF(19)%5D%20%3EF(18))%2C%2B(17)%22%7D%2C%7B%22x%22%3A2063.0642%2C%22y%22%3A208.20622%2C%22width%22%3A65.05780000000004%2C%22height%22%3A36.388090000000005%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A2185.5747%2C%22y%22%3A208.71098%2C%22width%22%3A58.26330000000007%2C%22height%22%3A33.755390000000006%2C%22text%22%3A%22F(1)%22%7D%2C%7B%22x%22%3A325.76324%2C%22y%22%3A235.94708%2C%22width%22%3A70.32126%2C%22height%22%3A31.866850000000028%2C%22text%22%3A%22F(19)%22%7D%2C%7B%22x%22%3A752.60077%2C%22y%22%3A237.50089%2C%22width%22%3A61.27886999999998%2C%22height%22%3A31.225670000000008%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A872.2939%2C%22y%22%3A331.95758%2C%22width%22%3A71.99704999999994%2C%22height%22%3A37.97582%2C%22text%22%3A%22F(16)%22%7D%2C%7B%22x%22%3A451.62103%2C%22y%22%3A332.2832%2C%22width%22%3A70.79827%2C%22height%22%3A33.55196999999998%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A619.8376%2C%22y%22%3A333.91608%2C%22width%22%3A69.35360000000003%2C%22height%22%3A33.34091999999998%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A198.13295%2C%22y%22%3A333.85626%2C%22width%22%3A67.24937%2C%22height%22%3A27.967709999999954%2C%22text%22%3A%22F(18)%22%7D%2C%7B%22x%22%3A1756.0726%2C%22y%22%3A369.61404%2C%22width%22%3A180.3954000000001%2C%22height%22%3A48.29090000000002%2C%22text%22%3A%22%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%22%7D%2C%7B%22x%22%3A136.34775%2C%22y%22%3A470.14334%2C%22width%22%3A65.65277%2C%22height%22%3A32.54571999999996%2C%22text%22%3A%22F(17)%22%7D%2C%7B%22x%22%3A267.17322%2C%22y%22%3A471.0412%2C%22width%22%3A68.60888%2C%22height%22%3A33.07637999999997%2C%22text%22%3A%22F(16)%22%7D%2C%7B%22x%22%3A384.70993%2C%22y%22%3A474.4189%2C%22width%22%3A66.01285000000001%2C%22height%22%3A29.20598000000001%2C%22text%22%3A%22F(16)%22%7D%2C%7B%22x%22%3A521.97174%2C%22y%22%3A470.99698%2C%22width%22%3A67.33893%2C%22height%22%3A31.889560000000017%2C%22text%22%3A%22F(15)%22%7D%2C%7B%22x%22%3A1984.4673%2C%22y%22%3A732.9523%2C%22width%22%3A239.70529999999985%2C%22height%22%3A31.928739999999948%2C%22text%22%3A%22F(18)%20F(19)%20F(20)%22%7D%2C%7B%22x%22%3A1649.9146%2C%22y%22%3A733.63367%2C%22width%22%3A55.33739999999989%2C%22height%22%3A34.93782999999996%2C%22text%22%3A%22F(1)%22%7D%2C%7B%22x%22%3A1730.7638%2C%22y%22%3A734.0249%2C%22width%22%3A64.2482%2C%22height%22%3A32.231700000000046%2C%22text%22%3A%22F(2)%22%7D%2C%7B%22x%22%3A1825.9364%2C%22y%22%3A734.1151%2C%22width%22%3A61.07680000000005%2C%22height%22%3A30.837999999999965%2C%22text%22%3A%22F(3)%22%7D%2C%7B%22x%22%3A1749.0444%2C%22y%22%3A794.1478%2C%22width%22%3A27.296100000000024%2C%22height%22%3A38.675260000000094%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A2036.013%2C%22y%22%3A795.4731%2C%22width%22%3A173.76499999999987%2C%22height%22%3A32.50689999999997%2C%22text%22%3A%2239%2020%22%7D%2C%7B%22x%22%3A1996.0001%2C%22y%22%3A796.48126%2C%22width%22%3A62.54729999999995%2C%22height%22%3A29.774900000000002%2C%22text%22%3A%2218%22%7D%2C%7B%22x%22%3A1644.6434%2C%22y%22%3A796.99475%2C%22width%22%3A39.83619999999996%2C%22height%22%3A36.941290000000095%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A1579.8955%2C%22y%22%3A800.5922%2C%22width%22%3A33.41919999999982%2C%22height%22%3A30.70625999999993%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A1443.7882%2C%22y%22%3A802.1681%2C%22width%22%3A89.75580000000014%2C%22height%22%3A30.577300000000037%2C%22text%22%3A%22INDEX%22%7D%2C%7B%22x%22%3A1456.6874%2C%22y%22%3A872.6329%2C%22width%22%3A51.930900000000065%2C%22height%22%3A44.67545000000007%2C%22text%22%3A%22DP%22%7D%2C%7B%22x%22%3A1666.7979%2C%22y%22%3A876.5332%2C%22width%22%3A24.970800000000054%2C%22height%22%3A44.53120000000001%2C%22text%22%3A%221%22%7D%2C%7B%22x%22%3A1582.6803%2C%22y%22%3A876.681%2C%22width%22%3A30.303699999999935%2C%22height%22%3A36.30319999999995%2C%22text%22%3A%220%22%7D%2C%7B%22x%22%3A1837.1824%2C%22y%22%3A876.8677%2C%22width%22%3A29.170000000000073%2C%22height%22%3A38.34353999999996%2C%22text%22%3A%222%22%7D%2C%7B%22x%22%3A1975.7705%2C%22y%22%3A881.6277%2C%22width%22%3A81.94430000000011%2C%22height%22%3A30.516650000000027%2C%22text%22%3A%222584%22%7D%2C%7B%22x%22%3A2076.5957%2C%22y%22%3A883.59094%2C%22width%22%3A148.9304000000002%2C%22height%22%3A31.087220000000002%2C%22text%22%3A%224181%7C6765%22%7D%2C%7B%22x%22%3A1480.9971%2C%22y%22%3A988.48865%2C%22width%22%3A118.25739999999996%2C%22height%22%3A31.25884999999994%2C%22text%22%3A%22%E7%A9%BA%E7%9D%80%E4%B8%8D%E7%94%A8%22%7D%2C%7B%22x%22%3A1812.3007%2C%22y%22%3A1087.2909%2C%22width%22%3A128.98029999999994%2C%22height%22%3A37.169399999999996%2C%22text%22%3A%22%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%22%7D%2C%7B%22x%22%3A1413.1018%2C%22y%22%3A1078.9376%2C%22width%22%3A144.08990000000017%2C%22height%22%3A94.66750000000002%2C%22text%22%3A%22BULADONG%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23fbfbfa%22%2C%22id%22%3A%22u72934bdd%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u0c68417f" id="u0c68417f"><br></p><h2 data-lake-id="cvPeb" id="cvPeb"><span data-lake-id="u6c5fdc6a" id="u6c5fdc6a">3、【自低向上】dp 数组的迭代（递推）解法</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E8%A7%A3%E6%B3%953%EF%BC%9A%20DP%20table%20%E3%80%90%E8%87%AA%E4%BD%8E%E5%90%91%E4%B8%8A%E3%80%91dp%20%E6%95%B0%E7%BB%84%E7%9A%84%E8%BF%AD%E4%BB%A3%EF%BC%88%E9%80%92%E6%8E%A8%EF%BC%89%E8%A7%A3%E6%B3%95%5Cn%20*%20%2F%2F%20%3A%3A%3A%3A%E6%89%80%E8%B0%93%20%E3%80%90%E8%87%AA%E4%BD%8E%E5%90%91%E4%B8%8A%E3%80%91%20%E5%8D%B3%20%E6%8E%A8%E5%80%92%E8%BF%87%E7%A8%8B%EF%BC%8C%E4%BB%8E0%EF%BC%8C1%20%E6%8E%A8%E5%80%92%E5%87%BA%20f(2)%E7%AD%89%5Cn%20*%20%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AF%20O(n)%20%EF%BC%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6O(n)%5Cn%20************************************************%2F%5Cnvar%20fib3%20%3D%20function%20(N)%20%7B%5Cn%20%20%20%20if%20(N%20%3D%3D%3D%200)%20return%200%3B%5Cn%20%20%20%20let%20dp%20%3D%20new%20Array(N%20%2B%201).fill(0)%3B%5Cn%20%20%20%20%2F%2F%20base%20case%5Cn%20%20%20%20dp%5B0%5D%20%3D%200%3B%5Cn%20%20%20%20dp%5B1%5D%20%3D%201%3B%5Cn%20%20%20%20%2F%2F%2F%2F%20%3A%3A%3A%3A%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%E6%96%B9%E7%A8%8B%5Cn%20%20%20%20for%20(let%20i%20%3D%202%3B%20i%20%3C%3D%20N%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20dp%5Bi%5D%20%3D%20dp%5Bi%20-%201%5D%20%2B%20dp%5Bi%20-%202%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20dp%5BN%5D%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22tM7HL%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u13e5739c" id="u13e5739c"><span data-lake-id="u7fc8e35f" id="u7fc8e35f">算法的时间复杂度是</span><code data-lake-id="u07801f19" id="u07801f19"><span data-lake-id="udae09894" id="udae09894"> O(n)</span></code><span data-lake-id="ud689b0bd" id="ud689b0bd"> ，空间复杂度</span><code data-lake-id="u32b87508" id="u32b87508"><span data-lake-id="ud2822930" id="ud2822930">O(n)</span></code><span data-lake-id="ue5d32c84" id="ue5d32c84"> </span></p><p data-lake-id="udff00ccf" id="udff00ccf"><span data-lake-id="u62c56f1d" id="u62c56f1d">​</span><br></p><p data-lake-id="ucdb7b983" id="ucdb7b983"><span data-lake-id="ufae08817" id="ufae08817">其实，就是</span><code data-lake-id="uba860189" id="uba860189"><span data-lake-id="ua60b55b9" id="ua60b55b9">转态转移方程</span></code><span data-lake-id="u70848c07" id="u70848c07">的实现，如下：</span></p><p data-lake-id="u6ed5633d" id="u6ed5633d"><br></p><p data-lake-id="ub0b53016" id="ub0b53016"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F687303%2F1653388772791-7c595318-4e71-453a-850f-eefa738e1a06.png%22%2C%22taskId%22%3A%22u434b0a9a-1dae-4a5a-bd7f-3657fdc302d%22%2C%22clientId%22%3A%22u652a6e99-c1c9-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A368.90765380859375%2C%22height%22%3A180%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A263976%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A1058%2C%22originHeight%22%3A516%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22stroke%22%2C%22search%22%3A%22%E5%8D%83%E4%B8%87%E4%B8%8D%E8%A6%81%E7%9C%8B%E4%B8%8D%E8%B5%B7%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%9C%80%E5%9B%B0%E9%9A%BE%E7%9A%84%20%E5%B0%B1%E6%98%AF%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8D%B3%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%E6%96%B9%E7%A8%8B%201%2CN%20-%201%2C2%20F(N)%20.%20(F(N-1)%2BF(N-2)%2CN%3E2%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A34.75645%2C%22y%22%3A26.016317%2C%22width%22%3A962.6142500000001%2C%22height%22%3A52.335432999999995%2C%22text%22%3A%22%E5%8D%83%E4%B8%87%E4%B8%8D%E8%A6%81%E7%9C%8B%E4%B8%8D%E8%B5%B7%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%9C%80%E5%9B%B0%E9%9A%BE%E7%9A%84%22%7D%2C%7B%22x%22%3A34.48361%2C%22y%22%3A98.94048%2C%22width%22%3A779.06516%2C%22height%22%3A47.15071000000002%2C%22text%22%3A%22%E5%B0%B1%E6%98%AF%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%9A%B4%E5%8A%9B%E8%A7%A3%2C%E5%8D%B3%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BB%E6%96%B9%E7%A8%8B%22%7D%2C%7B%22x%22%3A350.9533%2C%22y%22%3A308.9893%2C%22width%22%3A245.33015%2C%22height%22%3A51.01812000000001%2C%22text%22%3A%221%2CN%20-%201%2C2%22%7D%2C%7B%22x%22%3A117.90449%2C%22y%22%3A340.9587%2C%22width%22%3A131.29654%2C%22height%22%3A65.01914%2C%22text%22%3A%22F(N)%20.%22%7D%2C%7B%22x%22%3A350.80475%2C%22y%22%3A377.9687%2C%22width%22%3A646.20375%2C%22height%22%3A59.44639999999998%2C%22text%22%3A%22(F(N-1)%2BF(N-2)%2CN%3E2%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23efeae3%22%2C%22id%22%3A%22ud09b0497%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="DaIOg" id="DaIOg"><span data-lake-id="u6a0bfb88" id="u6a0bfb88">4、空间复杂度降为 O(1)</span></h2><card type="inline" name="codeblock" value="data:%7B%22mode%22%3A%22typescript%22%2C%22code%22%3A%22%2F*************************************************%5Cn%20*%20%3A%3A%3A%3A%E8%A7%A3%E6%B3%954%EF%BC%9A%20%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BC%98%E5%8C%96%EF%BC%8C%E6%8A%8A%E4%BA%8C%E7%BB%B4%E7%9A%84dp%20table%20%E5%8E%8B%E6%88%90%E4%B8%80%E7%BB%B4%E7%9A%84%2C%E5%8D%B3%E5%8F%AA%E8%A6%81%E7%BB%B4%E6%8A%A4%E4%B8%A4%E4%B8%AA%E5%8F%98%E9%87%8F%20prev%20%20curr%5Cn%20************************************************%2F%5Cnvar%20fib4%20%3D%20function%20(n)%20%7B%5Cn%20%20%20%20if%20(n%20%3D%3D%3D%200%20%7C%7C%20n%20%3D%3D%3D%201)%20return%20n%3B%5Cn%20%20%20%20let%20prev%20%3D%201%2C%20curr%20%3D%201%3B%5Cn%20%20%20%20for%20(let%20i%20%3D%202%3B%20i%20%3C%20n%3B%20i%2B%2B)%20%7B%5Cn%20%20%20%20%20%20%20%20let%20sum%20%3D%20prev%20%2B%20curr%3B%5Cn%20%20%20%20%20%20%20%20prev%20%3D%20curr%3B%5Cn%20%20%20%20%20%20%20%20curr%20%3D%20sum%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20curr%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Night%20Owl%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22NCiy3%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="uc2960187" id="uc2960187"><br></p>',public:1,status:1,view_status:0,read_status:1,likes_count:0,comments_count:0,content_updated_at:"2023-03-17T10:17:05.000Z",deleted_at:null,created_at:"2023-03-11T09:27:43.000Z",updated_at:"2023-03-19T11:28:03.000Z",published_at:"2023-03-17T10:17:05.000Z",first_published_at:"2023-03-12T00:56:07.408Z",word_count:626,cover:"https://cdn.nlark.com/yuque/0/2022/png/687303/1653387978842-556435f9-60f1-4a02-8076-0f4bdccd0a5f.png",description:"斐波那契数列https://leetcode.cn/problems/fibonacci-number1、暴力递归/*************************************************  * ::::斐波那契数列 https://leetcode.cn/probl...",custom_description:null,hits:0,_serializer:"v2.doc_detail"}];export{a as p};
