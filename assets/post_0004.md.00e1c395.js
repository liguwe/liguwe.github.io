import{_ as o,o as l,c as a,V as n,C as s}from"./chunks/framework.5e406744.js";const h=JSON.parse('{"title":"长列表渲染优化的一些思路","description":"","frontmatter":{},"headers":[],"relativePath":"post/0004.md","filePath":"post/0004.md"}'),e={name:"post/0004.md"},p=n(`<p>#fe #前端性能</p><h1 id="长列表渲染优化的一些思路" tabindex="-1">长列表渲染优化的一些思路 <a class="header-anchor" href="#长列表渲染优化的一些思路" aria-label="Permalink to &quot;长列表渲染优化的一些思路&quot;">​</a></h1><h2 id="先说导致长列表性能及体现不佳的原因" tabindex="-1">先说导致长列表性能及体现不佳的原因 <a class="header-anchor" href="#先说导致长列表性能及体现不佳的原因" aria-label="Permalink to &quot;先说导致长列表性能及体现不佳的原因&quot;">​</a></h2><p>需要 <code>渲染大量的DOM节点</code> 及 <code>频繁的DOM操作</code> ，展开说就是 每个节点都需要浏览器 进行<code>计算</code>、<code>布局</code>和<code>绘制</code> 等。 如果总结，那么其实就是 所谓的 <strong>CPU的瓶颈</strong></p><p>另外，就是一些网络原因了，毕竟请求总是需要耗费时间的，这就是所谓的 <strong>IO的瓶颈</strong> （这里主要指<code>网络IO</code>）</p><h2 id="一些常见的优化思路" tabindex="-1">一些常见的优化思路 <a class="header-anchor" href="#一些常见的优化思路" aria-label="Permalink to &quot;一些常见的优化思路&quot;">​</a></h2><h3 id="_1、分页" tabindex="-1">1、分页 <a class="header-anchor" href="#_1、分页" aria-label="Permalink to &quot;1、分页&quot;">​</a></h3><p>最简单且见效的方法，但需要与 <code>用户体验</code> 做平衡</p><h3 id="_2、虚拟滚动、虚拟列表" tabindex="-1">2、虚拟滚动、虚拟列表 <a class="header-anchor" href="#_2、虚拟滚动、虚拟列表" aria-label="Permalink to &quot;2、虚拟滚动、虚拟列表&quot;">​</a></h3><p>比较常见且大规模应用的思路，具体的一些<code>要点</code>：</p><ul><li><code>可视区域</code>： 做<code>绝对定位</code>，left、right、top 设置为 0</li><li><code>滚动区域</code>：用于<code>形成滚动条</code>，做绝对定位，<code>left、right、top</code> 设置为 0，<code>z-index:-1</code></li><li><code>真实渲染区域</code>：滚动时使用<code>translate3d(x,y,z)</code></li></ul><p>具体步骤：</p><ol><li>计算当前可见区域起始数据的 <code>startIndex</code></li><li>计算当前可见区域结束数据的 <code>endIndex</code></li><li>计算当前可见区域的数据，并渲染到页面中</li><li>计算 <code>startIndex</code> 对应的数据在整个列表中的偏移位置 <code>startOffset</code>，并设置到列表上</li><li>在滚动的时候，修改<code>真实渲染区域</code>的 <code>transform: translate3d(0, y, 0)</code></li></ol><p>下面是一段示例代码：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">updateVisibleData</span><span style="color:#A6ACCD;">(scrollTop) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 取得可见区域的可见列表项数量</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">visibleCount</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ceil</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientHeight</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">itemHeight</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 取得可见区域的起始数据索引</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">itemHeight</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 取得可见区域的结束数据索引</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">visibleCount</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 计算出可见区域对应的数据，让 Vue.js 更新</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">visibleData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 把可见区域的 top 设置为起始元素在整个列表中的位置（使用 transform 是为了更好的性能）</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">webkitTransform</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">translate3d(0, </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;"> start </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">itemHeight </span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">px, 0)</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><code>动态高度</code>的场景：需要在渲染时<code>动态计算</code>每个列表项的高度，并根据<code>实际高度</code>进行渲染，下面是<code>updateVisibleData</code> 的一个思路。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">updateVisibleData</span><span style="color:#A6ACCD;">(scrollTop) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">start</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">findNearestItemIndex</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">findNearestItemIndex</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">scrollTop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clientHeight</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">visibleData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">end</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 通过具体方法来设计</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">content</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">style</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">webkitTransform</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">translate3d(0, </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">getItemSizeAndOffset</span><span style="color:#A6ACCD;">(start)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offset </span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">px, 0)</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>一个细节，<code>ios</code> 没法实时 触发 <code>scroll</code> 的问题？</p><ul><li>使用 <code>iscroll</code> 或者 <code>better-scroll</code> 等成熟的第三方库</li><li><code>ontouchmove</code> 来兼容下</li><li><code>-webkit-overflow-scrolling:touch</code> 设置有<code>回弹效果</code><ul><li><code>auto</code>: 使用普通滚动, 当手指从触摸屏上移开，滚动会立即停止。</li><li><code>touch</code> , 有回弹效果</li></ul></li></ul><p>其他的一些细节优化点：</p><ul><li>使用<code>骨架片</code>优化白屏</li><li>使用新的API，提高性能 <ul><li><code>scroll</code> 时，使用 <code>requestAnimationFrame</code> 来包装回调</li><li>或者做下<code>节流</code></li></ul></li><li>使用<code>缓存</code>，需要把<code>尺寸、偏移</code>等信息进行一个<code>缓存</code></li><li>图片<code>懒加载</code></li></ul><h2 id="_3、其他的思路" tabindex="-1">3、其他的思路 <a class="header-anchor" href="#_3、其他的思路" aria-label="Permalink to &quot;3、其他的思路&quot;">​</a></h2><ul><li>使用<code>缓存</code> ，包括数据缓存，也包括重复利用节点等</li><li><code>懒加载</code> 与 <code>预加载</code></li><li>减少DOM操作 ，精简 DOM 结构</li><li>使用<code>Web Worker</code> 将页面的<code>渲染</code>和<code>计算逻辑</code>分离开来</li><li>服务器端渲染 ， <code>SSR</code></li><li>CSS布局优化，减少<code>回流</code>等</li><li>CSS3硬件加速</li><li>优化渲染性能，比如<code>CSS样式优化</code>和 <code>JS性能优化</code></li><li>图片优化 ， <code>懒加载</code>和<code>预加载</code> 及 <code>压缩</code> ，<code>缩略图</code> ， 图片格式比如 <code>WebP</code> 更小，<code>jpg</code> 更快渲染等</li><li>使用渐进式渲染 ，先渲染关键内容</li><li>新 API 使用，比如 <code>requestIdleCallback</code> 空闲时间再执行</li><li><code>HTTP</code>请求优化等</li></ul><blockquote><p>[!tip] JPEG 格式不支持透明度设置</p></blockquote><h2 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h2><p>还是需要根据<code>实际情况</code> 选择 <code>ROI</code> 最大的方案，找 主要矛盾。</p><hr>`,27),c=s("div",{class:"liguwe-doc-footer"},[s("div",{class:"liguwe-doc-footer-edit-link"},[s("p",{class:"liguwe-doc-footer-p"},[s("svg",{t:"1687912573060",class:"icon",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"1498"},[s("path",{d:"M854.6 370.6c-9.9-39.4 9.9-102.2 73.4-124.4l-67.9-3.6s-25.7-90-143.6-98c-117.8-8.1-194.9-3-195-3 0.1 0 87.4 55.6 52.4 154.7-25.6 52.5-65.8 95.6-108.8 144.7-1.3 1.3-2.5 2.6-3.5 3.7C319.4 605 96 860 96 860c245.9 64.4 410.7-6.3 508.2-91.1 20.5-0.2 35.9-0.3 46.3-0.3 135.8 0 250.6-117.6 245.9-248.4-3.2-89.9-31.9-110.2-41.8-149.6z m-204.1 334c-10.6 0-26.2 0.1-46.8 0.3l-23.6 0.2-17.8 15.5c-47.1 41-104.4 71.5-171.4 87.6-52.5 12.6-110 16.2-172.7 9.6 18-20.5 36.5-41.6 55.4-63.1 92-104.6 173.8-197.5 236.9-268.5l1.4-1.4 1.3-1.5c4.1-4.6 20.6-23.3 24.7-28.1 9.7-11.1 17.3-19.9 24.5-28.6 30.7-36.7 52.2-67.8 69-102.2l1.6-3.3 1.2-3.4c13.7-38.8 15.4-76.9 6.2-112.8 22.5 0.7 46.5 1.9 71.7 3.6 33.3 2.3 55.5 12.9 71.1 29.2 5.8 6 10.2 12.5 13.4 18.7 1 2 1.7 3.6 2.3 5l5 17.7c-15.7 34.5-19.9 73.3-11.4 107.2 3 11.8 6.9 22.4 12.3 34.4 2.1 4.7 9.5 20.1 11 23.3 10.3 22.7 15.4 43 16.7 78.7 3.3 94.6-82.7 181.9-182 181.9z","p-id":"1499",fill:"#10b981"})]),s("a",{href:"https://www.yuque.com/liguwe/post/0004",target:"_blank",class:"liguwe-doc-footer-edit-link-a"}," View this page on Yuque ")]),s("p",{class:"liguwe-doc-footer-p"},[s("svg",{t:"1687913054251",class:"icon",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5173"},[s("path",{d:"M853.333333 501.333333c-17.066667 0-32 14.933333-32 32v320c0 6.4-4.266667 10.666667-10.666666 10.666667H170.666667c-6.4 0-10.666667-4.266667-10.666667-10.666667V213.333333c0-6.4 4.266667-10.666667 10.666667-10.666666h320c17.066667 0 32-14.933333 32-32s-14.933333-32-32-32H170.666667c-40.533333 0-74.666667 34.133333-74.666667 74.666666v640c0 40.533333 34.133333 74.666667 74.666667 74.666667h640c40.533333 0 74.666667-34.133333 74.666666-74.666667V533.333333c0-17.066667-14.933333-32-32-32z",fill:"#10b981","p-id":"5174"}),s("path",{d:"M405.333333 484.266667l-32 125.866666c-2.133333 10.666667 0 23.466667 8.533334 29.866667 6.4 6.4 14.933333 8.533333 23.466666 8.533333h8.533334l125.866666-32c6.4-2.133333 10.666667-4.266667 14.933334-8.533333l300.8-300.8c38.4-38.4 38.4-102.4 0-140.8-38.4-38.4-102.4-38.4-140.8 0L413.866667 469.333333c-4.266667 4.266667-6.4 8.533333-8.533334 14.933334z m59.733334 23.466666L761.6 213.333333c12.8-12.8 36.266667-12.8 49.066667 0 12.8 12.8 12.8 36.266667 0 49.066667L516.266667 558.933333l-66.133334 17.066667 14.933334-68.266667z",fill:"#10b981","p-id":"5175"})]),s("a",{href:"https://github.com/liguwe/liguwe.github.io/blob/master/docs/0004.md",target:"_blank",class:"liguwe-doc-footer-edit-link-a"},"Edit this page on Github")]),s("p",{class:"liguwe-doc-footer-p"},[s("svg",{t:"1687912510038",class:"icon",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"2280"},[s("path",{d:"M746.666667 106.666667a192 192 0 0 1 192 192v373.333333a192 192 0 0 1-192 192h-107.925334l-97.749333 90.496a42.666667 42.666667 0 0 1-57.984 0L385.28 864H277.333333a192 192 0 0 1-192-192V298.666667a192 192 0 0 1 192-192h469.333334z m0 64H277.333333a128 128 0 0 0-128 128v373.333333a128 128 0 0 0 128 128h107.925334a64 64 0 0 1 43.477333 17.045333L512 894.122667l83.264-77.077334a64 64 0 0 1 43.477333-17.045333H746.666667a128 128 0 0 0 128-128V298.666667a128 128 0 0 0-128-128zM512 426.666667a54.677333 54.677333 0 0 1 54.634667 54.698666A54.677333 54.677333 0 0 1 512 536.064a54.677333 54.677333 0 0 1-54.634667-54.698667A54.677333 54.677333 0 0 1 512 426.666667z m-196.693333 0a54.677333 54.677333 0 0 1 54.634666 54.698666 54.677333 54.677333 0 0 1-54.613333 54.698667 54.677333 54.677333 0 0 1-54.634667-54.698667A54.677333 54.677333 0 0 1 315.306667 426.666667z m393.386666 0a54.677333 54.677333 0 0 1 54.613334 54.698666 54.677333 54.677333 0 0 1-54.613334 54.698667 54.677333 54.677333 0 0 1-54.634666-54.698667A54.677333 54.677333 0 0 1 708.672 426.666667z",fill:"#10b981","p-id":"2281"})]),s("a",{href:"https://github.com/liguwe/liguwe.github.io/issues/new?title=0004.长列表渲染优化的一些思路@FE&labels=liguwe.site",target:"_blank",class:"liguwe-doc-footer-edit-link-a"}," Comment this page on GitHub Issues ")])]),s("p",{class:"liguwe-doc-footer-update-time"},[s("i",null,"Last updated：2023.03.17")]),s("div",{id:"liguwe-comment"})],-1),t=[p,c];function r(i,F,y,d,D,A){return l(),a("div",null,t)}const u=o(e,[["render",r]]);export{h as __pageData,u as default};
